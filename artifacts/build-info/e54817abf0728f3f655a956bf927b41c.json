{
	"id": "e54817abf0728f3f655a956bf927b41c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CollateralToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"./Dependencies/IERC20.sol\";\nimport \"./Dependencies/SafeMath.sol\";\nimport \"./Dependencies/Address.sol\";\n\ncontract CollateralToken {\n    using SafeMath for uint256;\n    using Address for address;\n\n    // ERC20 token details\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    uint256 public totalSupply;\n\n    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _initialSupply)  {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _initialSupply * (10 ** uint256(decimals));\n        balanceOf[msg.sender] = totalSupply;\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\n        require(balanceOf[_from] >= _value, \"ERC20: transfer amount exceeds balance\");\n        balanceOf[_from] = balanceOf[_from].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        _transfer(_from, _to, _value);\n        uint256 currentAllowance = allowance[_from][msg.sender];\n        require(currentAllowance >= _value, \"ERC20: transfer amount exceeds allowance\");\n        allowance[_from][msg.sender] = currentAllowance - _value;\n        return true;\n    }\n}"
			},
			"contracts/Dependencies/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/Dependencies/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on OpenZeppelin's SafeMath:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n *\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/Dependencies/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on the OpenZeppelin IER20 interface:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n *\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    \n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/CollateralToken.sol": {
				"CollateralToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CollateralToken.sol\":169:2116  contract CollateralToken {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CollateralToken.sol\":521:815  constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _initialSupply)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CollateralToken.sol\":629:633  name */\n  0x00\n    /* \"contracts/CollateralToken.sol\":629:641  name = _name */\n  tag_6\n    /* \"contracts/CollateralToken.sol\":636:641  _name */\n  dup6\n    /* \"contracts/CollateralToken.sol\":629:633  name */\n  dup3\n    /* \"contracts/CollateralToken.sol\":629:641  name = _name */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/CollateralToken.sol\":651:657  symbol */\n  0x01\n    /* \"contracts/CollateralToken.sol\":651:667  symbol = _symbol */\n  tag_8\n    /* \"contracts/CollateralToken.sol\":660:667  _symbol */\n  dup5\n    /* \"contracts/CollateralToken.sol\":651:657  symbol */\n  dup3\n    /* \"contracts/CollateralToken.sol\":651:667  symbol = _symbol */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/CollateralToken.sol\":677:685  decimals */\n  0x02\n    /* \"contracts/CollateralToken.sol\":677:697  decimals = _decimals */\n  dup1\n  sload\n  not(0xff)\n  and\n  0xff\n  dup5\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/CollateralToken.sol\":739:762  10 ** uint256(decimals) */\n  tag_9\n  swap1\n    /* \"contracts/CollateralToken.sol\":739:741  10 */\n  0x0a\n    /* \"contracts/CollateralToken.sol\":739:762  10 ** uint256(decimals) */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"contracts/CollateralToken.sol\":721:763  _initialSupply * (10 ** uint256(decimals)) */\n  tag_11\n  swap1\n    /* \"contracts/CollateralToken.sol\":721:735  _initialSupply */\n  dup3\n    /* \"contracts/CollateralToken.sol\":721:763  _initialSupply * (10 ** uint256(decimals)) */\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"contracts/CollateralToken.sol\":707:718  totalSupply */\n  0x05\n    /* \"contracts/CollateralToken.sol\":707:763  totalSupply = _initialSupply * (10 ** uint256(decimals)) */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/CollateralToken.sol\":783:793  msg.sender */\n  caller\n    /* \"contracts/CollateralToken.sol\":773:794  balanceOf[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/CollateralToken.sol\":773:782  balanceOf */\n  0x03\n    /* \"contracts/CollateralToken.sol\":773:794  balanceOf[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/CollateralToken.sol\":773:808  balanceOf[msg.sender] = totalSupply */\n  sstore\n  pop\n    /* \"contracts/CollateralToken.sol\":169:2116  contract CollateralToken {... */\n  tag_23\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"#utility.yul\":14:141   */\ntag_14:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_15:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_14\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1765   */\ntag_3:\n    /* \"#utility.yul\":1106:1112   */\n  0x00\n    /* \"#utility.yul\":1114:1120   */\n  dup1\n    /* \"#utility.yul\":1122:1128   */\n  0x00\n    /* \"#utility.yul\":1130:1136   */\n  dup1\n    /* \"#utility.yul\":1183:1186   */\n  0x80\n    /* \"#utility.yul\":1171:1180   */\n  dup6\n    /* \"#utility.yul\":1162:1169   */\n  dup8\n    /* \"#utility.yul\":1158:1181   */\n  sub\n    /* \"#utility.yul\":1154:1187   */\n  slt\n    /* \"#utility.yul\":1151:1204   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1200:1201   */\n  0x00\n    /* \"#utility.yul\":1197:1198   */\n  dup1\n    /* \"#utility.yul\":1190:1202   */\n  revert\n    /* \"#utility.yul\":1151:1204   */\ntag_36:\n    /* \"#utility.yul\":1227:1243   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1292:1306   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1289:1323   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1319:1320   */\n  0x00\n    /* \"#utility.yul\":1316:1317   */\n  dup1\n    /* \"#utility.yul\":1309:1321   */\n  revert\n    /* \"#utility.yul\":1289:1323   */\ntag_37:\n    /* \"#utility.yul\":1342:1403   */\n  tag_38\n    /* \"#utility.yul\":1395:1402   */\n  dup9\n    /* \"#utility.yul\":1386:1392   */\n  dup4\n    /* \"#utility.yul\":1375:1384   */\n  dup10\n    /* \"#utility.yul\":1371:1393   */\n  add\n    /* \"#utility.yul\":1342:1403   */\n  tag_15\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1332:1403   */\n  swap6\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  0x20\n    /* \"#utility.yul\":1438:1447   */\n  dup8\n    /* \"#utility.yul\":1434:1452   */\n  add\n    /* \"#utility.yul\":1428:1453   */\n  mload\n    /* \"#utility.yul\":1412:1453   */\n  swap2\n  pop\n    /* \"#utility.yul\":1478:1480   */\n  dup1\n    /* \"#utility.yul\":1468:1476   */\n  dup3\n    /* \"#utility.yul\":1465:1481   */\n  gt\n    /* \"#utility.yul\":1462:1498   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1494:1495   */\n  0x00\n    /* \"#utility.yul\":1491:1492   */\n  dup1\n    /* \"#utility.yul\":1484:1496   */\n  revert\n    /* \"#utility.yul\":1462:1498   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1517:1580   */\n  tag_40\n    /* \"#utility.yul\":1572:1579   */\n  dup8\n    /* \"#utility.yul\":1561:1569   */\n  dup3\n    /* \"#utility.yul\":1550:1559   */\n  dup9\n    /* \"#utility.yul\":1546:1570   */\n  add\n    /* \"#utility.yul\":1517:1580   */\n  tag_15\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1507:1580   */\n  swap4\n  pop\n  pop\n    /* \"#utility.yul\":1623:1625   */\n  0x40\n    /* \"#utility.yul\":1612:1621   */\n  dup6\n    /* \"#utility.yul\":1608:1626   */\n  add\n    /* \"#utility.yul\":1602:1627   */\n  mload\n    /* \"#utility.yul\":1667:1671   */\n  0xff\n    /* \"#utility.yul\":1660:1665   */\n  dup2\n    /* \"#utility.yul\":1656:1672   */\n  and\n    /* \"#utility.yul\":1649:1654   */\n  dup2\n    /* \"#utility.yul\":1646:1673   */\n  eq\n    /* \"#utility.yul\":1636:1691   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1687:1688   */\n  0x00\n    /* \"#utility.yul\":1684:1685   */\n  dup1\n    /* \"#utility.yul\":1677:1689   */\n  revert\n    /* \"#utility.yul\":1636:1691   */\ntag_41:\n    /* \"#utility.yul\":1755:1757   */\n  0x60\n    /* \"#utility.yul\":1740:1758   */\n  swap6\n  swap1\n  swap6\n  add\n    /* \"#utility.yul\":1734:1759   */\n  mload\n    /* \"#utility.yul\":991:1765   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1770:2150   */\ntag_16:\n    /* \"#utility.yul\":1849:1850   */\n  0x01\n    /* \"#utility.yul\":1845:1857   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1892:1904   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1913:1974   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1967:1971   */\n  0x7f\n    /* \"#utility.yul\":1959:1965   */\n  dup3\n    /* \"#utility.yul\":1955:1972   */\n  and\n    /* \"#utility.yul\":1945:1972   */\n  swap2\n  pop\n    /* \"#utility.yul\":1913:1974   */\ntag_43:\n    /* \"#utility.yul\":2020:2022   */\n  0x20\n    /* \"#utility.yul\":2012:2018   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  lt\n    /* \"#utility.yul\":1989:2007   */\n  dup2\n    /* \"#utility.yul\":1986:2024   */\n  sub\n    /* \"#utility.yul\":1983:2144   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2066:2076   */\n  0x4e487b71\n    /* \"#utility.yul\":2061:2064   */\n  0xe0\n    /* \"#utility.yul\":2057:2077   */\n  shl\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2078   */\n  mstore\n    /* \"#utility.yul\":2101:2105   */\n  0x22\n    /* \"#utility.yul\":2098:2099   */\n  0x04\n    /* \"#utility.yul\":2091:2106   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x24\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2119:2134   */\n  revert\n    /* \"#utility.yul\":1983:2144   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1770:2150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2281:2826   */\ntag_18:\n    /* \"#utility.yul\":2383:2385   */\n  0x1f\n    /* \"#utility.yul\":2378:2381   */\n  dup3\n    /* \"#utility.yul\":2375:2386   */\n  gt\n    /* \"#utility.yul\":2372:2820   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2419:2420   */\n  0x00\n    /* \"#utility.yul\":2444:2449   */\n  dup2\n    /* \"#utility.yul\":2440:2442   */\n  dup2\n    /* \"#utility.yul\":2433:2450   */\n  mstore\n    /* \"#utility.yul\":2489:2493   */\n  0x20\n    /* \"#utility.yul\":2485:2487   */\n  dup2\n    /* \"#utility.yul\":2475:2494   */\n  keccak256\n    /* \"#utility.yul\":2559:2561   */\n  0x1f\n    /* \"#utility.yul\":2547:2557   */\n  dup6\n    /* \"#utility.yul\":2543:2562   */\n  add\n    /* \"#utility.yul\":2540:2541   */\n  0x05\n    /* \"#utility.yul\":2536:2563   */\n  shr\n    /* \"#utility.yul\":2530:2534   */\n  dup2\n    /* \"#utility.yul\":2526:2564   */\n  add\n    /* \"#utility.yul\":2595:2599   */\n  0x20\n    /* \"#utility.yul\":2583:2593   */\n  dup7\n    /* \"#utility.yul\":2580:2600   */\n  lt\n    /* \"#utility.yul\":2577:2624   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2618:2622   */\n  dup1\n    /* \"#utility.yul\":2577:2624   */\ntag_48:\n    /* \"#utility.yul\":2673:2675   */\n  0x1f\n    /* \"#utility.yul\":2668:2671   */\n  dup6\n    /* \"#utility.yul\":2664:2676   */\n  add\n    /* \"#utility.yul\":2661:2662   */\n  0x05\n    /* \"#utility.yul\":2657:2677   */\n  shr\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2678   */\n  add\n    /* \"#utility.yul\":2637:2678   */\n  swap2\n  pop\n    /* \"#utility.yul\":2728:2810   */\ntag_49:\n    /* \"#utility.yul\":2746:2748   */\n  dup2\n    /* \"#utility.yul\":2739:2744   */\n  dup2\n    /* \"#utility.yul\":2736:2749   */\n  lt\n    /* \"#utility.yul\":2728:2810   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2791:2808   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2772:2773   */\n  0x01\n    /* \"#utility.yul\":2761:2774   */\n  add\n    /* \"#utility.yul\":2728:2810   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2732:2735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2372:2820   */\ntag_47:\n    /* \"#utility.yul\":2281:2826   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:4354   */\ntag_7:\n    /* \"#utility.yul\":3122:3132   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3144:3174   */\n  dup2\n  gt\n    /* \"#utility.yul\":3141:3197   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3177:3195   */\n  tag_55\n  tag_14\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3206:3303   */\n  tag_56\n    /* \"#utility.yul\":3296:3302   */\n  dup2\n    /* \"#utility.yul\":3256:3294   */\n  tag_57\n    /* \"#utility.yul\":3288:3292   */\n  dup5\n    /* \"#utility.yul\":3282:3293   */\n  sload\n    /* \"#utility.yul\":3256:3294   */\n  tag_16\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3250:3254   */\n  dup5\n    /* \"#utility.yul\":3206:3303   */\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3358:3362   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3422:3424   */\n  0x1f\n    /* \"#utility.yul\":3411:3425   */\n  dup4\n  gt\n    /* \"#utility.yul\":3439:3440   */\n  0x01\n    /* \"#utility.yul\":3434:4097   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":4141:4142   */\n  0x00\n    /* \"#utility.yul\":4158:4164   */\n  dup5\n    /* \"#utility.yul\":4155:4244   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":4210:4229   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4204:4230   */\n  mload\n    /* \"#utility.yul\":4155:4244   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2959:2960   */\n  0x03\n    /* \"#utility.yul\":2955:2966   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2951:2975   */\n  shr\n    /* \"#utility.yul\":2947:2976   */\n  not\n    /* \"#utility.yul\":2937:2977   */\n  and\n    /* \"#utility.yul\":2983:2984   */\n  0x01\n    /* \"#utility.yul\":2979:2990   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2934:2991   */\n  or\n    /* \"#utility.yul\":4257:4338   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3404:4348   */\n  jump(tag_51)\n    /* \"#utility.yul\":3434:4097   */\ntag_59:\n    /* \"#utility.yul\":2228:2229   */\n  0x00\n    /* \"#utility.yul\":2221:2235   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2265:2269   */\n  0x20\n    /* \"#utility.yul\":2252:2270   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3470:3490   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3588:3824   */\ntag_63:\n    /* \"#utility.yul\":3602:3609   */\n  dup3\n    /* \"#utility.yul\":3599:3600   */\n  dup2\n    /* \"#utility.yul\":3596:3610   */\n  lt\n    /* \"#utility.yul\":3588:3824   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3691:3710   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3685:3711   */\n  mload\n    /* \"#utility.yul\":3670:3712   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3783:3810   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3751:3752   */\n  0x01\n    /* \"#utility.yul\":3739:3753   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3618:3637   */\n  dup5\n  add\n    /* \"#utility.yul\":3588:3824   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3592:3595   */\n  pop\n    /* \"#utility.yul\":3852:3858   */\n  dup6\n    /* \"#utility.yul\":3843:3850   */\n  dup3\n    /* \"#utility.yul\":3840:3859   */\n  lt\n    /* \"#utility.yul\":3837:4038   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3913:3932   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3907:3933   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3996:3997   */\n  0x03\n    /* \"#utility.yul\":3992:4006   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4008:4011   */\n  0xf8\n    /* \"#utility.yul\":3988:4012   */\n  and\n    /* \"#utility.yul\":3984:4021   */\n  shr\n    /* \"#utility.yul\":3980:4022   */\n  not\n    /* \"#utility.yul\":3965:4023   */\n  and\n    /* \"#utility.yul\":3950:4024   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3837:4038   */\ntag_66:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4084:4085   */\n  0x01\n    /* \"#utility.yul\":4068:4082   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4064:4086   */\n  add\n    /* \"#utility.yul\":4051:4087   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3002:4354   */\n  jump\t// out\n    /* \"#utility.yul\":4359:4486   */\ntag_20:\n    /* \"#utility.yul\":4420:4430   */\n  0x4e487b71\n    /* \"#utility.yul\":4415:4418   */\n  0xe0\n    /* \"#utility.yul\":4411:4431   */\n  shl\n    /* \"#utility.yul\":4408:4409   */\n  0x00\n    /* \"#utility.yul\":4401:4432   */\n  mstore\n    /* \"#utility.yul\":4451:4455   */\n  0x11\n    /* \"#utility.yul\":4448:4449   */\n  0x04\n    /* \"#utility.yul\":4441:4456   */\n  mstore\n    /* \"#utility.yul\":4475:4479   */\n  0x24\n    /* \"#utility.yul\":4472:4473   */\n  0x00\n    /* \"#utility.yul\":4465:4480   */\n  revert\n    /* \"#utility.yul\":4491:4913   */\ntag_21:\n    /* \"#utility.yul\":4580:4581   */\n  0x01\n    /* \"#utility.yul\":4623:4628   */\n  dup2\n    /* \"#utility.yul\":4580:4581   */\n  dup2\n    /* \"#utility.yul\":4637:4907   */\ntag_69:\n    /* \"#utility.yul\":4658:4665   */\n  dup1\n    /* \"#utility.yul\":4648:4656   */\n  dup6\n    /* \"#utility.yul\":4645:4666   */\n  gt\n    /* \"#utility.yul\":4637:4907   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":4717:4721   */\n  dup2\n    /* \"#utility.yul\":4713:4714   */\n  0x00\n    /* \"#utility.yul\":4709:4715   */\n  not\n    /* \"#utility.yul\":4705:4722   */\n  div\n    /* \"#utility.yul\":4699:4703   */\n  dup3\n    /* \"#utility.yul\":4696:4723   */\n  gt\n    /* \"#utility.yul\":4693:4746   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":4726:4744   */\n  tag_73\n  tag_20\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":4776:4783   */\n  dup1\n    /* \"#utility.yul\":4766:4774   */\n  dup6\n    /* \"#utility.yul\":4762:4784   */\n  and\n    /* \"#utility.yul\":4759:4814   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":4796:4812   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":4759:4814   */\ntag_74:\n    /* \"#utility.yul\":4875:4897   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":4835:4850   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":4637:4907   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":4641:4644   */\n  pop\n    /* \"#utility.yul\":4491:4913   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4918:5724   */\ntag_22:\n    /* \"#utility.yul\":4967:4972   */\n  0x00\n    /* \"#utility.yul\":4997:5005   */\n  dup3\n    /* \"#utility.yul\":4987:5067   */\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":5038:5039   */\n  0x01\n    /* \"#utility.yul\":5052:5057   */\n  jump(tag_75)\n    /* \"#utility.yul\":4987:5067   */\ntag_76:\n    /* \"#utility.yul\":5086:5090   */\n  dup2\n    /* \"#utility.yul\":5076:5152   */\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":5123:5124   */\n  0x00\n    /* \"#utility.yul\":5137:5142   */\n  jump(tag_75)\n    /* \"#utility.yul\":5076:5152   */\ntag_77:\n    /* \"#utility.yul\":5168:5172   */\n  dup2\n    /* \"#utility.yul\":5186:5187   */\n  0x01\n    /* \"#utility.yul\":5181:5240   */\n  dup2\n  eq\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5254:5255   */\n  0x02\n    /* \"#utility.yul\":5249:5379   */\n  dup2\n  eq\n  tag_80\n  jumpi\n    /* \"#utility.yul\":5161:5379   */\n  jump(tag_78)\n    /* \"#utility.yul\":5181:5240   */\ntag_79:\n    /* \"#utility.yul\":5211:5212   */\n  0x01\n    /* \"#utility.yul\":5202:5212   */\n  swap2\n  pop\n    /* \"#utility.yul\":5225:5230   */\n  pop\n  jump(tag_75)\n    /* \"#utility.yul\":5249:5379   */\ntag_80:\n    /* \"#utility.yul\":5286:5289   */\n  0xff\n    /* \"#utility.yul\":5276:5284   */\n  dup5\n    /* \"#utility.yul\":5273:5290   */\n  gt\n    /* \"#utility.yul\":5270:5313   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5293:5311   */\n  tag_82\n  tag_20\n  jump\t// in\ntag_82:\n  pop\n  pop\n    /* \"#utility.yul\":5349:5350   */\n  0x01\n    /* \"#utility.yul\":5335:5351   */\n  dup3\n  shl\n    /* \"#utility.yul\":5364:5369   */\n  jump(tag_75)\n    /* \"#utility.yul\":5161:5379   */\ntag_78:\n  pop\n    /* \"#utility.yul\":5463:5465   */\n  0x20\n    /* \"#utility.yul\":5453:5461   */\n  dup4\n    /* \"#utility.yul\":5450:5466   */\n  lt\n    /* \"#utility.yul\":5444:5447   */\n  0x0133\n    /* \"#utility.yul\":5438:5442   */\n  dup4\n    /* \"#utility.yul\":5435:5448   */\n  lt\n    /* \"#utility.yul\":5431:5467   */\n  and\n    /* \"#utility.yul\":5425:5427   */\n  0x4e\n    /* \"#utility.yul\":5415:5423   */\n  dup5\n    /* \"#utility.yul\":5412:5428   */\n  lt\n    /* \"#utility.yul\":5407:5409   */\n  0x0b\n    /* \"#utility.yul\":5401:5405   */\n  dup5\n    /* \"#utility.yul\":5398:5410   */\n  lt\n    /* \"#utility.yul\":5394:5429   */\n  and\n    /* \"#utility.yul\":5391:5468   */\n  or\n    /* \"#utility.yul\":5388:5547   */\n  iszero\n  tag_83\n  jumpi\n  pop\n    /* \"#utility.yul\":5500:5519   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":5532:5537   */\n  jump(tag_75)\n    /* \"#utility.yul\":5388:5547   */\ntag_83:\n    /* \"#utility.yul\":5579:5613   */\n  tag_84\n    /* \"#utility.yul\":5604:5612   */\n  dup4\n    /* \"#utility.yul\":5598:5602   */\n  dup4\n    /* \"#utility.yul\":5579:5613   */\n  tag_21\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":5649:5655   */\n  dup1\n    /* \"#utility.yul\":5645:5646   */\n  0x00\n    /* \"#utility.yul\":5641:5647   */\n  not\n    /* \"#utility.yul\":5637:5656   */\n  div\n    /* \"#utility.yul\":5628:5635   */\n  dup3\n    /* \"#utility.yul\":5625:5657   */\n  gt\n    /* \"#utility.yul\":5622:5680   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5660:5678   */\n  tag_86\n  tag_20\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":5698:5718   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4918:5724   */\ntag_75:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5729:5860   */\ntag_10:\n    /* \"#utility.yul\":5789:5794   */\n  0x00\n    /* \"#utility.yul\":5818:5854   */\n  tag_88\n    /* \"#utility.yul\":5845:5853   */\n  dup4\n    /* \"#utility.yul\":5839:5843   */\n  dup4\n    /* \"#utility.yul\":5818:5854   */\n  tag_22\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5809:5854   */\n  swap4\n    /* \"#utility.yul\":5729:5860   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5865:6033   */\ntag_12:\n    /* \"#utility.yul\":5938:5947   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5969:5978   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5986:6001   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5980:6002   */\n  dup5\n  eq\n    /* \"#utility.yul\":5966:6003   */\n  or\n    /* \"#utility.yul\":5956:6027   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":6007:6025   */\n  tag_75\n  tag_20\n  jump\t// in\n    /* \"#utility.yul\":5865:6033   */\ntag_23:\n    /* \"contracts/CollateralToken.sol\":169:2116  contract CollateralToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CollateralToken.sol\":169:2116  contract CollateralToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CollateralToken.sol\":291:309  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollateralToken.sol\":1529:1733  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/CollateralToken.sol\":1529:1733  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      tag_15\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/CollateralToken.sol\":488:514  uint256 public totalSupply */\n    tag_5:\n      tag_23\n      sload(0x05)\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/CollateralToken.sol\":488:514  uint256 public totalSupply */\n      tag_15\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/CollateralToken.sol\":1739:2114  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_6:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/CollateralToken.sol\":341:362  uint8 public decimals */\n    tag_7:\n      sload(0x02)\n      tag_32\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1883:1887   */\n      0xff\n        /* \"#utility.yul\":1871:1888   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/CollateralToken.sol\":341:362  uint8 public decimals */\n      tag_15\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/CollateralToken.sol\":368:412  mapping(address => uint256) public balanceOf */\n    tag_8:\n      tag_23\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/CollateralToken.sol\":315:335  string public symbol */\n    tag_9:\n      tag_13\n      tag_42\n      jump\t// in\n        /* \"contracts/CollateralToken.sol\":982:1123  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_10:\n      tag_17\n      tag_45\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/CollateralToken.sol\":418:482  mapping(address => mapping(address => uint256)) public allowance */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/CollateralToken.sol\":291:309  string public name */\n    tag_14:\n      0x00\n      dup1\n      sload\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_55\n      swap1\n      tag_54\n      jump\t// in\n    tag_55:\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_57\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_56)\n    tag_57:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_58:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_58\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/CollateralToken.sol\":1529:1733  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_20:\n        /* \"contracts/CollateralToken.sol\":1622:1632  msg.sender */\n      caller\n        /* \"contracts/CollateralToken.sol\":1596:1600  bool */\n      0x00\n        /* \"contracts/CollateralToken.sol\":1612:1633  allowance[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1612:1621  allowance */\n      0x04\n        /* \"contracts/CollateralToken.sol\":1612:1633  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1612:1643  allowance[msg.sender][_spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/CollateralToken.sol\":1612:1652  allowance[msg.sender][_spender] = _value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/CollateralToken.sol\":1667:1705  Approval(msg.sender, _spender, _value) */\n      mload\n        /* \"contracts/CollateralToken.sol\":1596:1600  bool */\n      swap2\n      swap3\n        /* \"contracts/CollateralToken.sol\":1612:1643  allowance[msg.sender][_spender] */\n      swap1\n      swap2\n        /* \"contracts/CollateralToken.sol\":1667:1705  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_60\n      swap1\n        /* \"contracts/CollateralToken.sol\":1646:1652  _value */\n      dup7\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/CollateralToken.sol\":1667:1705  Approval(msg.sender, _spender, _value) */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/CollateralToken.sol\":1722:1726  true */\n      0x01\n        /* \"contracts/CollateralToken.sol\":1529:1733  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CollateralToken.sol\":1739:2114  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_30:\n        /* \"contracts/CollateralToken.sol\":1821:1825  bool */\n      0x00\n        /* \"contracts/CollateralToken.sol\":1837:1866  _transfer(_from, _to, _value) */\n      tag_62\n        /* \"contracts/CollateralToken.sol\":1847:1852  _from */\n      dup5\n        /* \"contracts/CollateralToken.sol\":1854:1857  _to */\n      dup5\n        /* \"contracts/CollateralToken.sol\":1859:1865  _value */\n      dup5\n        /* \"contracts/CollateralToken.sol\":1837:1846  _transfer */\n      tag_63\n        /* \"contracts/CollateralToken.sol\":1837:1866  _transfer(_from, _to, _value) */\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1903:1919  allowance[_from] */\n      dup5\n      and\n        /* \"contracts/CollateralToken.sol\":1876:1900  uint256 currentAllowance */\n      0x00\n        /* \"contracts/CollateralToken.sol\":1903:1919  allowance[_from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1903:1912  allowance */\n      0x04\n        /* \"contracts/CollateralToken.sol\":1903:1919  allowance[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/CollateralToken.sol\":1920:1930  msg.sender */\n      caller\n        /* \"contracts/CollateralToken.sol\":1903:1931  allowance[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/CollateralToken.sol\":1949:1975  currentAllowance >= _value */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/CollateralToken.sol\":1941:2020  require(currentAllowance >= _value, \"ERC20: transfer amount exceeds allowance\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"contracts/CollateralToken.sol\":1941:2020  require(currentAllowance >= _value, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x28\n        /* \"#utility.yul\":2962:2980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3139   */\n      0x84\n      add\n        /* \"contracts/CollateralToken.sol\":1941:2020  require(currentAllowance >= _value, \"ERC20: transfer amount exceeds allowance\") */\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/CollateralToken.sol\":2061:2086  currentAllowance - _value */\n      tag_67\n        /* \"contracts/CollateralToken.sol\":2080:2086  _value */\n      dup4\n        /* \"contracts/CollateralToken.sol\":2061:2077  currentAllowance */\n      dup3\n        /* \"contracts/CollateralToken.sol\":2061:2086  currentAllowance - _value */\n      tag_68\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":2030:2046  allowance[_from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":2030:2039  allowance */\n      0x04\n        /* \"contracts/CollateralToken.sol\":2030:2046  allowance[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/CollateralToken.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/CollateralToken.sol\":2030:2058  allowance[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/CollateralToken.sol\":2030:2086  allowance[_from][msg.sender] = currentAllowance - _value */\n      sstore\n      pop\n        /* \"contracts/CollateralToken.sol\":2103:2107  true */\n      0x01\n      swap1\n      pop\n        /* \"contracts/CollateralToken.sol\":1739:2114  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CollateralToken.sol\":315:335  string public symbol */\n    tag_42:\n      0x01\n      dup1\n      sload\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n        /* \"contracts/CollateralToken.sol\":982:1123  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_46:\n        /* \"contracts/CollateralToken.sol\":1045:1049  bool */\n      0x00\n        /* \"contracts/CollateralToken.sol\":1061:1095  _transfer(msg.sender, _to, _value) */\n      tag_75\n        /* \"contracts/CollateralToken.sol\":1071:1081  msg.sender */\n      caller\n        /* \"contracts/CollateralToken.sol\":1083:1086  _to */\n      dup5\n        /* \"contracts/CollateralToken.sol\":1088:1094  _value */\n      dup5\n        /* \"contracts/CollateralToken.sol\":1061:1070  _transfer */\n      tag_63\n        /* \"contracts/CollateralToken.sol\":1061:1095  _transfer(msg.sender, _to, _value) */\n      jump\t// in\n    tag_75:\n      pop\n        /* \"contracts/CollateralToken.sol\":1112:1116  true */\n      0x01\n        /* \"contracts/CollateralToken.sol\":982:1123  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CollateralToken.sol\":1129:1523  function _transfer(address _from, address _to, uint256 _value) internal {... */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1219:1236  _to != address(0) */\n      dup3\n      and\n        /* \"contracts/CollateralToken.sol\":1211:1276  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3617:3619   */\n      0x20\n        /* \"contracts/CollateralToken.sol\":1211:1276  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3599:3620   */\n      mstore\n        /* \"#utility.yul\":3656:3658   */\n      0x23\n        /* \"#utility.yul\":3636:3654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3629:3659   */\n      mstore\n        /* \"#utility.yul\":3695:3729   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":3675:3693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3668:3730   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":3746:3764   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3739:3772   */\n      mstore\n        /* \"#utility.yul\":3789:3808   */\n      0x84\n      add\n        /* \"contracts/CollateralToken.sol\":1211:1276  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_65\n        /* \"#utility.yul\":3415:3814   */\n      jump\n        /* \"contracts/CollateralToken.sol\":1211:1276  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1294:1310  balanceOf[_from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1294:1303  balanceOf */\n      0x03\n        /* \"contracts/CollateralToken.sol\":1294:1310  balanceOf[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/CollateralToken.sol\":1294:1320  balanceOf[_from] >= _value */\n      dup2\n      gt\n      iszero\n        /* \"contracts/CollateralToken.sol\":1286:1363  require(balanceOf[_from] >= _value, \"ERC20: transfer amount exceeds balance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4021:4023   */\n      0x20\n        /* \"contracts/CollateralToken.sol\":1286:1363  require(balanceOf[_from] >= _value, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4003:4024   */\n      mstore\n        /* \"#utility.yul\":4060:4062   */\n      0x26\n        /* \"#utility.yul\":4040:4058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4033:4063   */\n      mstore\n        /* \"#utility.yul\":4099:4133   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4079:4097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4072:4134   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":4150:4168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4143:4179   */\n      mstore\n        /* \"#utility.yul\":4196:4215   */\n      0x84\n      add\n        /* \"contracts/CollateralToken.sol\":1286:1363  require(balanceOf[_from] >= _value, \"ERC20: transfer amount exceeds balance\") */\n      tag_65\n        /* \"#utility.yul\":3819:4221   */\n      jump\n        /* \"contracts/CollateralToken.sol\":1286:1363  require(balanceOf[_from] >= _value, \"ERC20: transfer amount exceeds balance\") */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1392:1408  balanceOf[_from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1392:1401  balanceOf */\n      0x03\n        /* \"contracts/CollateralToken.sol\":1392:1408  balanceOf[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/CollateralToken.sol\":1392:1420  balanceOf[_from].sub(_value) */\n      tag_83\n      swap1\n        /* \"contracts/CollateralToken.sol\":1413:1419  _value */\n      dup3\n        /* \"contracts/CollateralToken.sol\":1392:1412  balanceOf[_from].sub */\n      tag_84\n        /* \"contracts/CollateralToken.sol\":1392:1420  balanceOf[_from].sub(_value) */\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1373:1389  balanceOf[_from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1373:1382  balanceOf */\n      0x03\n        /* \"contracts/CollateralToken.sol\":1373:1389  balanceOf[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/CollateralToken.sol\":1373:1420  balanceOf[_from] = balanceOf[_from].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/CollateralToken.sol\":1447:1461  balanceOf[_to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/CollateralToken.sol\":1447:1473  balanceOf[_to].add(_value) */\n      tag_85\n      swap1\n        /* \"contracts/CollateralToken.sol\":1466:1472  _value */\n      dup3\n        /* \"contracts/CollateralToken.sol\":1447:1465  balanceOf[_to].add */\n      tag_86\n        /* \"contracts/CollateralToken.sol\":1447:1473  balanceOf[_to].add(_value) */\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CollateralToken.sol\":1430:1444  balanceOf[_to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CollateralToken.sol\":1430:1439  balanceOf */\n      0x03\n        /* \"contracts/CollateralToken.sol\":1430:1444  balanceOf[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/CollateralToken.sol\":1430:1473  balanceOf[_to] = balanceOf[_to].add(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/CollateralToken.sol\":1488:1516  Transfer(_from, _to, _value) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_87\n      swap1\n        /* \"contracts/CollateralToken.sol\":1509:1515  _value */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/CollateralToken.sol\":1488:1516  Transfer(_from, _to, _value) */\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CollateralToken.sol\":1129:1523  function _transfer(address _from, address _to, uint256 _value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dependencies/SafeMath.sol\":1445:1579  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_84:\n        /* \"contracts/Dependencies/SafeMath.sol\":1503:1510  uint256 */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_89\n        /* \"contracts/Dependencies/SafeMath.sol\":1533:1534  a */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1536:1537  b */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1532  sub */\n      tag_90\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_89:\n        /* \"contracts/Dependencies/SafeMath.sol\":1522:1572  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap4\n        /* \"contracts/Dependencies/SafeMath.sol\":1445:1579  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"contracts/Dependencies/SafeMath.sol\":1063:1070  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n      tag_92\n        /* \"contracts/Dependencies/SafeMath.sol\":1098:1099  b */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1094:1095  a */\n      dup6\n        /* \"contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/Dependencies/SafeMath.sol\":1082:1099  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":1122:1123  a */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1117:1118  c */\n      dup2\n        /* \"contracts/Dependencies/SafeMath.sol\":1117:1123  c >= a */\n      lt\n      iszero\n        /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4540:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x1b\n        /* \"#utility.yul\":4577:4595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4570:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4665   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":4616:4634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4609:4666   */\n      mstore\n        /* \"#utility.yul\":4683:4701   */\n      0x64\n      add\n        /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_65\n        /* \"#utility.yul\":4356:4707   */\n      jump\n        /* \"contracts/Dependencies/SafeMath.sol\":1903:2090  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"contracts/Dependencies/SafeMath.sol\":1989:1996  uint256 */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":2024:2036  errorMessage */\n      dup2\n        /* \"contracts/Dependencies/SafeMath.sol\":2016:2022  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/Dependencies/SafeMath.sol\":2008:2037  require(b <= a, errorMessage) */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_98:\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":2047:2056  uint256 c */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2064  a - b */\n      tag_100\n        /* \"contracts/Dependencies/SafeMath.sol\":2063:2064  b */\n      dup5\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2060  a */\n      dup7\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2064  a - b */\n      tag_68\n      jump\t// in\n    tag_100:\n        /* \"contracts/Dependencies/SafeMath.sol\":2047:2064  uint256 c = a - b */\n      swap6\n        /* \"contracts/Dependencies/SafeMath.sol\":1903:2090  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_16:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_105:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_105)\n    tag_107:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_101:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_109:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_19:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_111:\n        /* \"#utility.yul\":913:942   */\n      tag_112\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_101\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_29:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_116:\n        /* \"#utility.yul\":1563:1592   */\n      tag_117\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_101\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_118\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_101\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_38:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_121:\n        /* \"#utility.yul\":2051:2080   */\n      tag_89\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":2091:2351   */\n    tag_50:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_124:\n        /* \"#utility.yul\":2259:2288   */\n      tag_125\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_101\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_126\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_101\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_54:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_128:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_129:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3277   */\n    tag_102:\n        /* \"#utility.yul\":3211:3221   */\n      0x4e487b71\n        /* \"#utility.yul\":3206:3209   */\n      0xe0\n        /* \"#utility.yul\":3202:3222   */\n      shl\n        /* \"#utility.yul\":3199:3200   */\n      0x00\n        /* \"#utility.yul\":3192:3223   */\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x11\n        /* \"#utility.yul\":3239:3240   */\n      0x04\n        /* \"#utility.yul\":3232:3247   */\n      mstore\n        /* \"#utility.yul\":3266:3270   */\n      0x24\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3256:3271   */\n      revert\n        /* \"#utility.yul\":3282:3410   */\n    tag_68:\n        /* \"#utility.yul\":3349:3358   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3370:3381   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3367:3404   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":3384:3402   */\n      tag_59\n      tag_102\n      jump\t// in\n        /* \"#utility.yul\":4226:4351   */\n    tag_93:\n        /* \"#utility.yul\":4291:4300   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4312:4322   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4309:4345   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":4325:4343   */\n      tag_59\n      tag_102\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220bd18bc9955c349c24d4e46579ca68ddb2a9baf880ac5771e940ea36eb1ea5abf64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6035:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:4"
															},
															"nodeType": "YulIf",
															"src": "353:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:4"
															},
															"nodeType": "YulIf",
															"src": "536:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:4"
															},
															"nodeType": "YulIf",
															"src": "698:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:4",
																"statements": []
															},
															"src": "779:133:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:840:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:624:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1188:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1200:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1190:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1190:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1190:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1171:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:33:4"
															},
															"nodeType": "YulIf",
															"src": "1151:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1213:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1217:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1270:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1274:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1256:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1309:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1309:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1309:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1295:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1303:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1292:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:14:4"
															},
															"nodeType": "YulIf",
															"src": "1289:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1332:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1375:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1395:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1342:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1412:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1438:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1428:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1416:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1482:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1484:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1465:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:16:4"
															},
															"nodeType": "YulIf",
															"src": "1462:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1561:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1572:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1517:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1589:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1602:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:25:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1593:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1675:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1687:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1677:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1677:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1649:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1667:4:4",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1656:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1656:16:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1646:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:35:4"
															},
															"nodeType": "YulIf",
															"src": "1636:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1710:5:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1724:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1755:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1734:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:25:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1094:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1106:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1114:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1122:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1130:6:4",
														"type": ""
													}
												],
												"src": "991:774:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1852:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1866:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1896:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1892:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1870:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1945:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1959:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1955:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1923:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:26:4"
															},
															"nodeType": "YulIf",
															"src": "1913:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2033:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2061:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2066:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2057:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2057:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2047:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2101:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2091:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2119:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2119:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2119:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1989:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2020:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1986:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:38:4"
															},
															"nodeType": "YulIf",
															"src": "1983:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1805:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1814:6:4",
														"type": ""
													}
												],
												"src": "1770:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2211:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2231:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2221:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2252:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2194:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2202:4:4",
														"type": ""
													}
												],
												"src": "2155:121:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2395:425:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2409:11:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2419:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2413:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2440:2:4"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2444:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2433:17:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2433:17:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2463:31:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2485:2:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2489:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2475:19:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2467:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2507:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2530:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2540:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2547:10:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2559:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2543:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2543:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2536:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2536:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2526:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2526:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2511:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2601:23:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2603:19:4",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2618:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2603:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2583:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2580:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2580:20:4"
																		},
																		"nodeType": "YulIf",
																		"src": "2577:47:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2637:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2651:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2661:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2668:3:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2673:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2664:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2664:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2657:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2657:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2647:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2647:31:4"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2641:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2691:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2704:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2695:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2789:21:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2798:5:4"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2805:2:4"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2791:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2791:17:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2791:17:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2739:5:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2746:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2736:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2736:13:4"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2750:26:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2752:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2765:5:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2772:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2761:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2761:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2752:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2732:3:4",
																			"statements": []
																		},
																		"src": "2728:82:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2378:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2375:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:11:4"
															},
															"nodeType": "YulIf",
															"src": "2372:448:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2334:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2341:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2346:10:4",
														"type": ""
													}
												],
												"src": "2281:545:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2916:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2926:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2941:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2959:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2962:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2955:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2955:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2972:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2968:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2968:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2951:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2951:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2986:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2979:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2979:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2934:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2926:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2893:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2899:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2907:4:4",
														"type": ""
													}
												],
												"src": "2831:166:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3098:1256:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3108:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3128:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3122:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3112:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3175:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3177:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3177:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3177:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3147:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3167:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3159:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3171:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3155:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3155:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3144:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:30:4"
															},
															"nodeType": "YulIf",
															"src": "3141:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3250:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3288:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3282:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3282:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3256:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3256:38:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3206:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:97:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3206:97:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3312:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3329:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3316:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3339:23:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3358:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3343:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3371:24:4",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3384:11:4"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3371:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3441:656:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3455:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3474:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3486:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3482:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3482:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3470:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3470:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3459:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3503:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3547:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3517:29:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3517:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3507:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3565:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3569:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3652:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3677:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3695:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3700:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3691:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3691:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3685:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3685:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3670:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3670:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3670:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3729:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3743:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3751:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3739:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3739:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3729:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3770:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3787:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3798:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3783:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3770:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3599:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3602:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3596:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3596:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3611:28:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3613:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3622:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3625:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3618:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3618:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3613:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3592:3:4",
																					"statements": []
																				},
																				"src": "3588:236:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3872:166:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3890:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3917:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3922:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3913:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3913:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3907:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3907:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3894:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3957:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3969:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3996:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3999:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3992:3:4"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3992:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4008:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3988:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3988:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4018:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4014:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4014:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3984:3:4"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3984:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3980:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3980:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3965:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3965:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3950:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3950:74:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3950:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3843:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3852:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3840:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3840:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "3837:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4058:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4072:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4075:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4068:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4068:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4084:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4064:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4064:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4051:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4051:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4051:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3434:663:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3439:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4114:234:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4128:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4141:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4132:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4177:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4195:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4214:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4219:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4210:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4210:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4204:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4204:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4195:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4158:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "4155:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4264:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4323:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4330:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4270:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4270:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4257:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4257:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4106:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3414:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3411:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "3404:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3083:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3089:3:4",
														"type": ""
													}
												],
												"src": "3002:1352:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4408:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4411:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4441:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4359:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4555:358:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4565:16:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4580:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4569:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4590:16:4",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "4599:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4615:13:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "4623:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "4615:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4679:228:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4724:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "4726:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4726:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4726:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4699:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4713:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4709:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4709:6:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "4717:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "4705:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4705:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4696:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4696:27:4"
																		},
																		"nodeType": "YulIf",
																		"src": "4693:53:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4785:29:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4787:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "4800:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "4807:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "4796:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4796:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "4787:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4766:8:4"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4776:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4762:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4762:22:4"
																		},
																		"nodeType": "YulIf",
																		"src": "4759:55:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4827:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4839:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4845:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4835:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4835:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4827:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4863:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4879:7:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4888:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4875:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4875:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4863:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4648:8:4"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4658:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4645:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:21:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4667:3:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4641:3:4",
																"statements": []
															},
															"src": "4637:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4519:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4526:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4539:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4546:4:4",
														"type": ""
													}
												],
												"src": "4491:422:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4977:747:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5015:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5029:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5038:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5029:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5052:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4997:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:16:4"
															},
															"nodeType": "YulIf",
															"src": "4987:80:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5100:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5114:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5123:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5114:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5137:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5086:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:12:4"
															},
															"nodeType": "YulIf",
															"src": "5076:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5188:52:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "5202:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5211:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5202:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5225:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5181:59:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5256:123:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5291:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "5293:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5293:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5293:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5276:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5286:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "5273:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5273:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5270:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5326:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5339:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5349:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5335:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5335:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5326:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5364:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5249:130:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5254:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5168:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "5161:218:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5477:70:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5491:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5504:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5510:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "5500:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5500:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5491:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5532:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5401:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5407:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5398:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5398:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5415:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5425:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5412:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5412:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5394:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5394:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5438:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5444:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5435:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5435:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5453:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5463:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5450:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5450:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5431:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5391:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:77:4"
															},
															"nodeType": "YulIf",
															"src": "5388:159:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5556:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5598:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5604:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "5579:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "5560:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "5569:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5658:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5660:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5660:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5628:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5645:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5641:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5641:6:4"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "5649:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5637:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5637:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5625:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:32:4"
															},
															"nodeType": "YulIf",
															"src": "5622:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5689:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5702:7:4"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "5711:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5689:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4948:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4954:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4967:5:4",
														"type": ""
													}
												],
												"src": "4918:806:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5799:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5809:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5839:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5845:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5818:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5818:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5809:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5770:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5776:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5789:5:4",
														"type": ""
													}
												],
												"src": "5729:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5917:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5927:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5942:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5945:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5938:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5927:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6005:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6007:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6007:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6007:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5976:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5969:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5969:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5983:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5990:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5999:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5986:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5986:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5980:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5980:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5966:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5966:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5959:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:45:4"
															},
															"nodeType": "YulIf",
															"src": "5956:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5896:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5899:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5905:7:4",
														"type": ""
													}
												],
												"src": "5865:168:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c4b38038062000c4b833981016040819052620000349162000162565b60006200004285826200027c565b5060016200005184826200027c565b506002805460ff191660ff84169081179091556200007190600a6200045d565b6200007d908262000472565b600581905533600090815260036020526040902055506200048c92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c557600080fd5b81516001600160401b0380821115620000e257620000e26200009d565b604051601f8301601f19908116603f011681019082821181831017156200010d576200010d6200009d565b816040528381526020925086838588010111156200012a57600080fd5b600091505b838210156200014e57858201830151818301840152908201906200012f565b600093810190920192909252949350505050565b600080600080608085870312156200017957600080fd5b84516001600160401b03808211156200019157600080fd5b6200019f88838901620000b3565b95506020870151915080821115620001b657600080fd5b50620001c587828801620000b3565b935050604085015160ff81168114620001dd57600080fd5b6060959095015193969295505050565b600181811c908216806200020257607f821691505b6020821081036200022357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027757600081815260208120601f850160051c81016020861015620002525750805b601f850160051c820191505b8181101562000273578281556001016200025e565b5050505b505050565b81516001600160401b038111156200029857620002986200009d565b620002b081620002a98454620001ed565b8462000229565b602080601f831160018114620002e85760008415620002cf5750858301515b600019600386901b1c1916600185901b17855562000273565b600085815260208120601f198616915b828110156200031957888601518255948401946001909101908401620002f8565b5085821015620003385787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200039f57816000190482111562000383576200038362000348565b808516156200039157918102915b93841c939080029062000363565b509250929050565b600082620003b85750600162000457565b81620003c75750600062000457565b8160018114620003e05760028114620003eb576200040b565b600191505062000457565b60ff841115620003ff57620003ff62000348565b50506001821b62000457565b5060208310610133831016604e8410600b841016171562000430575081810a62000457565b6200043c83836200035e565b806000190482111562000453576200045362000348565b0290505b92915050565b60006200046b8383620003a7565b9392505050565b808202811582820484141762000457576200045762000348565b6107af806200049c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461012257806395d89b4114610142578063a9059cbb1461014a578063dd62ed3e1461015d57600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610188565b6040516100ad91906105e5565b60405180910390f35b6100c96100c436600461064f565b610216565b60405190151581526020016100ad565b6100e260055481565b6040519081526020016100ad565b6100c96100fe366004610679565b610283565b6002546101109060ff1681565b60405160ff90911681526020016100ad565b6100e26101303660046106b5565b60036020526000908152604090205481565b6100a0610354565b6100c961015836600461064f565b610361565b6100e261016b3660046106d0565b600460209081526000928352604080842090915290825290205481565b6000805461019590610703565b80601f01602080910402602001604051908101604052809291908181526020018280546101c190610703565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102719086815260200190565b60405180910390a35060015b92915050565b6000610290848484610377565b6001600160a01b03841660009081526004602090815260408083203384529091529020548281101561031a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103248382610753565b6001600160a01b038616600090815260046020908152604080832033845290915290205550600190509392505050565b6001805461019590610703565b600061036e338484610377565b50600192915050565b6001600160a01b0382166103d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610311565b6001600160a01b0383166000908152600360205260409020548111156104505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610311565b6001600160a01b0383166000908152600360205260409020546104739082610503565b6001600160a01b0380851660009081526003602052604080822093909355908416815220546104a2908261054c565b6001600160a01b0380841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104f69085815260200190565b60405180910390a3505050565b600061054583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506105ab565b9392505050565b6000806105598385610766565b9050838110156105455760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610311565b600081848411156105cf5760405162461bcd60e51b815260040161031191906105e5565b5060006105dc8486610753565b95945050505050565b600060208083528351808285015260005b81811015610612578581018301518582016040015282016105f6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064a57600080fd5b919050565b6000806040838503121561066257600080fd5b61066b83610633565b946020939093013593505050565b60008060006060848603121561068e57600080fd5b61069784610633565b92506106a560208501610633565b9150604084013590509250925092565b6000602082840312156106c757600080fd5b61054582610633565b600080604083850312156106e357600080fd5b6106ec83610633565b91506106fa60208401610633565b90509250929050565b600181811c9082168061071757607f821691505b60208210810361073757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561027d5761027d61073d565b8082018082111561027d5761027d61073d56fea2646970667358221220bd18bc9955c349c24d4e46579ca68ddb2a9baf880ac5771e940ea36eb1ea5abf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC4B CODESIZE SUB DUP1 PUSH3 0xC4B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x162 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP6 DUP3 PUSH3 0x27C JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP5 DUP3 PUSH3 0x27C JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x71 SWAP1 PUSH1 0xA PUSH3 0x45D JUMP JUMPDEST PUSH3 0x7D SWAP1 DUP3 PUSH3 0x472 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH3 0x48C SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xE2 JUMPI PUSH3 0xE2 PUSH3 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x10D JUMPI PUSH3 0x10D PUSH3 0x9D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x14E JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x12F JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x19F DUP9 DUP4 DUP10 ADD PUSH3 0xB3 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1C5 DUP8 DUP3 DUP9 ADD PUSH3 0xB3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x202 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x223 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x277 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x252 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x273 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x25E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x298 JUMPI PUSH3 0x298 PUSH3 0x9D JUMP JUMPDEST PUSH3 0x2B0 DUP2 PUSH3 0x2A9 DUP5 SLOAD PUSH3 0x1ED JUMP JUMPDEST DUP5 PUSH3 0x229 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2E8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2CF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x273 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x319 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2F8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x338 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x39F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x383 JUMPI PUSH3 0x383 PUSH3 0x348 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x391 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x363 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3B8 JUMPI POP PUSH1 0x1 PUSH3 0x457 JUMP JUMPDEST DUP2 PUSH3 0x3C7 JUMPI POP PUSH1 0x0 PUSH3 0x457 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x3E0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x3EB JUMPI PUSH3 0x40B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x457 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3FF JUMPI PUSH3 0x3FF PUSH3 0x348 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x457 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x430 JUMPI POP DUP2 DUP2 EXP PUSH3 0x457 JUMP JUMPDEST PUSH3 0x43C DUP4 DUP4 PUSH3 0x35E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x453 JUMPI PUSH3 0x453 PUSH3 0x348 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46B DUP4 DUP4 PUSH3 0x3A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x457 JUMPI PUSH3 0x457 PUSH3 0x348 JUMP JUMPDEST PUSH2 0x7AF DUP1 PUSH3 0x49C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x110 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x354 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x195 SWAP1 PUSH2 0x703 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C1 SWAP1 PUSH2 0x703 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x271 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP5 DUP5 DUP5 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x324 DUP4 DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x195 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E CALLER DUP5 DUP5 PUSH2 0x377 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x473 SWAP1 DUP3 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4A2 SWAP1 DUP3 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x4F6 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x5AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x559 DUP4 DUP6 PUSH2 0x766 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5DC DUP5 DUP7 PUSH2 0x753 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x612 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5F6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66B DUP4 PUSH2 0x633 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x697 DUP5 PUSH2 0x633 JUMP JUMPDEST SWAP3 POP PUSH2 0x6A5 PUSH1 0x20 DUP6 ADD PUSH2 0x633 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x545 DUP3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6EC DUP4 PUSH2 0x633 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FA PUSH1 0x20 DUP5 ADD PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x717 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x737 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x73D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x73D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD XOR 0xBC SWAP10 SSTORE 0xC3 0x49 0xC2 0x4D 0x4E CHAINID JUMPI SWAP13 0xA6 DUP14 0xDB 0x2A SWAP12 0xAF DUP9 EXP 0xC5 PUSH24 0x1E940EA36EB1EA5ABF64736F6C6343000814003300000000 ",
							"sourceMap": "169:1947:0:-:0;;;521:294;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;629:4;:12;636:5;629:4;:12;:::i;:::-;-1:-1:-1;651:6:0;:16;660:7;651:6;:16;:::i;:::-;-1:-1:-1;677:8:0;:20;;-1:-1:-1;;677:20:0;;;;;;;;;;739:23;;:2;:23;:::i;:::-;721:42;;:14;:42;:::i;:::-;707:11;:56;;;783:10;773:21;;;;:9;:21;;;;;:35;-1:-1:-1;169:1947:0;;-1:-1:-1;;;169:1947:0;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:4:o;991:774::-;1106:6;1114;1122;1130;1183:3;1171:9;1162:7;1158:23;1154:33;1151:53;;;1200:1;1197;1190:12;1151:53;1227:16;;-1:-1:-1;;;;;1292:14:4;;;1289:34;;;1319:1;1316;1309:12;1289:34;1342:61;1395:7;1386:6;1375:9;1371:22;1342:61;:::i;:::-;1332:71;;1449:2;1438:9;1434:18;1428:25;1412:41;;1478:2;1468:8;1465:16;1462:36;;;1494:1;1491;1484:12;1462:36;;1517:63;1572:7;1561:8;1550:9;1546:24;1517:63;:::i;:::-;1507:73;;;1623:2;1612:9;1608:18;1602:25;1667:4;1660:5;1656:16;1649:5;1646:27;1636:55;;1687:1;1684;1677:12;1636:55;1755:2;1740:18;;;;1734:25;991:774;;;;-1:-1:-1;;;991:774:4:o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:4;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2372:448;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:4;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:4;;;4204:26;4155:89;-1:-1:-1;;2959:1:4;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:4;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:4;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:4;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:4:o;4359:127::-;4420:10;4415:3;4411:20;4408:1;4401:31;4451:4;4448:1;4441:15;4475:4;4472:1;4465:15;4491:422;4580:1;4623:5;4580:1;4637:270;4658:7;4648:8;4645:21;4637:270;;;4717:4;4713:1;4709:6;4705:17;4699:4;4696:27;4693:53;;;4726:18;;:::i;:::-;4776:7;4766:8;4762:22;4759:55;;;4796:16;;;;4759:55;4875:22;;;;4835:15;;;;4637:270;;;4641:3;4491:422;;;;;:::o;4918:806::-;4967:5;4997:8;4987:80;;-1:-1:-1;5038:1:4;5052:5;;4987:80;5086:4;5076:76;;-1:-1:-1;5123:1:4;5137:5;;5076:76;5168:4;5186:1;5181:59;;;;5254:1;5249:130;;;;5161:218;;5181:59;5211:1;5202:10;;5225:5;;;5249:130;5286:3;5276:8;5273:17;5270:43;;;5293:18;;:::i;:::-;-1:-1:-1;;5349:1:4;5335:16;;5364:5;;5161:218;;5463:2;5453:8;5450:16;5444:3;5438:4;5435:13;5431:36;5425:2;5415:8;5412:16;5407:2;5401:4;5398:12;5394:35;5391:77;5388:159;;;-1:-1:-1;5500:19:4;;;5532:5;;5388:159;5579:34;5604:8;5598:4;5579:34;:::i;:::-;5649:6;5645:1;5641:6;5637:19;5628:7;5625:32;5622:58;;;5660:18;;:::i;:::-;5698:20;;-1:-1:-1;4918:806:4;;;;;:::o;5729:131::-;5789:5;5818:36;5845:8;5839:4;5818:36;:::i;:::-;5809:45;5729:131;-1:-1:-1;;;5729:131:4:o;5865:168::-;5938:9;;;5969;;5986:15;;;5980:22;;5966:37;5956:71;;6007:18;;:::i;5865:168::-;169:1947:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transfer_163": {
									"entryPoint": 887,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_623": {
									"entryPoint": 1356,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_191": {
									"entryPoint": 534,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_12": {
									"entryPoint": 392,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_640": {
									"entryPoint": 1283,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_668": {
									"entryPoint": 1451,
									"id": 668,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_14": {
									"entryPoint": 852,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_238": {
									"entryPoint": 643,
									"id": 238,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_106": {
									"entryPoint": 865,
									"id": 106,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4709:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:4",
																"statements": []
															},
															"src": "294:140:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:4"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:4",
														"type": ""
													}
												],
												"src": "14:548:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:4"
															},
															"nodeType": "YulIf",
															"src": "664:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:4",
														"type": ""
													}
												],
												"src": "567:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:4"
															},
															"nodeType": "YulIf",
															"src": "842:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:4",
														"type": ""
													}
												],
												"src": "745:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:4",
														"type": ""
													}
												],
												"src": "1004:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:4",
														"type": ""
													}
												],
												"src": "1196:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:4"
															},
															"nodeType": "YulIf",
															"src": "1492:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:4",
														"type": ""
													}
												],
												"src": "1378:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:4",
														"type": ""
													}
												],
												"src": "1711:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:4"
															},
															"nodeType": "YulIf",
															"src": "1980:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:4",
														"type": ""
													}
												],
												"src": "1900:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:4"
															},
															"nodeType": "YulIf",
															"src": "2188:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:4",
														"type": ""
													}
												],
												"src": "2091:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:4"
															},
															"nodeType": "YulIf",
															"src": "2499:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:4"
															},
															"nodeType": "YulIf",
															"src": "2569:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:4",
														"type": ""
													}
												],
												"src": "2356:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:230:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3092:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:38:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3112:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2892:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:4",
														"type": ""
													}
												],
												"src": "2741:404:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3206:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3211:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3192:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3242:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3150:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3331:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3341:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3356:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3341:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3382:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3384:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3384:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3384:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3373:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3370:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:11:4"
															},
															"nodeType": "YulIf",
															"src": "3367:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3313:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3316:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3322:4:4",
														"type": ""
													}
												],
												"src": "3282:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3589:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3606:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3617:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3599:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3640:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3651:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3636:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3636:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3629:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3629:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3679:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3690:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3675:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3695:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3668:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3761:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3766:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3739:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3739:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3781:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3789:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3781:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3566:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3580:4:4",
														"type": ""
													}
												],
												"src": "3415:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4003:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4099:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4072:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4154:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4150:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4150:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4170:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4143:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4200:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4211:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4188:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3970:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3984:4:4",
														"type": ""
													}
												],
												"src": "3819:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4274:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4284:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4295:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4298:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4323:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4325:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4325:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4325:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4315:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4318:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4312:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:10:4"
															},
															"nodeType": "YulIf",
															"src": "4309:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4257:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4260:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4266:3:4",
														"type": ""
													}
												],
												"src": "4226:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:177:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4540:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4570:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:4"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4636:29:4",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4609:57:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4675:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4687:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4698:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4675:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4507:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4521:4:4",
														"type": ""
													}
												],
												"src": "4356:351:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461012257806395d89b4114610142578063a9059cbb1461014a578063dd62ed3e1461015d57600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610188565b6040516100ad91906105e5565b60405180910390f35b6100c96100c436600461064f565b610216565b60405190151581526020016100ad565b6100e260055481565b6040519081526020016100ad565b6100c96100fe366004610679565b610283565b6002546101109060ff1681565b60405160ff90911681526020016100ad565b6100e26101303660046106b5565b60036020526000908152604090205481565b6100a0610354565b6100c961015836600461064f565b610361565b6100e261016b3660046106d0565b600460209081526000928352604080842090915290825290205481565b6000805461019590610703565b80601f01602080910402602001604051908101604052809291908181526020018280546101c190610703565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102719086815260200190565b60405180910390a35060015b92915050565b6000610290848484610377565b6001600160a01b03841660009081526004602090815260408083203384529091529020548281101561031a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103248382610753565b6001600160a01b038616600090815260046020908152604080832033845290915290205550600190509392505050565b6001805461019590610703565b600061036e338484610377565b50600192915050565b6001600160a01b0382166103d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610311565b6001600160a01b0383166000908152600360205260409020548111156104505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610311565b6001600160a01b0383166000908152600360205260409020546104739082610503565b6001600160a01b0380851660009081526003602052604080822093909355908416815220546104a2908261054c565b6001600160a01b0380841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104f69085815260200190565b60405180910390a3505050565b600061054583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506105ab565b9392505050565b6000806105598385610766565b9050838110156105455760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610311565b600081848411156105cf5760405162461bcd60e51b815260040161031191906105e5565b5060006105dc8486610753565b95945050505050565b600060208083528351808285015260005b81811015610612578581018301518582016040015282016105f6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064a57600080fd5b919050565b6000806040838503121561066257600080fd5b61066b83610633565b946020939093013593505050565b60008060006060848603121561068e57600080fd5b61069784610633565b92506106a560208501610633565b9150604084013590509250925092565b6000602082840312156106c757600080fd5b61054582610633565b600080604083850312156106e357600080fd5b6106ec83610633565b91506106fa60208401610633565b90509250929050565b600181811c9082168061071757607f821691505b60208210810361073757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561027d5761027d61073d565b8082018082111561027d5761027d61073d56fea2646970667358221220bd18bc9955c349c24d4e46579ca68ddb2a9baf880ac5771e940ea36eb1ea5abf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x110 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x354 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x195 SWAP1 PUSH2 0x703 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C1 SWAP1 PUSH2 0x703 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x271 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP5 DUP5 DUP5 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x324 DUP4 DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x195 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E CALLER DUP5 DUP5 PUSH2 0x377 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x473 SWAP1 DUP3 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4A2 SWAP1 DUP3 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x4F6 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x5AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x559 DUP4 DUP6 PUSH2 0x766 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5DC DUP5 DUP7 PUSH2 0x753 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x612 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5F6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66B DUP4 PUSH2 0x633 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x697 DUP5 PUSH2 0x633 JUMP JUMPDEST SWAP3 POP PUSH2 0x6A5 PUSH1 0x20 DUP6 ADD PUSH2 0x633 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x545 DUP3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6EC DUP4 PUSH2 0x633 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FA PUSH1 0x20 DUP5 ADD PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x717 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x737 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x73D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27D PUSH2 0x73D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD XOR 0xBC SWAP10 SSTORE 0xC3 0x49 0xC2 0x4D 0x4E CHAINID JUMPI SWAP13 0xA6 DUP14 0xDB 0x2A SWAP12 0xAF DUP9 EXP 0xC5 PUSH24 0x1E940EA36EB1EA5ABF64736F6C6343000814003300000000 ",
							"sourceMap": "169:1947:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1529:204;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:4;;1162:22;1144:41;;1132:2;1117:18;1529:204:0;1004:187:4;488:26:0;;;;;;;;;1342:25:4;;;1330:2;1315:18;488:26:0;1196:177:4;1739:375:0;;;;;;:::i;:::-;;:::i;341:21::-;;;;;;;;;;;;1883:4:4;1871:17;;;1853:36;;1841:2;1826:18;341:21:0;1711:184:4;368:44:0;;;;;;:::i;:::-;;;;;;;;;;;;;;315:20;;;:::i;982:141::-;;;;;;:::i;:::-;;:::i;418:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;291:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1529:204::-;1622:10;1596:4;1612:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1612:31:0;;;;;;;;;;:40;;;1667:38;1596:4;;1612:31;;1667:38;;;;1646:6;1342:25:4;;1330:2;1315:18;;1196:177;1667:38:0;;;;;;;;-1:-1:-1;1722:4:0;1529:204;;;;;:::o;1739:375::-;1821:4;1837:29;1847:5;1854:3;1859:6;1837:9;:29::i;:::-;-1:-1:-1;;;;;1903:16:0;;1876:24;1903:16;;;:9;:16;;;;;;;;1920:10;1903:28;;;;;;;;1949:26;;;;1941:79;;;;-1:-1:-1;;;1941:79:0;;2943:2:4;1941:79:0;;;2925:21:4;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:4;;;3065:38;3120:19;;1941:79:0;;;;;;;;;2061:25;2080:6;2061:16;:25;:::i;:::-;-1:-1:-1;;;;;2030:16:0;;;;;;:9;:16;;;;;;;;2047:10;2030:28;;;;;;;:56;-1:-1:-1;2103:4:0;;-1:-1:-1;1739:375:0;;;;;:::o;315:20::-;;;;;;;:::i;982:141::-;1045:4;1061:34;1071:10;1083:3;1088:6;1061:9;:34::i;:::-;-1:-1:-1;1112:4:0;982:141;;;;:::o;1129:394::-;-1:-1:-1;;;;;1219:17:0;;1211:65;;;;-1:-1:-1;;;1211:65:0;;3617:2:4;1211:65:0;;;3599:21:4;3656:2;3636:18;;;3629:30;3695:34;3675:18;;;3668:62;-1:-1:-1;;;3746:18:4;;;3739:33;3789:19;;1211:65:0;3415:399:4;1211:65:0;-1:-1:-1;;;;;1294:16:0;;;;;;:9;:16;;;;;;:26;-1:-1:-1;1294:26:0;1286:77;;;;-1:-1:-1;;;1286:77:0;;4021:2:4;1286:77:0;;;4003:21:4;4060:2;4040:18;;;4033:30;4099:34;4079:18;;;4072:62;-1:-1:-1;;;4150:18:4;;;4143:36;4196:19;;1286:77:0;3819:402:4;1286:77:0;-1:-1:-1;;;;;1392:16:0;;;;;;:9;:16;;;;;;:28;;1413:6;1392:20;:28::i;:::-;-1:-1:-1;;;;;1373:16:0;;;;;;;:9;:16;;;;;;:47;;;;1447:14;;;;;;;:26;;1466:6;1447:18;:26::i;:::-;-1:-1:-1;;;;;1430:14:0;;;;;;;:9;:14;;;;;;;:43;;;;1488:28;;;;;;;;;;1509:6;1342:25:4;;1330:2;1315:18;;1196:177;1488:28:0;;;;;;;;1129:394;;;:::o;1445:134:3:-;1503:7;1529:43;1533:1;1536;1529:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1522:50;1445:134;-1:-1:-1;;;1445:134:3:o;1005:176::-;1063:7;;1094:5;1098:1;1094;:5;:::i;:::-;1082:17;;1122:1;1117;:6;;1109:46;;;;-1:-1:-1;;;1109:46:3;;4558:2:4;1109:46:3;;;4540:21:4;4597:2;4577:18;;;4570:30;4636:29;4616:18;;;4609:57;4683:18;;1109:46:3;4356:351:4;1903:187:3;1989:7;2024:12;2016:6;;;;2008:29;;;;-1:-1:-1;;;2008:29:3;;;;;;;;:::i;:::-;-1:-1:-1;2047:9:3;2059:5;2063:1;2059;:5;:::i;:::-;2047:17;1903:187;-1:-1:-1;;;;;1903:187:3:o;14:548:4:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:4;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:4:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:127::-;3211:10;3206:3;3202:20;3199:1;3192:31;3242:4;3239:1;3232:15;3266:4;3263:1;3256:15;3282:128;3349:9;;;3370:11;;;3367:37;;;3384:18;;:::i;4226:125::-;4291:9;;;4312:10;;;4309:36;;;4325:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "393400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24523",
								"balanceOf(address)": "2541",
								"decimals()": "2313",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2340",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 521,
									"end": 815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 521,
									"end": 815,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 521,
									"end": 815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 629,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 636,
									"end": 641,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 629,
									"end": 633,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 629,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 629,
									"end": 641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 629,
									"end": 641,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 629,
									"end": 641,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 651,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 651,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 660,
									"end": 667,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 651,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 651,
									"end": 667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 651,
									"end": 667,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 651,
									"end": 667,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 677,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 677,
									"end": 697,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 677,
									"end": 697,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 677,
									"end": 697,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 677,
									"end": 697,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 739,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 739,
									"end": 762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 739,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 739,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 739,
									"end": 762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 739,
									"end": 762,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 739,
									"end": 762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 721,
									"end": 735,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 721,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 707,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 707,
									"end": 763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 707,
									"end": 763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 707,
									"end": 763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 783,
									"end": 793,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 773,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 773,
									"end": 794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 773,
									"end": 794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 773,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 773,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 773,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 773,
									"end": 794,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 773,
									"end": 808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1112,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1136,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1171,
									"end": 1180,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1169,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1158,
									"end": 1181,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1154,
									"end": 1187,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1190,
									"end": 1202,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1227,
									"end": 1243,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1227,
									"end": 1243,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1319,
									"end": 1320,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1395,
									"end": 1402,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1386,
									"end": 1392,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1375,
									"end": 1384,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1393,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1342,
									"end": 1403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1332,
									"end": 1403,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1332,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1438,
									"end": 1447,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1453,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1412,
									"end": 1453,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1412,
									"end": 1453,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1478,
									"end": 1480,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1468,
									"end": 1476,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1481,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1495,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1496,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1572,
									"end": 1579,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1569,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1550,
									"end": 1559,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1546,
									"end": 1570,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1517,
									"end": 1580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1608,
									"end": 1626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1602,
									"end": 1627,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1660,
									"end": 1665,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1672,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1654,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1636,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1636,
									"end": 1691,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1687,
									"end": 1688,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1684,
									"end": 1685,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1677,
									"end": 1689,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1636,
									"end": 1691,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1636,
									"end": 1691,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1734,
									"end": 1759,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP7",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 991,
									"end": 1765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1959,
									"end": 1965,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1955,
									"end": 1972,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2020,
									"end": 2022,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2012,
									"end": 2018,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1989,
									"end": 2007,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1986,
									"end": 2024,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2066,
									"end": 2076,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 2061,
									"end": 2064,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 2057,
									"end": 2077,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2078,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2098,
									"end": 2099,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2091,
									"end": 2106,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2119,
									"end": 2134,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1770,
									"end": 2150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2385,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2378,
									"end": 2381,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2420,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2444,
									"end": 2449,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2450,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2489,
									"end": 2493,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2475,
									"end": 2494,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2561,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2547,
									"end": 2557,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2540,
									"end": 2541,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2536,
									"end": 2563,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2530,
									"end": 2534,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2526,
									"end": 2564,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2595,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2593,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2580,
									"end": 2600,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2618,
									"end": 2622,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2673,
									"end": 2675,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2668,
									"end": 2671,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2664,
									"end": 2676,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2657,
									"end": 2677,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2637,
									"end": 2678,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2637,
									"end": 2678,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2746,
									"end": 2748,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2739,
									"end": 2744,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2736,
									"end": 2749,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2761,
									"end": 2774,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3122,
									"end": 3132,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3122,
									"end": 3132,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3144,
									"end": 3174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3174,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 3177,
									"end": 3195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 3296,
									"end": 3302,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 3288,
									"end": 3292,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3282,
									"end": 3293,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 3256,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3250,
									"end": 3254,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3206,
									"end": 3303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3362,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3358,
									"end": 3362,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3422,
									"end": 3424,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3411,
									"end": 3425,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3411,
									"end": 3425,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3440,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4141,
									"end": 4142,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4158,
									"end": 4164,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4204,
									"end": 4230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2959,
									"end": 2960,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2951,
									"end": 2975,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2947,
									"end": 2976,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2934,
									"end": 2991,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4257,
									"end": 4338,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4257,
									"end": 4338,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3404,
									"end": 4348,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 3404,
									"end": 4348,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2228,
									"end": 2229,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2265,
									"end": 2269,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3602,
									"end": 3609,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3599,
									"end": 3600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3596,
									"end": 3610,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3685,
									"end": 3711,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3670,
									"end": 3712,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3670,
									"end": 3712,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3751,
									"end": 3752,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3618,
									"end": 3637,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3618,
									"end": 3637,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3592,
									"end": 3595,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3852,
									"end": 3858,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3843,
									"end": 3850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3907,
									"end": 3933,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3996,
									"end": 3997,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4008,
									"end": 4011,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 3988,
									"end": 4012,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3984,
									"end": 4021,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3980,
									"end": 4022,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3965,
									"end": 4023,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 4024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 4024,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4084,
									"end": 4085,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4064,
									"end": 4086,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4051,
									"end": 4087,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4051,
									"end": 4087,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3002,
									"end": 4354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4359,
									"end": 4486,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4359,
									"end": 4486,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4420,
									"end": 4430,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 4415,
									"end": 4418,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 4411,
									"end": 4431,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4408,
									"end": 4409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4401,
									"end": 4432,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4448,
									"end": 4449,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4441,
									"end": 4456,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4475,
									"end": 4479,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4472,
									"end": 4473,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4580,
									"end": 4581,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4623,
									"end": 4628,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4580,
									"end": 4581,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4658,
									"end": 4665,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4648,
									"end": 4656,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4645,
									"end": 4666,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4717,
									"end": 4721,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4713,
									"end": 4714,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4709,
									"end": 4715,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4705,
									"end": 4722,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 4699,
									"end": 4703,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4696,
									"end": 4723,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4693,
									"end": 4746,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4693,
									"end": 4746,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 4693,
									"end": 4746,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4726,
									"end": 4744,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 4726,
									"end": 4744,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4726,
									"end": 4744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4726,
									"end": 4744,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 4726,
									"end": 4744,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4776,
									"end": 4783,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4766,
									"end": 4774,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4762,
									"end": 4784,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4759,
									"end": 4814,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4759,
									"end": 4814,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 4759,
									"end": 4814,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4796,
									"end": 4812,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4796,
									"end": 4812,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4796,
									"end": 4812,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4796,
									"end": 4812,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4759,
									"end": 4814,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 4759,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4875,
									"end": 4897,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4875,
									"end": 4897,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4875,
									"end": 4897,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 4875,
									"end": 4897,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4835,
									"end": 4850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4835,
									"end": 4850,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4835,
									"end": 4850,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4835,
									"end": 4850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 4637,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4641,
									"end": 4644,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4491,
									"end": 4913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4997,
									"end": 5005,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4987,
									"end": 5067,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 4987,
									"end": 5067,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5038,
									"end": 5039,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5052,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5052,
									"end": 5057,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4987,
									"end": 5067,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 4987,
									"end": 5067,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5086,
									"end": 5090,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5076,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 5076,
									"end": 5152,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5123,
									"end": 5124,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5137,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5137,
									"end": 5142,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5076,
									"end": 5152,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 5076,
									"end": 5152,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5168,
									"end": 5172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5186,
									"end": 5187,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5161,
									"end": 5379,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 5161,
									"end": 5379,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 5181,
									"end": 5240,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5211,
									"end": 5212,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5202,
									"end": 5212,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5202,
									"end": 5212,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5225,
									"end": 5230,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 5249,
									"end": 5379,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5286,
									"end": 5289,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 5276,
									"end": 5284,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5273,
									"end": 5290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 5270,
									"end": 5313,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5270,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 5270,
									"end": 5313,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5293,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 5293,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5293,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5293,
									"end": 5311,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 5293,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5349,
									"end": 5350,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5335,
									"end": 5351,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5335,
									"end": 5351,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 5364,
									"end": 5369,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5364,
									"end": 5369,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5161,
									"end": 5379,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 5161,
									"end": 5379,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5161,
									"end": 5379,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5463,
									"end": 5465,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5453,
									"end": 5461,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5450,
									"end": 5466,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5444,
									"end": 5447,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 5438,
									"end": 5442,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5435,
									"end": 5448,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5431,
									"end": 5467,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5425,
									"end": 5427,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 5415,
									"end": 5423,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5412,
									"end": 5428,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5407,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 5401,
									"end": 5405,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5398,
									"end": 5410,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5394,
									"end": 5429,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5391,
									"end": 5468,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5500,
									"end": 5519,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5500,
									"end": 5519,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5500,
									"end": 5519,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 5532,
									"end": 5537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5532,
									"end": 5537,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5579,
									"end": 5613,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 5604,
									"end": 5612,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5598,
									"end": 5602,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5579,
									"end": 5613,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 5579,
									"end": 5613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5579,
									"end": 5613,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 5579,
									"end": 5613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5649,
									"end": 5655,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5645,
									"end": 5646,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5641,
									"end": 5647,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 5637,
									"end": 5656,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 5628,
									"end": 5635,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5625,
									"end": 5657,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 5622,
									"end": 5680,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5622,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 5622,
									"end": 5680,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5660,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 5660,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5660,
									"end": 5678,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 5660,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5698,
									"end": 5718,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 5698,
									"end": 5718,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4918,
									"end": 5724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5729,
									"end": 5860,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 5729,
									"end": 5860,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5789,
									"end": 5794,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5818,
									"end": 5854,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 5845,
									"end": 5853,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5839,
									"end": 5843,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5818,
									"end": 5854,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 5818,
									"end": 5854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5818,
									"end": 5854,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 5818,
									"end": 5854,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5809,
									"end": 5854,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 5729,
									"end": 5860,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5729,
									"end": 5860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5865,
									"end": 6033,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 5865,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5938,
									"end": 5947,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5938,
									"end": 5947,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5938,
									"end": 5947,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 5969,
									"end": 5978,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5969,
									"end": 5978,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5986,
									"end": 6001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5986,
									"end": 6001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5986,
									"end": 6001,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 5980,
									"end": 6002,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5980,
									"end": 6002,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 5966,
									"end": 6003,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 5956,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 5956,
									"end": 6027,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6007,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 6007,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6007,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5865,
									"end": 6033,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 5865,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2116,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd18bc9955c349c24d4e46579ca68ddb2a9baf880ac5771e940ea36eb1ea5abf64736f6c63430008140033",
									".code": [
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1529,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 488,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 488,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 514,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 488,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1739,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1739,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 368,
											"end": 412,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 368,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 315,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 315,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 315,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 982,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 982,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 418,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 291,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 291,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1632,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1705,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1837,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1930,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1941,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2061,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 315,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 315,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 315,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1071,
											"end": 1081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1061,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1095,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1061,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1129,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3729,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3730,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3415,
											"end": 3814,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1211,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4021,
											"end": 4023,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4168,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4150,
											"end": 4168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3819,
											"end": 4221,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1392,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1420,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1420,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1420,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1447,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1473,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1473,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1529,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1094,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4665,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4356,
											"end": 4707,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2008,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2059,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3384,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4351,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4226,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4322,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4325,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4325,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/CollateralToken.sol",
								"contracts/Dependencies/Address.sol",
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CollateralToken.sol\":\"CollateralToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CollateralToken.sol\":{\"keccak256\":\"0x01012b206f8c12e271213f152fda8f568bafe8129a9d4a3de87231516c399337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce07de506c09982df6d4d6e0e02e06c63d2c3eb80738be94e7afd72c4d04fcf\",\"dweb:/ipfs/QmchL5kjNZSvgaxpsyRGnAe9uKHe8KnSvSfw9t8Rm76oyY\"]},\"contracts/Dependencies/Address.sol\":{\"keccak256\":\"0xda01389e2f61f6ee278c394ec79abbe9709caf777e2764a825ac54911bc262d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8f3e01fa122a42f7bf563edd7357f20580287fd0c20ee4efae7f2c23730a84\",\"dweb:/ipfs/Qmce11YDSYYhAwRXZ8BQRwEV6zh5nfFjgtwPgBBncAXBwz\"]},\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]},\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 14,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 16,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							},
							{
								"astId": 20,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 26,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 28,
								"contract": "contracts/CollateralToken.sol:CollateralToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dependencies/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/Address.sol\":126:6830  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/Address.sol\":126:6830  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a330e5c68bfe7f0231c2da5d707eff7b90e113bd89bd553806cbdf89f493058764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a330e5c68bfe7f0231c2da5d707eff7b90e113bd89bd553806cbdf89f493058764736f6c63430008140033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 ADDRESS 0xE5 0xC6 DUP12 INVALID PUSH32 0x231C2DA5D707EFF7B90E113BD89BD553806CBDF89F493058764736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "126:6704:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:6704:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a330e5c68bfe7f0231c2da5d707eff7b90e113bd89bd553806cbdf89f493058764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 ADDRESS 0xE5 0xC6 DUP12 INVALID PUSH32 0x231C2DA5D707EFF7B90E113BD89BD553806CBDF89F493058764736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "126:6704:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 6830,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a330e5c68bfe7f0231c2da5d707eff7b90e113bd89bd553806cbdf89f493058764736f6c63430008140033",
									".code": [
										{
											"begin": 126,
											"end": 6830,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 6830,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CollateralToken.sol",
								"contracts/Dependencies/Address.sol",
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/Address.sol\":{\"keccak256\":\"0xda01389e2f61f6ee278c394ec79abbe9709caf777e2764a825ac54911bc262d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8f3e01fa122a42f7bf563edd7357f20580287fd0c20ee4efae7f2c23730a84\",\"dweb:/ipfs/Qmce11YDSYYhAwRXZ8BQRwEV6zh5nfFjgtwPgBBncAXBwz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dependencies/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
						"version": 1
					}
				}
			},
			"contracts/Dependencies/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;760:4708:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
									".code": [
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/CollateralToken.sol",
								"contracts/Dependencies/Address.sol",
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CollateralToken.sol": {
				"ast": {
					"absolutePath": "contracts/CollateralToken.sol",
					"exportedSymbols": {
						"Address": [
							483
						],
						"CollateralToken": [
							239
						],
						"IERC20": [
							594
						],
						"SafeMath": [
							790
						]
					},
					"id": 240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/Dependencies/IERC20.sol",
							"file": "./Dependencies/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 240,
							"sourceUnit": 595,
							"src": "57:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/SafeMath.sol",
							"file": "./Dependencies/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 240,
							"sourceUnit": 791,
							"src": "93:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/Address.sol",
							"file": "./Dependencies/Address.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 240,
							"sourceUnit": 484,
							"src": "131:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CollateralToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 239,
							"linearizedBaseContracts": [
								239
							],
							"name": "CollateralToken",
							"nameLocation": "178:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 7,
									"libraryName": {
										"id": 5,
										"name": "SafeMath",
										"nameLocations": [
											"206:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 790,
										"src": "206:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "200:27:0",
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "219:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 10,
									"libraryName": {
										"id": 8,
										"name": "Address",
										"nameLocations": [
											"238:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 483,
										"src": "238:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "232:26:0",
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "250:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 12,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "305:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "291:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "291:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 14,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "329:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "315:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 13,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "315:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 16,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "354:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "341:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "341:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 20,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "403:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "368:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 19,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "376:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "368:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 18,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "387:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 26,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "473:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "418:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 25,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "426:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "418:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "437:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "456:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 28,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "503:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "488:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "619:196:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "629:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "629:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "629:12:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "651:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "651:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "651:16:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "677:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "688:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "677:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "677:20:0"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "707:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 52,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "739:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 56,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 16,
																				"src": "753:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "745:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 54,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "745:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "745:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "739:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "738:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "721:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "707:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "707:56:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 63,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "773:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 66,
														"indexExpression": {
															"expression": {
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "783:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "787:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "773:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 67,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "797:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "773:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "773:35:0"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "533:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "554:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "583:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "577:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 33,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "602:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "594:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:85:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:0"
									},
									"scope": 239,
									"src": "521:294:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 79,
									"name": "Transfer",
									"nameLocation": "827:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "836:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "858:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "886:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "878:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:57:0"
									},
									"src": "821:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 87,
									"name": "Approval",
									"nameLocation": "904:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "929:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "913:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "952:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "936:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "961:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:63:0"
									},
									"src": "898:78:0"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1051:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 97,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1071:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1075:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1071:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1083:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 96,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1061:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1061:34:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 95,
												"id": 104,
												"nodeType": "Return",
												"src": "1105:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "991:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1008:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1000:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1021:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:29:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:6:0"
									},
									"scope": 239,
									"src": "982:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1201:322:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1234:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1226:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1226:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1226:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1219:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1238:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1211:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 126,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1294:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 128,
																"indexExpression": {
																	"id": 127,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1304:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1294:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "1314:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1294:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1286:77:0"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 134,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1373:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1383:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1373:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 141,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "1413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 137,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1392:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 139,
																"indexExpression": {
																	"id": 138,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1402:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1392:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1409:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 640,
															"src": "1392:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1392:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1373:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1373:47:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 145,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1430:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 147,
														"indexExpression": {
															"id": 146,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1440:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1430:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 152,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "1466:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 148,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1447:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 150,
																"indexExpression": {
																	"id": 149,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "1457:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1447:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1462:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 623,
															"src": "1447:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1447:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1430:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 157,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1504:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1509:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1488:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "EmitStatement",
												"src": "1483:33:0"
											}
										]
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1138:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1171:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1163:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:44:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1201:0:0"
									},
									"scope": 239,
									"src": "1129:394:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1602:131:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 172,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1612:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 176,
															"indexExpression": {
																"expression": {
																	"id": 173,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1622:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1626:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1612:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 177,
														"indexExpression": {
															"id": 175,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1634:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1612:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 178,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1646:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1612:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1612:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1676:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1680:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1676:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 181,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1667:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "1662:43:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 171,
												"id": 189,
												"nodeType": "Return",
												"src": "1715:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1538:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1554:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:34:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1596:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:6:0"
									},
									"scope": 239,
									"src": "1529:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1827:287:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1847:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "1854:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1837:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "1884:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "1876:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 210,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1903:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 212,
														"indexExpression": {
															"id": 211,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1913:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1903:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 215,
													"indexExpression": {
														"expression": {
															"id": 213,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1920:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1924:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1903:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 218,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1949:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 219,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1969:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1949:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1977:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1941:79:0"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 224,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2030:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 228,
															"indexExpression": {
																"id": 225,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "2040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2030:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 229,
														"indexExpression": {
															"expression": {
																"id": 226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2047:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2051:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2047:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2030:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 230,
															"name": "currentAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2061:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 231,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2061:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2030:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2030:56:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 201,
												"id": 236,
												"nodeType": "Return",
												"src": "2096:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1748:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1769:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1761:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1784:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1776:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1797:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1789:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1760:44:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1821:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1821:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:6:0"
									},
									"scope": 239,
									"src": "1739:375:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 240,
							"src": "169:1947:0",
							"usedErrors": [],
							"usedEvents": [
								79,
								87
							]
						}
					],
					"src": "32:2084:0"
				},
				"id": 0
			},
			"contracts/Dependencies/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/Address.sol",
					"exportedSymbols": {
						"Address": [
							483
						]
					},
					"id": 484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 241,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 483,
							"linearizedBaseContracts": [
								483
							],
							"name": "Address",
							"nameLocation": "134:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "784:347:1",
										"statements": [
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "981:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 245,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:1",
														"valueSize": 1
													},
													{
														"declaration": 251,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:1",
														"valueSize": 1
													}
												],
												"id": 253,
												"nodeType": "InlineAssembly",
												"src": "1059:41:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "1116:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 249,
												"id": 257,
												"nodeType": "Return",
												"src": "1109:15:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 483,
									"src": "718:413:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2119:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 270,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$483",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$483",
																				"typeString": "library Address"
																			}
																		],
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 268,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2151:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2162:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:1"
											},
											{
												"assignments": [
													279,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "2291:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 286,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 280,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2309:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 282,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2332:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "2362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:1"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2067:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:1"
									},
									"scope": 483,
									"src": "2048:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "3269:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3297:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3305:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 303,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															310,
															330
														],
														"referencedDeclaration": 330,
														"src": "3284:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 302,
												"id": 308,
												"nodeType": "Return",
												"src": "3277:67:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3202:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3218:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3255:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:1"
									},
									"scope": 483,
									"src": "3180:171:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3690:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3729:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3737:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 326,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3746:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 322,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															350,
															400
														],
														"referencedDeclaration": 400,
														"src": "3707:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 321,
												"id": 328,
												"nodeType": "Return",
												"src": "3700:59:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3595:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3611:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3630:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3676:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:1"
									},
									"scope": 483,
									"src": "3573:193:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "4241:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4280:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4288:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4294:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 342,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															350,
															400
														],
														"referencedDeclaration": 400,
														"src": "4258:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 341,
												"id": 348,
												"nodeType": "Return",
												"src": "4251:94:1"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4159:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4175:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4194:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4227:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:1"
									},
									"scope": 483,
									"src": "4128:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "4741:382:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$483",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$483",
																				"typeString": "library Address"
																			}
																		],
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 365,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4773:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 370,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "4784:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 377,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "4861:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 376,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "4850:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:1"
											},
											{
												"assignments": [
													383,
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "4973:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 382,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "4987:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 384,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"arguments": [
														{
															"id": 390,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5042:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 386,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5014:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5021:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 388,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "5034:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5082:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 395,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5091:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 396,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5103:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 393,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5064:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 398,
												"nodeType": "Return",
												"src": "5057:59:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4631:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4647:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4666:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4681:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4727:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:1"
									},
									"scope": 483,
									"src": "4600:523:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "5400:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "5436:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5444:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 410,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															417,
															452
														],
														"referencedDeclaration": 452,
														"src": "5417:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 409,
												"id": 415,
												"nodeType": "Return",
												"src": "5410:80:1"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5328:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5344:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5386:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:1"
									},
									"scope": 483,
									"src": "5300:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "5809:288:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 431,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5838:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 430,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "5827:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:1"
											},
											{
												"assignments": [
													437,
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "5957:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "5971:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"id": 442,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6016:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 440,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "5998:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6005:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6056:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 447,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6065:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 448,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6077:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 445,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "6038:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 428,
												"id": 450,
												"nodeType": "Return",
												"src": "6031:59:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5709:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5725:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5744:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5795:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:1"
									},
									"scope": 483,
									"src": "5681:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "6232:596:1",
										"statements": [
											{
												"condition": {
													"id": 463,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "6246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "6303:519:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 467,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "6387:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6398:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6387:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6407:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6387:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 477,
																"nodeType": "Block",
																"src": "6759:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 474,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 458,
																					"src": "6784:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 473,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6777:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6777:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 476,
																		"nodeType": "ExpressionStatement",
																		"src": "6777:20:1"
																	}
																]
															},
															"id": 478,
															"nodeType": "IfStatement",
															"src": "6383:429:1",
															"trueBody": {
																"id": 472,
																"nodeType": "Block",
																"src": "6410:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6594:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6616:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6645:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6639:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6639:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6620:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6688:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6692:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6684:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6684:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6705:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6677:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6677:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6677:44:1"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 456,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6645:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 456,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6692:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 471,
																		"nodeType": "InlineAssembly",
																		"src": "6585:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "6242:580:1",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6255:42:1",
													"statements": [
														{
															"expression": {
																"id": 464,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "6276:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 462,
															"id": 465,
															"nodeType": "Return",
															"src": "6269:17:1"
														}
													]
												}
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6112:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6135:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6130:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6130:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6157:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6144:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6144:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6183:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6169:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6169:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:67:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6218:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6217:14:1"
									},
									"scope": 483,
									"src": "6103:725:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 484,
							"src": "126:6704:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:6798:1"
				},
				"id": 1
			},
			"contracts/Dependencies/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							594
						]
					},
					"id": 595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 485,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "58:222:2",
								"text": " Based on the OpenZeppelin IER20 interface:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 594,
							"linearizedBaseContracts": [
								594
							],
							"name": "IERC20",
							"nameLocation": "291:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "304:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "384:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "421:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:9:2"
									},
									"scope": 594,
									"src": "375:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "436:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "522:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "540:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "532:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:17:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "572:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:9:2"
									},
									"scope": 594,
									"src": "513:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "587:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "810:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "827:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "819:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "846:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "838:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:35:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "872:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:6:2"
									},
									"scope": 594,
									"src": "801:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "884:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1162:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1180:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1172:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:32:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1227:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:9:2"
									},
									"scope": 594,
									"src": "1153:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "39509351",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1250:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1276:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1268:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "1293:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1285:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:37:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1323:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:2"
									},
									"scope": 594,
									"src": "1241:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a457c2d7",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1343:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1369:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1361:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "1386:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1378:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:42:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1421:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:6:2"
									},
									"scope": 594,
									"src": "1334:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1433:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2089:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2105:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2097:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2122:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2114:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2148:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:6:2"
									},
									"scope": 594,
									"src": "2080:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2160:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2470:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2491:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2483:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2507:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2499:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2526:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2518:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:51:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2552:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:6:2"
									},
									"scope": 594,
									"src": "2461:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2573:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2603:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:15:2"
									},
									"scope": 594,
									"src": "2564:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2632:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2664:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2664:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:15:2"
									},
									"scope": 594,
									"src": "2623:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2693:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2727:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 572,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:7:2"
									},
									"scope": 594,
									"src": "2684:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2744:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 584,
									"name": "Transfer",
									"nameLocation": "2913:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2938:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2922:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2960:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2944:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2972:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:57:2"
									},
									"src": "2907:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "2985:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 593,
									"name": "Approval",
									"nameLocation": "3144:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3169:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3153:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3192:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3176:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3209:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:63:2"
									},
									"src": "3138:78:2"
								}
							],
							"scope": 595,
							"src": "281:2937:2",
							"usedErrors": [],
							"usedEvents": [
								584,
								593
							]
						}
					],
					"src": "33:3185:2"
				},
				"id": 2
			},
			"contracts/Dependencies/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							790
						]
					},
					"id": 791,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 596,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 597,
								"nodeType": "StructuredDocumentation",
								"src": "58:701:3",
								"text": " Based on OpenZeppelin's SafeMath:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 790,
							"linearizedBaseContracts": [
								790
							],
							"name": "SafeMath",
							"nameLocation": "768:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "1072:109:3",
										"statements": [
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1090:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "1082:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1082:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1094:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 610,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "1098:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1094:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1082:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1117:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 615,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "1122:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1109:46:3"
											},
											{
												"expression": {
													"id": 620,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "1173:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 606,
												"id": 621,
												"nodeType": "Return",
												"src": "1166:8:3"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "783:217:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1014:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1063:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:9:3"
									},
									"scope": 790,
									"src": "1005:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "1512:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "1533:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 635,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1536:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 633,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															640,
															668
														],
														"referencedDeclaration": 668,
														"src": "1529:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 638,
												"nodeType": "Return",
												"src": "1522:50:3"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "1187:253:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1454:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1466:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1458:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1477:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1469:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:22:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1503:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:3"
									},
									"scope": 790,
									"src": "1445:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "1998:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2016:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "2021:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2016:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 656,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "2024:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2008:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "2008:29:3"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2055:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 667,
														"src": "2047:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2047:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "2059:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2063:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2047:17:3"
											},
											{
												"expression": {
													"id": 665,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "2082:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 651,
												"id": 666,
												"nodeType": "Return",
												"src": "2075:8:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1585:313:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1912:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1924:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1916:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1935:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1927:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1952:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1938:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:50:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1989:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:9:3"
									},
									"scope": 790,
									"src": "1903:187:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2397:392:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2629:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2629:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "2625:45:3",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "2637:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2658:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "2651:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2688:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "2680:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2692:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2696:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "2715:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "2719:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2715:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "2724:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2715:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2707:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "2707:56:3"
											},
											{
												"expression": {
													"id": 700,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "2781:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 701,
												"nodeType": "Return",
												"src": "2774:8:3"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2096:229:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2339:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2351:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2362:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2354:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2388:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:9:3"
									},
									"scope": 790,
									"src": "2330:459:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3311:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "3332:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3335:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 713,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															720,
															748
														],
														"referencedDeclaration": 748,
														"src": "3328:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 718,
												"nodeType": "Return",
												"src": "3321:46:3"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "2795:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3253:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3265:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3257:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3276:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3268:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:22:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3302:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:9:3"
									},
									"scope": 790,
									"src": "3244:130:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3984:243:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 733,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "4068:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4072:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4068:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 736,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4075:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4060:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "4060:28:3"
											},
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4106:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "4098:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4098:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4110:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 742,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4114:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4098:17:3"
											},
											{
												"expression": {
													"id": 745,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "4219:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 746,
												"nodeType": "Return",
												"src": "4212:8:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3380:504:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3898:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3910:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3902:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3921:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3913:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3938:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3924:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 726,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3924:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:50:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3975:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:3"
									},
									"scope": 790,
									"src": "3889:338:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "4738:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 760,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4762:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4765:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 758,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															765,
															789
														],
														"referencedDeclaration": 789,
														"src": "4755:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "4748:44:3"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4233:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4680:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4692:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4684:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4703:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4695:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:22:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4729:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4728:9:3"
									},
									"scope": 790,
									"src": "4671:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "5398:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "5416:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5416:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 781,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "5424:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5408:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "5408:29:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "5454:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 785,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "5458:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5454:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 776,
												"id": 787,
												"nodeType": "Return",
												"src": "5447:12:3"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "4805:493:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5312:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5324:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5316:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5335:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5327:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5352:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5338:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5338:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:50:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5389:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:9:3"
									},
									"scope": 790,
									"src": "5303:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 791,
							"src": "760:4708:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5436:3"
				},
				"id": 3
			}
		}
	}
}