{
	"id": "1fa9a2c05e2c2718e63c128458130b35",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PriceFeed.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"./Dependencies/Ownable.sol\";\nimport \"./Interfaces/IPriceFeed.sol\";\nimport \"./DIAOracleV2.sol\";\nimport {IPriceOracleGetter} from './Interfaces/IPriceOracleGetter.sol';\n\n/// @title PriceFeed\n/// @author Meridian Finance\n/// @notice Proxy smart contract to get the price of an asset from a price source, with DIA oracle\n///         smart contracts as primary option\n/// - If the returned price by DIA is <= 0, or price is older than maxPriceAgeLimit the call is forwarded to a fallbackOracle\n/// - Owned by the OmniDex governance system, allowed to add keys for assets, replace them,\n///   change master oracle and change the fallbackOracle\ncontract PriceFeed is Ownable {\n  // using SafeERC20 for IERC20;\n\n  event BaseCurrencySet(address indexed baseCurrency, uint256 baseCurrencyUnit);\n  event AssetKeyUpdated(address indexed asset, string indexed key);\n  event FallbackOracleUpdated(address indexed fallbackOracle);\n  event DIAOracleUpdated(address indexed diaOracleAddress);\n  event EthAddressUpdated(address asset);\n\n  mapping(address => string) private assetsKeys;\n  address wEthAddress;\n  IPriceOracleGetter private _fallbackOracle;\n  address public immutable BASE_CURRENCY;\n \n  uint256 public immutable BASE_CURRENCY_UNIT;\n  uint256 public immutable CONVERSION_FACTOR = 10000000000;\n\n  uint256 maxPriceAgeLimit;  \n  DIAOracleV2 DIA;\n\n\n  /// @notice Constructor\n  /// @param DIAOracleAddress The address of the master oracle to use\n  /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n  /// aggregator is not consistent\n  /// @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n  /// @param baseCurrencyUnit the unit of the base currency\n  /// @param priceAgeLimit the max permitted age of oracle price before call is forwarded to fallback oracle\n \n  constructor(\n    address DIAOracleAddress,\n    address fallbackOracle,\n    address baseCurrency,\n    uint256 baseCurrencyUnit,\n    uint256 priceAgeLimit\n  )  {\n    _setDIAOracle(DIAOracleAddress);\n    _setFallbackOracle(fallbackOracle);\n    maxPriceAgeLimit = priceAgeLimit;\n    BASE_CURRENCY = baseCurrency;\n    BASE_CURRENCY_UNIT = baseCurrencyUnit;\n    emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\n  }\n\n// --- configuration functions ---\n\n  /// @notice External function called to set or replace DIA keys for assets. \n  /// @param asset The address of the asset to be set\n  /// @param key The DIA keys/symbol of the source of each asset\n  function setAssetKey(address asset, string calldata key) external onlyOwner {\n    require((asset != address(0) && bytes(key).length != 0), 'Invalid parameters');\n      assetsKeys[asset] = key;\n      emit AssetKeyUpdated(asset, key);\n  }\n\n    function setwEthAddress(address asset) external onlyOwner {\n    require((asset != address(0)), 'Invalid parameters');\n      wEthAddress = asset;\n      emit EthAddressUpdated(asset);\n  }\n\n  /// @notice Sets the MasterOracle\n  /// @param diaOracleAddress The address of the MasterOracle\n  function setDIAOracle(address diaOracleAddress) external onlyOwner {\n    _setDIAOracle(diaOracleAddress);\n  }\n\n  /// @notice Sets the fallbackOracle\n  /// @param fallbackOracle The address of the fallbackOracle\n  function setFallbackOracle(address fallbackOracle) external onlyOwner {\n    _setFallbackOracle(fallbackOracle);\n  }\n\n  /// @notice Sets the max age that an oracle price can be before fallback oracle is called\n  /// @param AgeLimit max age in seconds of latest price\n  function setMaxPriceAgeLimit(uint256 AgeLimit) external onlyOwner {\n    maxPriceAgeLimit = AgeLimit;\n  }\n\n// --- Internal Functions --- \n\n  /// @notice Internal function to set the MasterOracle\n  /// @param diaOracleAddress The address of the MasterOracle\n  function _setDIAOracle(address diaOracleAddress) internal {    \n    DIA = DIAOracleV2(diaOracleAddress);\n    emit DIAOracleUpdated(diaOracleAddress);\n  }\n\n  /// @notice Internal function to set the fallbackOracle\n  /// @param fallbackOracle The address of the fallbackOracle\n  function _setFallbackOracle(address fallbackOracle) internal {\n    _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n    emit FallbackOracleUpdated(fallbackOracle);\n  }\n\n\n// --- Getter Functions ---\n\n  function fetchPrice() external view returns (uint256) {\n    address asset = wEthAddress;\n    string memory key = assetsKeys[asset];\n\n    if (asset == BASE_CURRENCY) {\n      return BASE_CURRENCY_UNIT;\n    } else if (bytes(key).length == 0) {    \n      return _fallbackOracle.getAssetPrice(asset);\n    } else {\n      (uint128 price, uint128 timeStamp) = DIA.getValue(key);      \n      if (price > 0 && (block.timestamp - timeStamp) < maxPriceAgeLimit) {\n        return uint256(price) * CONVERSION_FACTOR;\n      } else {\n        return _fallbackOracle.getAssetPrice(asset);\n      }\n    }\n  }\n\n  // Gets the DIA key for an asset address.\n  // asset The address of the asset\n  /// @return The DIA key string\n  function getSourceOfAsset(address asset) external view returns (string memory) {\n    return string(assetsKeys[asset]);\n  }\n\n  /// @notice Gets the address of the master oracle\n  /// @return address The addres of the DIA oracle\n  function getMasterOracle() external view returns (address) {\n    return address(DIA);\n  }\n\n  /// @notice Gets the address of the fallback oracle\n  /// @return address The addres of the fallback oracle\n  function getFallbackOracle() external view returns (address) {\n    return address(_fallbackOracle);\n  }\n\n  /// @notice Gets the maximum age that the oracle price can be before the call is routed to fallback\n  /// @return the max age in seconds\n  function getMaxPriceAgeLimit() external view returns (uint256) {\n    return maxPriceAgeLimit;\n  }\n}"
			},
			"contracts/Interfaces/IPriceOracleGetter.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\n\npragma solidity 0.8.20;\n\n/**\n * @title IPriceOracleGetter interface\n * @notice Interface for the Meridian price oracle.\n **/\n\ninterface IPriceOracleGetter {\n  /**\n   * @dev returns the asset price USD\n   * @param asset the address of the asset\n   * @return the price of the asset\n   **/\n  function getAssetPrice(address asset) external view returns (uint256);\n}"
			},
			"contracts/DIAOracleV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\ncontract DIAOracleV2 {\n    mapping (string => uint256) public values;\n    address oracleUpdater;\n    \n    event OracleUpdate(string key, uint128 value, uint128 timestamp);\n    event UpdaterAddressChange(address newUpdater);\n    \n    constructor()  {\n        oracleUpdater = msg.sender;\n    }\n    \n    function setValue(string memory key, uint128 value, uint128 timestamp) public {\n        require(msg.sender == oracleUpdater);\n        uint256 cValue = (((uint256)(value)) << 128) + timestamp;\n        values[key] = cValue;\n        emit OracleUpdate(key, value, timestamp);\n    }\n    \n    function getValue(string memory key) external view returns (uint128, uint128) {\n        uint256 cValue = values[key];\n        uint128 timestamp = (uint128)(cValue % 2**128);\n        uint128 value = (uint128)(cValue >> 128);\n        return (value, timestamp);\n    }\n    \n    function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {\n        require(msg.sender == oracleUpdater);\n        oracleUpdater = newOracleUpdaterAddress;\n        emit UpdaterAddressChange(newOracleUpdaterAddress);\n    }\n}"
			},
			"contracts/Interfaces/IPriceFeed.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\ninterface IPriceFeed {\n\n    // --- Events ---\n    event LastGoodPriceUpdated(uint _lastGoodPrice);\n   \n    // --- Function ---\n    function fetchPrice() external returns (uint);\n}\n"
			},
			"contracts/Dependencies/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on OpenZeppelin's Ownable contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n *\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), msg.sender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     *\n     * NOTE: This function is not safe, as it doesn’t check owner is calling it.\n     * Make sure you check it before calling it.\n     */\n    function _renounceOwnership() internal {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/DIAOracleV2.sol": {
				"DIAOracleV2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "value",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "timestamp",
									"type": "uint128"
								}
							],
							"name": "OracleUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newUpdater",
									"type": "address"
								}
							],
							"name": "UpdaterAddressChange",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "getValue",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"internalType": "uint128",
									"name": "value",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "timestamp",
									"type": "uint128"
								}
							],
							"name": "setValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOracleUpdaterAddress",
									"type": "address"
								}
							],
							"name": "updateOracleUpdaterAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "values",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DIAOracleV2.sol\":58:1160  contract DIAOracleV2 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DIAOracleV2.sol\":291:349  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DIAOracleV2.sol\":316:329  oracleUpdater */\n  0x01\n    /* \"contracts/DIAOracleV2.sol\":316:342  oracleUpdater = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/DIAOracleV2.sol\":332:342  msg.sender */\n  caller\n    /* \"contracts/DIAOracleV2.sol\":316:342  oracleUpdater = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/DIAOracleV2.sol\":58:1160  contract DIAOracleV2 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DIAOracleV2.sol\":58:1160  contract DIAOracleV2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5a9ade8b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6aa45efc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7898e0c2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x960384a0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DIAOracleV2.sol\":85:126  mapping (string => uint256) public values */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x00\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      dup2\n      jump\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":1343:1368   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1331:1333   */\n      0x20\n        /* \"#utility.yul\":1316:1334   */\n      add\n        /* \"contracts/DIAOracleV2.sol\":85:126  mapping (string => uint256) public values */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DIAOracleV2.sol\":920:1158  function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {... */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/DIAOracleV2.sol\":359:636  function setValue(string memory key, uint128 value, uint128 timestamp) public {... */\n    tag_5:\n      tag_13\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/DIAOracleV2.sol\":646:910  function getValue(string memory key) external view returns (uint128, uint128) {... */\n    tag_6:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2583:2598   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2565:2599   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2635:2650   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2630:2632   */\n      0x20\n        /* \"#utility.yul\":2615:2633   */\n      dup4\n      add\n        /* \"#utility.yul\":2608:2651   */\n      mstore\n        /* \"#utility.yul\":2485:2503   */\n      add\n        /* \"contracts/DIAOracleV2.sol\":646:910  function getValue(string memory key) external view returns (uint128, uint128) {... */\n      tag_11\n        /* \"#utility.yul\":2338:2657   */\n      jump\n        /* \"contracts/DIAOracleV2.sol\":920:1158  function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {... */\n    tag_16:\n        /* \"contracts/DIAOracleV2.sol\":1028:1041  oracleUpdater */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/DIAOracleV2.sol\":1014:1024  msg.sender */\n      caller\n        /* \"contracts/DIAOracleV2.sol\":1014:1041  msg.sender == oracleUpdater */\n      eq\n        /* \"contracts/DIAOracleV2.sol\":1006:1042  require(msg.sender == oracleUpdater) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"contracts/DIAOracleV2.sol\":1052:1065  oracleUpdater */\n      0x01\n        /* \"contracts/DIAOracleV2.sol\":1052:1091  oracleUpdater = newOracleUpdaterAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DIAOracleV2.sol\":1106:1151  UpdaterAddressChange(newOracleUpdaterAddress) */\n      mload(0x40)\n        /* \"#utility.yul\":2808:2859   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DIAOracleV2.sol\":1106:1151  UpdaterAddressChange(newOracleUpdaterAddress) */\n      0x121e958a4cadf7f8dadefa22cc019700365240223668418faebed197da07089f\n      swap1\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2781:2799   */\n      add\n        /* \"contracts/DIAOracleV2.sol\":1106:1151  UpdaterAddressChange(newOracleUpdaterAddress) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DIAOracleV2.sol\":920:1158  function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/DIAOracleV2.sol\":359:636  function setValue(string memory key, uint128 value, uint128 timestamp) public {... */\n    tag_20:\n        /* \"contracts/DIAOracleV2.sol\":469:482  oracleUpdater */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/DIAOracleV2.sol\":455:465  msg.sender */\n      caller\n        /* \"contracts/DIAOracleV2.sol\":455:482  msg.sender == oracleUpdater */\n      eq\n        /* \"contracts/DIAOracleV2.sol\":447:483  require(msg.sender == oracleUpdater) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/DIAOracleV2.sol\":493:507  uint256 cValue */\n      0x00\n        /* \"contracts/DIAOracleV2.sol\":510:549  (((uint256)(value)) << 128) + timestamp */\n      tag_32\n      sub(shl(0x80, 0x01), 0x01)\n      dup4\n      and\n      not(0xffffffffffffffffffffffffffffffff)\n        /* \"contracts/DIAOracleV2.sol\":533:536  128 */\n      0x80\n        /* \"contracts/DIAOracleV2.sol\":511:536  ((uint256)(value)) << 128 */\n      dup7\n      swap1\n      shl\n      and\n        /* \"contracts/DIAOracleV2.sol\":510:549  (((uint256)(value)) << 128) + timestamp */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"contracts/DIAOracleV2.sol\":493:549  uint256 cValue = (((uint256)(value)) << 128) + timestamp */\n      swap1\n      pop\n        /* \"contracts/DIAOracleV2.sol\":573:579  cValue */\n      dup1\n        /* \"contracts/DIAOracleV2.sol\":559:565  values */\n      0x00\n        /* \"contracts/DIAOracleV2.sol\":566:569  key */\n      dup6\n        /* \"contracts/DIAOracleV2.sol\":559:570  values[key] */\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/DIAOracleV2.sol\":559:579  values[key] = cValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DIAOracleV2.sol\":594:629  OracleUpdate(key, value, timestamp) */\n      0xa7fc99ed7617309ee23f63ae90196a1e490d362e6f6a547a59bc809ee2291782\n        /* \"contracts/DIAOracleV2.sol\":607:610  key */\n      dup5\n        /* \"contracts/DIAOracleV2.sol\":612:617  value */\n      dup5\n        /* \"contracts/DIAOracleV2.sol\":619:628  timestamp */\n      dup5\n        /* \"contracts/DIAOracleV2.sol\":594:629  OracleUpdate(key, value, timestamp) */\n      mload(0x40)\n      tag_36\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DIAOracleV2.sol\":437:636  {... */\n      pop\n        /* \"contracts/DIAOracleV2.sol\":359:636  function setValue(string memory key, uint128 value, uint128 timestamp) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DIAOracleV2.sol\":646:910  function getValue(string memory key) external view returns (uint128, uint128) {... */\n    tag_23:\n        /* \"contracts/DIAOracleV2.sol\":706:713  uint128 */\n      0x00\n        /* \"contracts/DIAOracleV2.sol\":715:722  uint128 */\n      dup1\n        /* \"contracts/DIAOracleV2.sol\":734:748  uint256 cValue */\n      0x00\n        /* \"contracts/DIAOracleV2.sol\":751:757  values */\n      dup1\n        /* \"contracts/DIAOracleV2.sol\":758:761  key */\n      dup5\n        /* \"contracts/DIAOracleV2.sol\":751:762  values[key] */\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_39:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"contracts/DIAOracleV2.sol\":772:789  uint128 timestamp */\n      0x00\n        /* \"contracts/DIAOracleV2.sol\":802:817  cValue % 2**128 */\n      tag_40\n      shl(0x80, 0x01)\n        /* \"contracts/DIAOracleV2.sol\":751:762  values[key] */\n      dup4\n        /* \"contracts/DIAOracleV2.sol\":802:817  cValue % 2**128 */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"contracts/DIAOracleV2.sol\":864:867  128 */\n      0x80\n        /* \"contracts/DIAOracleV2.sol\":854:867  cValue >> 128 */\n      swap3\n      swap1\n      swap3\n      shr\n      swap6\n        /* \"contracts/DIAOracleV2.sol\":772:818  uint128 timestamp = (uint128)(cValue % 2**128) */\n      swap2\n      swap5\n      pop\n        /* \"contracts/DIAOracleV2.sol\":646:910  function getValue(string memory key) external view returns (uint128, uint128) {... */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_42:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:865   */\n    tag_43:\n        /* \"#utility.yul\":189:194   */\n      0x00\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:239   */\n      0x1f\n        /* \"#utility.yul\":227:233   */\n      dup4\n        /* \"#utility.yul\":223:240   */\n      add\n        /* \"#utility.yul\":219:246   */\n      slt\n        /* \"#utility.yul\":209:264   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":260:261   */\n      0x00\n        /* \"#utility.yul\":257:258   */\n      dup1\n        /* \"#utility.yul\":250:262   */\n      revert\n        /* \"#utility.yul\":209:264   */\n    tag_49:\n        /* \"#utility.yul\":296:302   */\n      dup2\n        /* \"#utility.yul\":283:303   */\n      calldataload\n        /* \"#utility.yul\":322:340   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":359:361   */\n      dup1\n        /* \"#utility.yul\":355:357   */\n      dup3\n        /* \"#utility.yul\":352:362   */\n      gt\n        /* \"#utility.yul\":349:385   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":365:383   */\n      tag_51\n      tag_42\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":440:442   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      mload\n        /* \"#utility.yul\":408:410   */\n      0x1f\n        /* \"#utility.yul\":494:507   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":490:512   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":514:516   */\n      0x3f\n        /* \"#utility.yul\":486:517   */\n      add\n        /* \"#utility.yul\":482:522   */\n      and\n        /* \"#utility.yul\":470:523   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":538:556   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":558:580   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":535:581   */\n      or\n        /* \"#utility.yul\":532:604   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":584:602   */\n      tag_53\n      tag_42\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":624:634   */\n      dup2\n        /* \"#utility.yul\":620:622   */\n      0x40\n        /* \"#utility.yul\":613:635   */\n      mstore\n        /* \"#utility.yul\":659:661   */\n      dup4\n        /* \"#utility.yul\":651:657   */\n      dup2\n        /* \"#utility.yul\":644:662   */\n      mstore\n        /* \"#utility.yul\":705:708   */\n      dup7\n        /* \"#utility.yul\":698:702   */\n      0x20\n        /* \"#utility.yul\":693:695   */\n      dup6\n        /* \"#utility.yul\":685:691   */\n      dup9\n        /* \"#utility.yul\":681:696   */\n      add\n        /* \"#utility.yul\":677:703   */\n      add\n        /* \"#utility.yul\":674:709   */\n      gt\n        /* \"#utility.yul\":671:726   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":722:723   */\n      0x00\n        /* \"#utility.yul\":719:720   */\n      dup1\n        /* \"#utility.yul\":712:724   */\n      revert\n        /* \"#utility.yul\":671:726   */\n    tag_54:\n        /* \"#utility.yul\":786:788   */\n      dup4\n        /* \"#utility.yul\":779:783   */\n      0x20\n        /* \"#utility.yul\":771:777   */\n      dup8\n        /* \"#utility.yul\":767:784   */\n      add\n        /* \"#utility.yul\":760:764   */\n      0x20\n        /* \"#utility.yul\":752:758   */\n      dup4\n        /* \"#utility.yul\":748:765   */\n      add\n        /* \"#utility.yul\":735:789   */\n      calldatacopy\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":826:830   */\n      0x20\n        /* \"#utility.yul\":821:823   */\n      dup6\n        /* \"#utility.yul\":813:819   */\n      dup4\n        /* \"#utility.yul\":809:824   */\n      add\n        /* \"#utility.yul\":805:831   */\n      add\n        /* \"#utility.yul\":798:835   */\n      mstore\n        /* \"#utility.yul\":853:859   */\n      dup1\n        /* \"#utility.yul\":844:859   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":146:865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":870:1192   */\n    tag_9:\n        /* \"#utility.yul\":939:945   */\n      0x00\n        /* \"#utility.yul\":992:994   */\n      0x20\n        /* \"#utility.yul\":980:989   */\n      dup3\n        /* \"#utility.yul\":971:978   */\n      dup5\n        /* \"#utility.yul\":967:990   */\n      sub\n        /* \"#utility.yul\":963:995   */\n      slt\n        /* \"#utility.yul\":960:1012   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1008:1009   */\n      0x00\n        /* \"#utility.yul\":1005:1006   */\n      dup1\n        /* \"#utility.yul\":998:1010   */\n      revert\n        /* \"#utility.yul\":960:1012   */\n    tag_56:\n        /* \"#utility.yul\":1048:1057   */\n      dup2\n        /* \"#utility.yul\":1035:1058   */\n      calldataload\n        /* \"#utility.yul\":1081:1099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1073:1079   */\n      dup2\n        /* \"#utility.yul\":1070:1100   */\n      gt\n        /* \"#utility.yul\":1067:1117   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1113:1114   */\n      0x00\n        /* \"#utility.yul\":1110:1111   */\n      dup1\n        /* \"#utility.yul\":1103:1115   */\n      revert\n        /* \"#utility.yul\":1067:1117   */\n    tag_57:\n        /* \"#utility.yul\":1136:1186   */\n      tag_58\n        /* \"#utility.yul\":1178:1185   */\n      dup5\n        /* \"#utility.yul\":1169:1175   */\n      dup3\n        /* \"#utility.yul\":1158:1167   */\n      dup6\n        /* \"#utility.yul\":1154:1176   */\n      add\n        /* \"#utility.yul\":1136:1186   */\n      tag_43\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1126:1186   */\n      swap5\n        /* \"#utility.yul\":870:1192   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1379:1665   */\n    tag_15:\n        /* \"#utility.yul\":1438:1444   */\n      0x00\n        /* \"#utility.yul\":1491:1493   */\n      0x20\n        /* \"#utility.yul\":1479:1488   */\n      dup3\n        /* \"#utility.yul\":1470:1477   */\n      dup5\n        /* \"#utility.yul\":1466:1489   */\n      sub\n        /* \"#utility.yul\":1462:1494   */\n      slt\n        /* \"#utility.yul\":1459:1511   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1507:1508   */\n      0x00\n        /* \"#utility.yul\":1504:1505   */\n      dup1\n        /* \"#utility.yul\":1497:1509   */\n      revert\n        /* \"#utility.yul\":1459:1511   */\n    tag_61:\n        /* \"#utility.yul\":1533:1556   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1585:1616   */\n      dup2\n      and\n        /* \"#utility.yul\":1575:1617   */\n      dup2\n      eq\n        /* \"#utility.yul\":1565:1635   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1631:1632   */\n      0x00\n        /* \"#utility.yul\":1628:1629   */\n      dup1\n        /* \"#utility.yul\":1621:1633   */\n      revert\n        /* \"#utility.yul\":1565:1635   */\n    tag_62:\n        /* \"#utility.yul\":1654:1659   */\n      swap4\n        /* \"#utility.yul\":1379:1665   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1670:1858   */\n    tag_44:\n        /* \"#utility.yul\":1738:1758   */\n      dup1\n      calldataload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1787:1833   */\n      dup2\n      and\n        /* \"#utility.yul\":1777:1834   */\n      dup2\n      eq\n        /* \"#utility.yul\":1767:1852   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1848:1849   */\n      0x00\n        /* \"#utility.yul\":1845:1846   */\n      dup1\n        /* \"#utility.yul\":1838:1850   */\n      revert\n        /* \"#utility.yul\":1767:1852   */\n    tag_64:\n        /* \"#utility.yul\":1670:1858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:2333   */\n    tag_19:\n        /* \"#utility.yul\":1950:1956   */\n      0x00\n        /* \"#utility.yul\":1958:1964   */\n      dup1\n        /* \"#utility.yul\":1966:1972   */\n      0x00\n        /* \"#utility.yul\":2019:2021   */\n      0x60\n        /* \"#utility.yul\":2007:2016   */\n      dup5\n        /* \"#utility.yul\":1998:2005   */\n      dup7\n        /* \"#utility.yul\":1994:2017   */\n      sub\n        /* \"#utility.yul\":1990:2022   */\n      slt\n        /* \"#utility.yul\":1987:2039   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2035:2036   */\n      0x00\n        /* \"#utility.yul\":2032:2033   */\n      dup1\n        /* \"#utility.yul\":2025:2037   */\n      revert\n        /* \"#utility.yul\":1987:2039   */\n    tag_66:\n        /* \"#utility.yul\":2075:2084   */\n      dup4\n        /* \"#utility.yul\":2062:2085   */\n      calldataload\n        /* \"#utility.yul\":2108:2126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2100:2106   */\n      dup2\n        /* \"#utility.yul\":2097:2127   */\n      gt\n        /* \"#utility.yul\":2094:2144   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2140:2141   */\n      0x00\n        /* \"#utility.yul\":2137:2138   */\n      dup1\n        /* \"#utility.yul\":2130:2142   */\n      revert\n        /* \"#utility.yul\":2094:2144   */\n    tag_67:\n        /* \"#utility.yul\":2163:2213   */\n      tag_68\n        /* \"#utility.yul\":2205:2212   */\n      dup7\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup8\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2163:2213   */\n      tag_43\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2153:2213   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":2232:2270   */\n      tag_69\n        /* \"#utility.yul\":2266:2268   */\n      0x20\n        /* \"#utility.yul\":2255:2264   */\n      dup6\n        /* \"#utility.yul\":2251:2269   */\n      add\n        /* \"#utility.yul\":2232:2270   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2222:2270   */\n      swap2\n      pop\n        /* \"#utility.yul\":2289:2327   */\n      tag_70\n        /* \"#utility.yul\":2323:2325   */\n      0x40\n        /* \"#utility.yul\":2312:2321   */\n      dup6\n        /* \"#utility.yul\":2308:2326   */\n      add\n        /* \"#utility.yul\":2289:2327   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2279:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":1863:2333   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2870:3092   */\n    tag_33:\n        /* \"#utility.yul\":2935:2944   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2956:2966   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2953:3086   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3008:3018   */\n      0x4e487b71\n        /* \"#utility.yul\":3003:3006   */\n      0xe0\n        /* \"#utility.yul\":2999:3019   */\n      shl\n        /* \"#utility.yul\":2996:2997   */\n      0x00\n        /* \"#utility.yul\":2989:3020   */\n      mstore\n        /* \"#utility.yul\":3043:3047   */\n      0x11\n        /* \"#utility.yul\":3040:3041   */\n      0x04\n        /* \"#utility.yul\":3033:3048   */\n      mstore\n        /* \"#utility.yul\":3071:3075   */\n      0x24\n        /* \"#utility.yul\":3068:3069   */\n      0x00\n        /* \"#utility.yul\":3061:3076   */\n      revert\n        /* \"#utility.yul\":2953:3086   */\n    tag_74:\n        /* \"#utility.yul\":2870:3092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3097:3347   */\n    tag_45:\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3192:3305   */\n    tag_76:\n        /* \"#utility.yul\":3206:3212   */\n      dup4\n        /* \"#utility.yul\":3203:3204   */\n      dup2\n        /* \"#utility.yul\":3200:3213   */\n      lt\n        /* \"#utility.yul\":3192:3305   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3282:3293   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3276:3294   */\n      mload\n        /* \"#utility.yul\":3263:3274   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3256:3295   */\n      mstore\n        /* \"#utility.yul\":3228:3230   */\n      0x20\n        /* \"#utility.yul\":3221:3231   */\n      add\n        /* \"#utility.yul\":3192:3305   */\n      jump(tag_76)\n    tag_78:\n      pop\n      pop\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3321:3337   */\n      swap2\n      add\n        /* \"#utility.yul\":3314:3341   */\n      mstore\n        /* \"#utility.yul\":3097:3347   */\n      jump\t// out\n        /* \"#utility.yul\":3352:3641   */\n    tag_35:\n        /* \"#utility.yul\":3483:3486   */\n      0x00\n        /* \"#utility.yul\":3521:3527   */\n      dup3\n        /* \"#utility.yul\":3515:3528   */\n      mload\n        /* \"#utility.yul\":3537:3603   */\n      tag_80\n        /* \"#utility.yul\":3596:3602   */\n      dup2\n        /* \"#utility.yul\":3591:3594   */\n      dup5\n        /* \"#utility.yul\":3584:3588   */\n      0x20\n        /* \"#utility.yul\":3576:3582   */\n      dup8\n        /* \"#utility.yul\":3572:3589   */\n      add\n        /* \"#utility.yul\":3537:3603   */\n      tag_45\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3619:3635   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3352:3641   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3646:4261   */\n    tag_37:\n        /* \"#utility.yul\":3851:3853   */\n      0x60\n        /* \"#utility.yul\":3840:3849   */\n      dup2\n        /* \"#utility.yul\":3833:3854   */\n      mstore\n        /* \"#utility.yul\":3814:3818   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup5\n        /* \"#utility.yul\":3877:3890   */\n      mload\n        /* \"#utility.yul\":3926:3932   */\n      dup1\n        /* \"#utility.yul\":3921:3923   */\n      0x60\n        /* \"#utility.yul\":3910:3919   */\n      dup5\n        /* \"#utility.yul\":3906:3924   */\n      add\n        /* \"#utility.yul\":3899:3933   */\n      mstore\n        /* \"#utility.yul\":3942:4024   */\n      tag_82\n        /* \"#utility.yul\":4017:4023   */\n      dup2\n        /* \"#utility.yul\":4011:4014   */\n      0x80\n        /* \"#utility.yul\":4000:4009   */\n      dup6\n        /* \"#utility.yul\":3996:4015   */\n      add\n        /* \"#utility.yul\":3989:3993   */\n      0x20\n        /* \"#utility.yul\":3981:3987   */\n      dup10\n        /* \"#utility.yul\":3977:3994   */\n      add\n        /* \"#utility.yul\":3942:4024   */\n      tag_45\n      jump\t// in\n    tag_82:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4187:4202   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":4180:4184   */\n      0x20\n        /* \"#utility.yul\":4165:4185   */\n      dup5\n      add\n        /* \"#utility.yul\":4158:4203   */\n      mstore\n        /* \"#utility.yul\":4239:4254   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4234:4236   */\n      0x40\n        /* \"#utility.yul\":4219:4237   */\n      dup3\n      add\n        /* \"#utility.yul\":4212:4255   */\n      mstore\n        /* \"#utility.yul\":4092:4095   */\n      0x80\n        /* \"#utility.yul\":4085:4087   */\n      0x1f\n        /* \"#utility.yul\":4064:4079   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4060:4089   */\n      and\n        /* \"#utility.yul\":4045:4090   */\n      add\n        /* \"#utility.yul\":4041:4096   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3646:4261   */\n      jump\t// out\n        /* \"#utility.yul\":4266:4475   */\n    tag_41:\n        /* \"#utility.yul\":4298:4299   */\n      0x00\n        /* \"#utility.yul\":4324:4325   */\n      dup3\n        /* \"#utility.yul\":4314:4446   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":4368:4378   */\n      0x4e487b71\n        /* \"#utility.yul\":4363:4366   */\n      0xe0\n        /* \"#utility.yul\":4359:4379   */\n      shl\n        /* \"#utility.yul\":4356:4357   */\n      0x00\n        /* \"#utility.yul\":4349:4380   */\n      mstore\n        /* \"#utility.yul\":4403:4407   */\n      0x12\n        /* \"#utility.yul\":4400:4401   */\n      0x04\n        /* \"#utility.yul\":4393:4408   */\n      mstore\n        /* \"#utility.yul\":4431:4435   */\n      0x24\n        /* \"#utility.yul\":4428:4429   */\n      0x00\n        /* \"#utility.yul\":4421:4436   */\n      revert\n        /* \"#utility.yul\":4314:4446   */\n    tag_84:\n      pop\n        /* \"#utility.yul\":4460:4469   */\n      mod\n      swap1\n        /* \"#utility.yul\":4266:4475   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034282abde3d34a241cdcb14266d3313cf5dfa66a00122dc3db4c351f58fd608064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600180546001600160a01b031916331790556104d9806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635a9ade8b146100515780636aa45efc1461008f5780637898e0c2146100a4578063960384a0146100b7575b600080fd5b61007c61005f3660046102e8565b805160208183018101805160008252928201919093012091525481565b6040519081526020015b60405180910390f35b6100a261009d366004610325565b6100ea565b005b6100a26100b2366004610371565b610155565b6100ca6100c53660046102e8565b6101fe565b604080516001600160801b03938416815292909116602083015201610086565b6001546001600160a01b0316331461010157600080fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f121e958a4cadf7f8dadefa22cc019700365240223668418faebed197da07089f9060200160405180910390a150565b6001546001600160a01b0316331461016c57600080fd5b60006101986001600160801b0383166fffffffffffffffffffffffffffffffff19608086901b166103cf565b9050806000856040516101ab919061041a565b9081526020016040518091039020819055507fa7fc99ed7617309ee23f63ae90196a1e490d362e6f6a547a59bc809ee22917828484846040516101f093929190610436565b60405180910390a150505050565b60008060008084604051610212919061041a565b9081526040519081900360200190205490506000610234600160801b83610481565b60809290921c959194509092505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261026c57600080fd5b813567ffffffffffffffff8082111561028757610287610245565b604051601f8301601f19908116603f011681019082821181831017156102af576102af610245565b816040528381528660208588010111156102c857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156102fa57600080fd5b813567ffffffffffffffff81111561031157600080fd5b61031d8482850161025b565b949350505050565b60006020828403121561033757600080fd5b81356001600160a01b038116811461034e57600080fd5b9392505050565b80356001600160801b038116811461036c57600080fd5b919050565b60008060006060848603121561038657600080fd5b833567ffffffffffffffff81111561039d57600080fd5b6103a98682870161025b565b9350506103b860208501610355565b91506103c660408501610355565b90509250925092565b808201808211156103f057634e487b7160e01b600052601160045260246000fd5b92915050565b60005b838110156104115781810151838201526020016103f9565b50506000910152565b6000825161042c8184602087016103f6565b9190910192915050565b60608152600084518060608401526104558160808501602089016103f6565b6001600160801b0394851660208401529290931660408201526080601f909201601f1916010192915050565b60008261049e57634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122034282abde3d34a241cdcb14266d3313cf5dfa66a00122dc3db4c351f58fd608064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x4D9 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A9ADE8B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6AA45EFC EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x7898E0C2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x960384A0 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA2 PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH2 0xCA PUSH2 0xC5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x121E958A4CADF7F8DADEFA22CC019700365240223668418FAEBED197DA07089F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x198 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x80 DUP7 SWAP1 SHL AND PUSH2 0x3CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xA7FC99ED7617309EE23F63AE90196A1E490D362E6F6A547A59BC809EE2291782 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x234 PUSH1 0x1 PUSH1 0x80 SHL DUP4 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP1 SWAP3 SHR SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x287 JUMPI PUSH2 0x287 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AF PUSH2 0x245 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A9 DUP7 DUP3 DUP8 ADD PUSH2 0x25B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3B8 PUSH1 0x20 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6 PUSH1 0x40 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x411 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x42C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x455 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x49E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x28 0x2A 0xBD 0xE3 0xD3 0x4A 0x24 SHR 0xDC 0xB1 TIMESTAMP PUSH7 0xD3313CF5DFA66A STOP SLT 0x2D 0xC3 0xDB 0x4C CALLDATALOAD 0x1F PC REVERT PUSH1 0x80 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:1102:0:-:0;;;291:58;;;;;;;;;-1:-1:-1;316:13:0;:26;;-1:-1:-1;;;;;;316:26:0;332:10;316:26;;;58:1102;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getValue_113": {
									"entryPoint": 510,
									"id": 113,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@setValue_71": {
									"entryPoint": 341,
									"id": 71,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateOracleUpdaterAddress_134": {
									"entryPoint": 234,
									"id": 134,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@values_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint128t_uint128": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint128": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint128_t_uint128__to_t_string_memory_ptr_t_uint128_t_uint128__fromStack_reversed": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4477:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "199:666:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "248:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "257:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "260:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "250:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "250:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "250:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "227:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "235:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "223:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "223:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "219:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "219:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "212:35:5"
															},
															"nodeType": "YulIf",
															"src": "209:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "273:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "296:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "283:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "283:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "277:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "312:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "322:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "316:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "363:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "365:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "365:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "365:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "355:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "352:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:10:5"
															},
															"nodeType": "YulIf",
															"src": "349:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "394:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "408:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "398:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "420:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "434:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "424:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "452:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "474:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "498:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "502:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "494:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "494:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "509:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "490:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "490:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "514:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "486:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "486:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "519:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "482:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "482:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "470:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "470:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "456:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "582:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "584:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "584:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "584:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "541:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "553:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "538:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "538:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "561:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "573:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "558:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "535:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:46:5"
															},
															"nodeType": "YulIf",
															"src": "532:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "620:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "624:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "613:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "659:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "644:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "644:18:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "710:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "719:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "712:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "712:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "712:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "693:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "681:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "681:15:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "698:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:26:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "674:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:35:5"
															},
															"nodeType": "YulIf",
															"src": "671:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "760:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "771:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "779:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "767:17:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "786:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "735:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "821:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "809:15:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "826:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:26:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "798:37:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "844:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "853:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "173:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "181:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "189:5:5",
														"type": ""
													}
												],
												"src": "146:719:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "950:242:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "996:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1005:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1008:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "998:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "998:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "998:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "971:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "992:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "963:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:32:5"
															},
															"nodeType": "YulIf",
															"src": "960:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1021:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1048:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1035:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1025:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1101:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1110:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1103:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1103:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1103:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1073:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1081:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1070:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:30:5"
															},
															"nodeType": "YulIf",
															"src": "1067:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1126:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1158:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1178:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1136:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1126:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "916:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "927:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "939:6:5",
														"type": ""
													}
												],
												"src": "870:322:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1308:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1320:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1316:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1308:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1343:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1267:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1278:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1289:4:5",
														"type": ""
													}
												],
												"src": "1197:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1495:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1507:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1497:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1497:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1497:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1470:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1466:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1466:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1491:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:32:5"
															},
															"nodeType": "YulIf",
															"src": "1459:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1520:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1546:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1533:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1524:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1619:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1628:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1631:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1621:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1621:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1621:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1578:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1589:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1604:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1609:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1600:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1600:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1613:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1596:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1596:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1585:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1585:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1575:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:50:5"
															},
															"nodeType": "YulIf",
															"src": "1565:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1644:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1654:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1644:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1415:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1426:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1438:6:5",
														"type": ""
													}
												],
												"src": "1379:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1729:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1836:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1845:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1848:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1838:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1838:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1780:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1791:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1798:34:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1787:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1787:46:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1777:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:57:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1770:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:65:5"
															},
															"nodeType": "YulIf",
															"src": "1767:85:5"
														}
													]
												},
												"name": "abi_decode_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1698:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1709:5:5",
														"type": ""
													}
												],
												"src": "1670:188:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:356:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2035:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2025:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2025:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2007:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:32:5"
															},
															"nodeType": "YulIf",
															"src": "1987:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2048:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2075:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2062:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2052:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2128:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2137:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2140:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2130:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2130:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2130:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2100:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2097:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:30:5"
															},
															"nodeType": "YulIf",
															"src": "2094:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2153:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2196:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2205:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2163:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2222:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2255:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "2232:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2323:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2308:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:38:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint128t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1927:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1938:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1950:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1958:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1966:6:5",
														"type": ""
													}
												],
												"src": "1863:470:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:190:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2477:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2489:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2477:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2512:44:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2522:34:5",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2516:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2572:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2587:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2595:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2630:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2647:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2608:43:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2428:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2439:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2458:4:5",
														"type": ""
													}
												],
												"src": "2338:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2773:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2830:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2846:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2851:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2842:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2842:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2855:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2826:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2732:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2743:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2754:4:5",
														"type": ""
													}
												],
												"src": "2662:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2918:174:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2928:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2939:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2942:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2935:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2975:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2996:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3003:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3008:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2999:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2999:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2989:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2989:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3040:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3043:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3033:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3033:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3033:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3068:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3071:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3061:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2959:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2962:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2956:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:10:5"
															},
															"nodeType": "YulIf",
															"src": "2953:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2901:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2904:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2910:3:5",
														"type": ""
													}
												],
												"src": "2870:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3163:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3173:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3182:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3177:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3242:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3267:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3272:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3263:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3286:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3291:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3282:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3282:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3276:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3276:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3256:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3256:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3256:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3206:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3200:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3214:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3216:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3225:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3228:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3221:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3221:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3216:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3196:3:5",
																"statements": []
															},
															"src": "3192:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3325:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3339:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3314:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3141:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3146:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3151:6:5",
														"type": ""
													}
												],
												"src": "3097:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3491:150:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3501:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3521:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3515:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3505:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3576:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3572:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3596:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3537:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3537:66:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3612:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3623:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3467:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3472:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3483:3:5",
														"type": ""
													}
												],
												"src": "3352:289:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3823:438:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3833:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3863:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3883:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3877:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3867:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3921:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3926:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3899:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3981:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3989:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4011:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3996:19:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4017:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3942:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:82:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3942:82:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4033:63:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4049:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4068:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4076:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4064:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4064:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4085:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4081:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4081:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4060:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4060:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4045:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:55:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4033:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4105:44:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4115:34:5",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4109:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4169:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4180:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4165:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4191:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4199:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4158:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4223:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4234:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4251:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:43:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint128_t_uint128__to_t_string_memory_ptr_t_uint128_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3776:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3787:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3795:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3803:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3814:4:5",
														"type": ""
													}
												],
												"src": "3646:615:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4304:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4335:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4356:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4363:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4368:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4359:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4359:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4349:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4349:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4400:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4403:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4393:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4393:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4393:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4428:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4431:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4421:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4421:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4421:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4324:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:9:5"
															},
															"nodeType": "YulIf",
															"src": "4314:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4455:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4464:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4467:1:5"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "4460:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4455:1:5"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4289:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4292:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4298:1:5",
														"type": ""
													}
												],
												"src": "4266:209:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint128t_uint128(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_uint128(add(headStart, 32))\n        value2 := abi_decode_uint128(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint128_t_uint128__to_t_string_memory_ptr_t_uint128_t_uint128__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let length := mload(value0)\n        mstore(add(headStart, 96), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(headStart, 128), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 0x20), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80635a9ade8b146100515780636aa45efc1461008f5780637898e0c2146100a4578063960384a0146100b7575b600080fd5b61007c61005f3660046102e8565b805160208183018101805160008252928201919093012091525481565b6040519081526020015b60405180910390f35b6100a261009d366004610325565b6100ea565b005b6100a26100b2366004610371565b610155565b6100ca6100c53660046102e8565b6101fe565b604080516001600160801b03938416815292909116602083015201610086565b6001546001600160a01b0316331461010157600080fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f121e958a4cadf7f8dadefa22cc019700365240223668418faebed197da07089f9060200160405180910390a150565b6001546001600160a01b0316331461016c57600080fd5b60006101986001600160801b0383166fffffffffffffffffffffffffffffffff19608086901b166103cf565b9050806000856040516101ab919061041a565b9081526020016040518091039020819055507fa7fc99ed7617309ee23f63ae90196a1e490d362e6f6a547a59bc809ee22917828484846040516101f093929190610436565b60405180910390a150505050565b60008060008084604051610212919061041a565b9081526040519081900360200190205490506000610234600160801b83610481565b60809290921c959194509092505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261026c57600080fd5b813567ffffffffffffffff8082111561028757610287610245565b604051601f8301601f19908116603f011681019082821181831017156102af576102af610245565b816040528381528660208588010111156102c857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156102fa57600080fd5b813567ffffffffffffffff81111561031157600080fd5b61031d8482850161025b565b949350505050565b60006020828403121561033757600080fd5b81356001600160a01b038116811461034e57600080fd5b9392505050565b80356001600160801b038116811461036c57600080fd5b919050565b60008060006060848603121561038657600080fd5b833567ffffffffffffffff81111561039d57600080fd5b6103a98682870161025b565b9350506103b860208501610355565b91506103c660408501610355565b90509250925092565b808201808211156103f057634e487b7160e01b600052601160045260246000fd5b92915050565b60005b838110156104115781810151838201526020016103f9565b50506000910152565b6000825161042c8184602087016103f6565b9190910192915050565b60608152600084518060608401526104558160808501602089016103f6565b6001600160801b0394851660208401529290931660408201526080601f909201601f1916010192915050565b60008261049e57634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122034282abde3d34a241cdcb14266d3313cf5dfa66a00122dc3db4c351f58fd608064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A9ADE8B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6AA45EFC EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x7898E0C2 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x960384A0 EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA2 PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH2 0xCA PUSH2 0xC5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x86 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x121E958A4CADF7F8DADEFA22CC019700365240223668418FAEBED197DA07089F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x198 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x80 DUP7 SWAP1 SHL AND PUSH2 0x3CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xA7FC99ED7617309EE23F63AE90196A1E490D362E6F6A547A59BC809EE2291782 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x234 PUSH1 0x1 PUSH1 0x80 SHL DUP4 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP1 SWAP3 SHR SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x287 JUMPI PUSH2 0x287 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AF PUSH2 0x245 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A9 DUP7 DUP3 DUP8 ADD PUSH2 0x25B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3B8 PUSH1 0x20 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6 PUSH1 0x40 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x411 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x42C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x455 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x49E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x28 0x2A 0xBD 0xE3 0xD3 0x4A 0x24 SHR 0xDC 0xB1 TIMESTAMP PUSH7 0xD3313CF5DFA66A STOP SLT 0x2D 0xC3 0xDB 0x4C CALLDATALOAD 0x1F PC REVERT PUSH1 0x80 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:1102:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:25:5;;;1331:2;1316:18;85:41:0;;;;;;;;920:238;;;;;;:::i;:::-;;:::i;:::-;;359:277;;;;;;:::i;:::-;;:::i;646:264::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2583:15:5;;;2565:34;;2635:15;;;;2630:2;2615:18;;2608:43;2485:18;646:264:0;2338:319:5;920:238:0;1028:13;;-1:-1:-1;;;;;1028:13:0;1014:10;:27;1006:36;;;;;;1052:13;:39;;-1:-1:-1;;;;;;1052:39:0;-1:-1:-1;;;;;1052:39:0;;;;;;;;1106:45;;2808:51:5;;;1106:45:0;;2796:2:5;2781:18;1106:45:0;;;;;;;920:238;:::o;359:277::-;469:13;;-1:-1:-1;;;;;469:13:0;455:10;:27;447:36;;;;;;493:14;510:39;-1:-1:-1;;;;;510:39:0;;-1:-1:-1;;533:3:0;511:25;;;;510:39;:::i;:::-;493:56;;573:6;559;566:3;559:11;;;;;;:::i;:::-;;;;;;;;;;;;;:20;;;;594:35;607:3;612:5;619:9;594:35;;;;;;;;:::i;:::-;;;;;;;;437:199;359:277;;;:::o;646:264::-;706:7;715;734:14;751:6;758:3;751:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;772:17:0;802:15;-1:-1:-1;;;751:11:0;802:15;:::i;:::-;864:3;854:13;;;;;772:46;;-1:-1:-1;646:264:0;;-1:-1:-1;;;646:264:0:o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:5;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:322::-;939:6;992:2;980:9;971:7;967:23;963:32;960:52;;;1008:1;1005;998:12;960:52;1048:9;1035:23;1081:18;1073:6;1070:30;1067:50;;;1113:1;1110;1103:12;1067:50;1136;1178:7;1169:6;1158:9;1154:22;1136:50;:::i;:::-;1126:60;870:322;-1:-1:-1;;;;870:322:5:o;1379:286::-;1438:6;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;1533:23;;-1:-1:-1;;;;;1585:31:5;;1575:42;;1565:70;;1631:1;1628;1621:12;1565:70;1654:5;1379:286;-1:-1:-1;;;1379:286:5:o;1670:188::-;1738:20;;-1:-1:-1;;;;;1787:46:5;;1777:57;;1767:85;;1848:1;1845;1838:12;1767:85;1670:188;;;:::o;1863:470::-;1950:6;1958;1966;2019:2;2007:9;1998:7;1994:23;1990:32;1987:52;;;2035:1;2032;2025:12;1987:52;2075:9;2062:23;2108:18;2100:6;2097:30;2094:50;;;2140:1;2137;2130:12;2094:50;2163;2205:7;2196:6;2185:9;2181:22;2163:50;:::i;:::-;2153:60;;;2232:38;2266:2;2255:9;2251:18;2232:38;:::i;:::-;2222:48;;2289:38;2323:2;2312:9;2308:18;2289:38;:::i;:::-;2279:48;;1863:470;;;;;:::o;2870:222::-;2935:9;;;2956:10;;;2953:133;;;3008:10;3003:3;2999:20;2996:1;2989:31;3043:4;3040:1;3033:15;3071:4;3068:1;3061:15;2953:133;2870:222;;;;:::o;3097:250::-;3182:1;3192:113;3206:6;3203:1;3200:13;3192:113;;;3282:11;;;3276:18;3263:11;;;3256:39;3228:2;3221:10;3192:113;;;-1:-1:-1;;3339:1:5;3321:16;;3314:27;3097:250::o;3352:289::-;3483:3;3521:6;3515:13;3537:66;3596:6;3591:3;3584:4;3576:6;3572:17;3537:66;:::i;:::-;3619:16;;;;;3352:289;-1:-1:-1;;3352:289:5:o;3646:615::-;3851:2;3840:9;3833:21;3814:4;3883:6;3877:13;3926:6;3921:2;3910:9;3906:18;3899:34;3942:82;4017:6;4011:3;4000:9;3996:19;3989:4;3981:6;3977:17;3942:82;:::i;:::-;-1:-1:-1;;;;;4187:15:5;;;4180:4;4165:20;;4158:45;4239:15;;;;4234:2;4219:18;;4212:43;4092:3;4085:2;4064:15;;;-1:-1:-1;;4060:29:5;4045:45;4041:55;;;-1:-1:-1;;3646:615:5:o;4266:209::-;4298:1;4324;4314:132;;4368:10;4363:3;4359:20;4356:1;4349:31;4403:4;4400:1;4393:15;4431:4;4428:1;4421:15;4314:132;-1:-1:-1;4460:9:5;;4266:209::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "248200",
								"executionCost": "24522",
								"totalCost": "272722"
							},
							"external": {
								"getValue(string)": "infinite",
								"setValue(string,uint128,uint128)": "infinite",
								"updateOracleUpdaterAddress(address)": "27729",
								"values(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 349,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 291,
									"end": 349,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 316,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 342,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 316,
									"end": 342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 332,
									"end": 342,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 316,
									"end": 342,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 316,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034282abde3d34a241cdcb14266d3313cf5dfa66a00122dc3db4c351f58fd608064736f6c63430008140033",
									".code": [
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "5A9ADE8B"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "6AA45EFC"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "7898E0C2"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "960384A0"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 85,
											"end": 126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 85,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 920,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 920,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 646,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 646,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 646,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2338,
											"end": 2657,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1006,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "121E958A4CADF7F8DADEFA22CC019700365240223668418FAEBED197DA07089F"
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1151,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 455,
											"end": 465,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 455,
											"end": 482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 447,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 510,
											"end": 549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 533,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 511,
											"end": 536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 510,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 510,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 510,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 493,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 559,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 559,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "A7FC99ED7617309EE23F63AE90196A1E490D362E6F6A547A59BC809EE2291782"
										},
										{
											"begin": 607,
											"end": 610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 619,
											"end": 628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 594,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 629,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 646,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 751,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 751,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 772,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 751,
											"end": 762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 802,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 802,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 817,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 854,
											"end": 867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 854,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 854,
											"end": 867,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 854,
											"end": 867,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 772,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 818,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 646,
											"end": 910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 646,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 146,
											"end": 865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 223,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 219,
											"end": 246,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 209,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 209,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 283,
											"end": 303,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 340,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 359,
											"end": 361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 355,
											"end": 357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 352,
											"end": 362,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 349,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 349,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 365,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 365,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 383,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 365,
											"end": 383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 410,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 494,
											"end": 507,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 494,
											"end": 507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 490,
											"end": 512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 512,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 470,
											"end": 523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 470,
											"end": 523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 556,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 538,
											"end": 556,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 538,
											"end": 556,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 558,
											"end": 580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 558,
											"end": 580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 558,
											"end": 580,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 535,
											"end": 581,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 532,
											"end": 604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 532,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 532,
											"end": 604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 584,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 584,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 584,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 584,
											"end": 602,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 584,
											"end": 602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 620,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 661,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 644,
											"end": 662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 698,
											"end": 702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 695,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 681,
											"end": 696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 677,
											"end": 703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 674,
											"end": 709,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 671,
											"end": 726,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 671,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 671,
											"end": 726,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 722,
											"end": 723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 724,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 671,
											"end": 726,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 671,
											"end": 726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 788,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 777,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 767,
											"end": 784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 748,
											"end": 765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 735,
											"end": 789,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 823,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 809,
											"end": 824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 805,
											"end": 831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 798,
											"end": 835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 844,
											"end": 859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 146,
											"end": 865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 870,
											"end": 1192,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 870,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 971,
											"end": 978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 967,
											"end": 990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 963,
											"end": 995,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1010,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1100,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1115,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1167,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1136,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1186,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1136,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1186,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 870,
											"end": 1192,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 870,
											"end": 1192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1665,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1379,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1494,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1585,
											"end": 1616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1565,
											"end": 1635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1635,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1565,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1659,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1665,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1379,
											"end": 1665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1758,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 1833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1834,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1767,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1767,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2022,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2085,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2127,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2163,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2213,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2266,
											"end": 2268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2232,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2232,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2289,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2327,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2289,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3086,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2953,
											"end": 3086,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3003,
											"end": 3006,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2999,
											"end": 3019,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3020,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3086,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2953,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 3092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3347,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3097,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3192,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3321,
											"end": 3337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3641,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3352,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3537,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3603,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3537,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3646,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3899,
											"end": 3933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4014,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 3993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 3994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3942,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4024,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3942,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4165,
											"end": 4185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4095,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4085,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4064,
											"end": 4079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4060,
											"end": 4089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3646,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4475,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4266,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4314,
											"end": 4446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 4363,
											"end": 4366,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4359,
											"end": 4379,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4407,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4446,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4314,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/DIAOracleV2.sol",
								"contracts/Dependencies/Ownable.sol",
								"contracts/Interfaces/IPriceFeed.sol",
								"contracts/Interfaces/IPriceOracleGetter.sol",
								"contracts/PriceFeed.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getValue(string)": "960384a0",
							"setValue(string,uint128,uint128)": "7898e0c2",
							"updateOracleUpdaterAddress(address)": "6aa45efc",
							"values(string)": "5a9ade8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"name\":\"OracleUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"UpdaterAddressChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleUpdaterAddress\",\"type\":\"address\"}],\"name\":\"updateOracleUpdaterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DIAOracleV2.sol\":\"DIAOracleV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DIAOracleV2.sol\":{\"keccak256\":\"0x0be34ccf1c9926ade1247b1ee55488348fe9543df576612a8eb4843dbedbc27e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f06df8c99f3cda0479c7b4b2325ae2838fe8a15efc5b0b9ae12649f4cd101f2a\",\"dweb:/ipfs/QmdhnZW4QHoWWaudj4JA4Vj5SwBubqqF8wxw9nXumhiZ1W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/DIAOracleV2.sol:DIAOracleV2",
								"label": "values",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "contracts/DIAOracleV2.sol:DIAOracleV2",
								"label": "oracleUpdater",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dependencies/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/Ownable.sol\":566:2003  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dependencies/Ownable.sol\":804:914  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  0x00\n    /* \"contracts/Dependencies/Ownable.sol\":829:848  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Dependencies/Ownable.sol\":838:848  msg.sender */\n  caller\n    /* \"contracts/Dependencies/Ownable.sol\":829:848  _owner = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  mload(0x40)\n    /* \"contracts/Dependencies/Ownable.sol\":838:848  msg.sender */\n  swap1\n  swap2\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  dup3\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  log3\n    /* \"contracts/Dependencies/Ownable.sol\":566:2003  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/Ownable.sol\":566:2003  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dependencies/Ownable.sol\":990:1067  function owner() public view returns (address) {... */\n    tag_3:\n        /* \"contracts/Dependencies/Ownable.sol\":1028:1035  address */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1054:1060  _owner */\n      sload\n        /* \"contracts/Dependencies/Ownable.sol\":990:1067  function owner() public view returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dependencies/Ownable.sol\":1054:1060  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Dependencies/Ownable.sol\":990:1067  function owner() public view returns (address) {... */\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n    tag_4:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":387:401   */\n      swap1\n      iszero\n        /* \"#utility.yul\":380:402   */\n      iszero\n        /* \"#utility.yul\":362:403   */\n      dup2\n      mstore\n        /* \"#utility.yul\":350:352   */\n      0x20\n        /* \"#utility.yul\":335:353   */\n      add\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n      tag_7\n        /* \"#utility.yul\":222:409   */\n      jump\n\n    auxdata: 0xa264697066735822122030496b4aa86a6271ed850b2a73a381a4638e99e3f37452e581987e37573b4d1f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_165": {
									"entryPoint": null,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360aa8061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea264697066735822122030496b4aa86a6271ed850b2a73a381a4638e99e3f37452e581987e37573b4d1f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH1 0xAA DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x49 PUSH12 0x4AA86A6271ED850B2A73A381 LOG4 PUSH4 0x8E99E3F3 PUSH21 0x52E581987E37573B4D1F64736F6C63430008140033 ",
							"sourceMap": "566:1437:1:-:0;;;804:110;;;;;;;;;-1:-1:-1;829:6:1;:19;;-1:-1:-1;;;;;;829:19:1;838:10;829:19;;;;;863:44;;838:10;;829:6;863:44;;829:6;;863:44;566:1437;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isOwner_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:411:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "327:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "339:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "335:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "327:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "387:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "387:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "380:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:5",
														"type": ""
													}
												],
												"src": "222:187:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea264697066735822122030496b4aa86a6271ed850b2a73a381a4638e99e3f37452e581987e37573b4d1f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x49 PUSH12 0x4AA86A6271ED850B2A73A381 LOG4 PUSH4 0x8E99E3F3 PUSH21 0x52E581987E37573B4D1F64736F6C63430008140033 ",
							"sourceMap": "566:1437:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:77;1028:7;1054:6;990:77;;-1:-1:-1;;;;;1054:6:1;;;160:51:5;;148:2;133:18;990:77:1;;;;;;;;1341:90;1381:4;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1341:90;;387:14:5;;380:22;362:41;;350:2;335:18;1341:90:1;222:187:5"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "34000",
								"executionCost": "25855",
								"totalCost": "59855"
							},
							"external": {
								"isOwner()": "2309",
								"owner()": "2268"
							},
							"internal": {
								"_renounceOwnership()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 804,
									"end": 914,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 914,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 804,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 804,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 907,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 863,
									"end": 907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 2003,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030496b4aa86a6271ed850b2a73a381a4638e99e3f37452e581987e37573b4d1f64736f6c63430008140033",
									".code": [
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 2003,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 401,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 380,
											"end": 402,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 409,
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/DIAOracleV2.sol",
								"contracts/Dependencies/Ownable.sol",
								"contracts/Interfaces/IPriceFeed.sol",
								"contracts/Interfaces/IPriceOracleGetter.sol",
								"contracts/PriceFeed.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's Ownable contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/Ownable.sol\":{\"keccak256\":\"0xe918cfb483fc33e2ac0281e7501d1646776916a999449c30dbb4b552673031ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5ce9a0c9f6ffc0ab68a5b65cee22501f69d46dea73e8be4622ff3f4545ebb83\",\"dweb:/ipfs/QmbSjTyRbS6G1qdSAC12qnR8iwr96tyY1pgxaFpoWip6ou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 140,
								"contract": "contracts/Dependencies/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's Ownable contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
						"version": 1
					}
				}
			},
			"contracts/Interfaces/IPriceFeed.sol": {
				"IPriceFeed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastGoodPrice",
									"type": "uint256"
								}
							],
							"name": "LastGoodPriceUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "fetchPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchPrice()": "0fdb11cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastGoodPrice\",\"type\":\"uint256\"}],\"name\":\"LastGoodPriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fetchPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IPriceFeed.sol\":{\"keccak256\":\"0x0d4e2b89f36d90a20675d433e5f96d2829e00a54f2f55205cb8fed9d17502483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb744ec70ae9144d1c381ef01b649c5e0a7eeb8982b47a1b293e3284b7d85a7d\",\"dweb:/ipfs/QmZiL54Ndx6BLnx3GamFiVifk4YePTRG1Pfbm1WJTXzHXf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces/IPriceOracleGetter.sol": {
				"IPriceOracleGetter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getAssetPrice(address)": {
								"details": "returns the asset price USD",
								"params": {
									"asset": "the address of the asset"
								},
								"returns": {
									"_0": "the price of the asset*"
								}
							}
						},
						"title": "IPriceOracleGetter interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAssetPrice(address)": "b3596f07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"returns the asset price USD\",\"params\":{\"asset\":\"the address of the asset\"},\"returns\":{\"_0\":\"the price of the asset*\"}}},\"title\":\"IPriceOracleGetter interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Meridian price oracle.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0x4c7c10c2211f40efa778fd0686814de0a7a7cc9ad95ee37b7cbfdb412154aafa\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2ca0bb0670b7ebaeb2cce25f6691ac677ead3bfba3ab6464321a302226742b6\",\"dweb:/ipfs/QmbH7Cv6kQyPVYkEPLgDvFTsRWae4ermaQNCGfCeTo1kK3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Meridian price oracle.*",
						"version": 1
					}
				}
			},
			"contracts/PriceFeed.sol": {
				"PriceFeed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "DIAOracleAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "baseCurrency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseCurrencyUnit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAgeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "AssetKeyUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "baseCurrency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseCurrencyUnit",
									"type": "uint256"
								}
							],
							"name": "BaseCurrencySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "diaOracleAddress",
									"type": "address"
								}
							],
							"name": "DIAOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "EthAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								}
							],
							"name": "FallbackOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASE_CURRENCY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_CURRENCY_UNIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CONVERSION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMasterOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxPriceAgeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getSourceOfAsset",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "setAssetKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "diaOracleAddress",
									"type": "address"
								}
							],
							"name": "setDIAOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								}
							],
							"name": "setFallbackOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "AgeLimit",
									"type": "uint256"
								}
							],
							"name": "setMaxPriceAgeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "setwEthAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Meridian Finance",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"DIAOracleAddress": "The address of the master oracle to use",
									"baseCurrency": "the base currency used for the price quotes. If USD is used, base currency is 0x0",
									"baseCurrencyUnit": "the unit of the base currency",
									"fallbackOracle": "The address of the fallback oracle to use if the data of an aggregator is not consistent",
									"priceAgeLimit": "the max permitted age of oracle price before call is forwarded to fallback oracle"
								}
							},
							"getFallbackOracle()": {
								"returns": {
									"_0": "address The addres of the fallback oracle"
								}
							},
							"getMasterOracle()": {
								"returns": {
									"_0": "address The addres of the DIA oracle"
								}
							},
							"getMaxPriceAgeLimit()": {
								"returns": {
									"_0": "the max age in seconds"
								}
							},
							"getSourceOfAsset(address)": {
								"returns": {
									"_0": "The DIA key string"
								}
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"setAssetKey(address,string)": {
								"params": {
									"asset": "The address of the asset to be set",
									"key": "The DIA keys/symbol of the source of each asset"
								}
							},
							"setDIAOracle(address)": {
								"params": {
									"diaOracleAddress": "The address of the MasterOracle"
								}
							},
							"setFallbackOracle(address)": {
								"params": {
									"fallbackOracle": "The address of the fallbackOracle"
								}
							},
							"setMaxPriceAgeLimit(uint256)": {
								"params": {
									"AgeLimit": "max age in seconds of latest price"
								}
							}
						},
						"title": "PriceFeed",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PriceFeed.sol\":704:5790  contract PriceFeed is Ownable {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/PriceFeed.sol\":1341:1352  10000000000 */\n  0x02540be400\n    /* \"contracts/PriceFeed.sol\":1296:1352  uint256 public immutable CONVERSION_FACTOR = 10000000000 */\n  0xc0\n  mstore\n    /* \"contracts/PriceFeed.sol\":1906:2319  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  0x00\n    /* \"contracts/Dependencies/Ownable.sol\":829:848  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Dependencies/Ownable.sol\":838:848  msg.sender */\n  caller\n    /* \"contracts/Dependencies/Ownable.sol\":829:848  _owner = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  mload(0x40)\n    /* \"contracts/Dependencies/Ownable.sol\":838:848  msg.sender */\n  swap1\n  swap2\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":829:835  _owner */\n  dup3\n  swap1\n    /* \"contracts/Dependencies/Ownable.sol\":863:907  OwnershipTransferred(address(0), msg.sender) */\n  log3\n    /* \"contracts/PriceFeed.sol\":2070:2101  _setDIAOracle(DIAOracleAddress) */\n  tag_8\n    /* \"contracts/PriceFeed.sol\":2084:2100  DIAOracleAddress */\n  dup6\n    /* \"contracts/PriceFeed.sol\":2070:2083  _setDIAOracle */\n  tag_9\n    /* \"contracts/PriceFeed.sol\":2070:2101  _setDIAOracle(DIAOracleAddress) */\n  jump\t// in\ntag_8:\n    /* \"contracts/PriceFeed.sol\":2107:2141  _setFallbackOracle(fallbackOracle) */\n  tag_10\n    /* \"contracts/PriceFeed.sol\":2126:2140  fallbackOracle */\n  dup5\n    /* \"contracts/PriceFeed.sol\":2107:2125  _setFallbackOracle */\n  tag_11\n    /* \"contracts/PriceFeed.sol\":2107:2141  _setFallbackOracle(fallbackOracle) */\n  jump\t// in\ntag_10:\n    /* \"contracts/PriceFeed.sol\":2147:2163  maxPriceAgeLimit */\n  0x04\n    /* \"contracts/PriceFeed.sol\":2147:2179  maxPriceAgeLimit = priceAgeLimit */\n  dup2\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/PriceFeed.sol\":2185:2213  BASE_CURRENCY = baseCurrency */\n  dup4\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/PriceFeed.sol\":2219:2256  BASE_CURRENCY_UNIT = baseCurrencyUnit */\n  0xa0\n  dup4\n  swap1\n  mstore\n    /* \"contracts/PriceFeed.sol\":2267:2314  BaseCurrencySet(baseCurrency, baseCurrencyUnit) */\n  mload(0x40)\n    /* \"#utility.yul\":849:874   */\n  dup4\n  dup2\n  mstore\n    /* \"contracts/PriceFeed.sol\":2267:2314  BaseCurrencySet(baseCurrency, baseCurrencyUnit) */\n  0xe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c1\n  swap1\n    /* \"#utility.yul\":837:839   */\n  0x20\n    /* \"#utility.yul\":822:840   */\n  add\n    /* \"contracts/PriceFeed.sol\":2267:2314  BaseCurrencySet(baseCurrency, baseCurrencyUnit) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/PriceFeed.sol\":1906:2319  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/PriceFeed.sol\":704:5790  contract PriceFeed is Ownable {... */\n  jump(tag_18)\n    /* \"contracts/PriceFeed.sol\":3825:3978  function _setDIAOracle(address diaOracleAddress) internal {    ... */\ntag_9:\n    /* \"contracts/PriceFeed.sol\":3893:3896  DIA */\n  0x05\n    /* \"contracts/PriceFeed.sol\":3893:3928  DIA = DIAOracleV2(diaOracleAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/PriceFeed.sol\":3939:3973  DIAOracleUpdated(diaOracleAddress) */\n  mload(0x40)\n  0x535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe90\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/PriceFeed.sol\":3825:3978  function _setDIAOracle(address diaOracleAddress) internal {    ... */\n  pop\n  jump\t// out\n    /* \"contracts/PriceFeed.sol\":4102:4274  function _setFallbackOracle(address fallbackOracle) internal {... */\ntag_11:\n    /* \"contracts/PriceFeed.sol\":4169:4184  _fallbackOracle */\n  0x03\n    /* \"contracts/PriceFeed.sol\":4169:4221  _fallbackOracle = IPriceOracleGetter(fallbackOracle) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/PriceFeed.sol\":4232:4269  FallbackOracleUpdated(fallbackOracle) */\n  mload(0x40)\n  0xce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/PriceFeed.sol\":4102:4274  function _setFallbackOracle(address fallbackOracle) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:698   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_22:\n    /* \"#utility.yul\":427:467   */\n  tag_23\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_24\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_25\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":643:645   */\n  0x60\n    /* \"#utility.yul\":628:646   */\n  dup8\n  add\n    /* \"#utility.yul\":622:647   */\n  mload\n    /* \"#utility.yul\":687:690   */\n  0x80\n    /* \"#utility.yul\":672:691   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":666:692   */\n  mload\n    /* \"#utility.yul\":196:698   */\n  swap6\n  swap9\n  swap5\n  swap8\n  pop\n    /* \"#utility.yul\":544:603   */\n  swap6\n    /* \"#utility.yul\":622:647   */\n  swap5\n    /* \"#utility.yul\":666:692   */\n  swap4\n    /* \"#utility.yul\":196:698   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":703:880   */\ntag_18:\n    /* \"contracts/PriceFeed.sol\":704:5790  contract PriceFeed is Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x06a86cedc6cacd68c72b41c10c237851dfed5ce85910507dd1c9be6a7d822d04\")\n  0x00\n  assignImmutable(\"0x51863e56b7cfaa34136dd39904ea52747b45d5dc781efc9504f80805fc45ebbd\")\n  0x00\n  assignImmutable(\"0xbf1fcd4bbdcfbc55a741fb1df45db5ad6a5122c50e7ade06e72a5499ae322de6\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/PriceFeed.sol\":704:5790  contract PriceFeed is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f32d59b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd5725f1c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd5725f1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdece273f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe19f4700\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf8cdd014\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x8f32d59b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x92a1aebf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x92bf2be0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbd252281\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6210308c\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x6210308c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x85152e45\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8c89b64f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x0fdb11cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x170aee73\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x57fc3614\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PriceFeed.sol\":3299:3414  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/PriceFeed.sol\":3086:3195  function setDIAOracle(address diaOracleAddress) external onlyOwner {... */\n    tag_5:\n      tag_25\n      tag_30\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":5445:5548  function getFallbackOracle() external view returns (address) {... */\n    tag_6:\n        /* \"contracts/PriceFeed.sol\":5527:5542  _fallbackOracle */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/PriceFeed.sol\":5445:5548  function getFallbackOracle() external view returns (address) {... */\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"contracts/PriceFeed.sol\":5445:5548  function getFallbackOracle() external view returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":565:768   */\n      jump\n        /* \"contracts/PriceFeed.sol\":5242:5331  function getMasterOracle() external view returns (address) {... */\n    tag_7:\n        /* \"contracts/PriceFeed.sol\":5322:5325  DIA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/PriceFeed.sol\":5242:5331  function getMasterOracle() external view returns (address) {... */\n      jump(tag_32)\n        /* \"contracts/PriceFeed.sol\":1249:1292  uint256 public immutable BASE_CURRENCY_UNIT */\n    tag_8:\n      tag_21\n      immutable(\"0x51863e56b7cfaa34136dd39904ea52747b45d5dc781efc9504f80805fc45ebbd\")\n      dup2\n      jump\n        /* \"contracts/Dependencies/Ownable.sol\":990:1067  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"contracts/Dependencies/Ownable.sol\":1028:1035  address */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1054:1060  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":990:1067  function owner() public view returns (address) {... */\n      jump(tag_32)\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n    tag_10:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":938:952   */\n      swap1\n      iszero\n        /* \"#utility.yul\":931:953   */\n      iszero\n        /* \"#utility.yul\":913:954   */\n      dup2\n      mstore\n        /* \"#utility.yul\":901:903   */\n      0x20\n        /* \"#utility.yul\":886:904   */\n      add\n        /* \"contracts/Dependencies/Ownable.sol\":1341:1431  function isOwner() public view returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":773:960   */\n      jump\n        /* \"contracts/PriceFeed.sol\":2799:2984  function setwEthAddress(address asset) external onlyOwner {... */\n    tag_11:\n      tag_25\n      tag_50\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":5013:5135  function getSourceOfAsset(address asset) external view returns (string memory) {... */\n    tag_12:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":1296:1352  uint256 public immutable CONVERSION_FACTOR = 10000000000 */\n    tag_13:\n      tag_21\n      immutable(\"0x06a86cedc6cacd68c72b41c10c237851dfed5ce85910507dd1c9be6a7d822d04\")\n      dup2\n      jump\n        /* \"contracts/PriceFeed.sol\":2557:2793  function setAssetKey(address asset, string calldata key) external onlyOwner {... */\n    tag_14:\n      tag_25\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":3567:3671  function setMaxPriceAgeLimit(uint256 AgeLimit) external onlyOwner {... */\n    tag_15:\n      tag_25\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":1205:1243  address public immutable BASE_CURRENCY */\n    tag_16:\n      tag_32\n      immutable(\"0xbf1fcd4bbdcfbc55a741fb1df45db5ad6a5122c50e7ade06e72a5499ae322de6\")\n      dup2\n      jump\n        /* \"contracts/PriceFeed.sol\":5691:5788  function getMaxPriceAgeLimit() external view returns (uint256) {... */\n    tag_17:\n        /* \"contracts/PriceFeed.sol\":5767:5783  maxPriceAgeLimit */\n      sload(0x04)\n        /* \"contracts/PriceFeed.sol\":5691:5788  function getMaxPriceAgeLimit() external view returns (uint256) {... */\n      jump(tag_21)\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n    tag_22:\n        /* \"contracts/PriceFeed.sol\":4384:4395  wEthAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/PriceFeed.sol\":4353:4360  uint256 */\n      0x00\n        /* \"contracts/PriceFeed.sol\":4421:4438  assetsKeys[asset] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PriceFeed.sol\":4384:4395  wEthAddress */\n      0x01\n        /* \"contracts/PriceFeed.sol\":4421:4438  assetsKeys[asset] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/PriceFeed.sol\":4401:4438  string memory key = assetsKeys[asset] */\n      dup1\n      sload\n        /* \"contracts/PriceFeed.sol\":4353:4360  uint256 */\n      swap2\n      swap3\n        /* \"contracts/PriceFeed.sol\":4384:4395  wEthAddress */\n      swap2\n        /* \"contracts/PriceFeed.sol\":4353:4360  uint256 */\n      dup4\n      swap2\n        /* \"contracts/PriceFeed.sol\":4421:4438  assetsKeys[asset] */\n      swap1\n        /* \"contracts/PriceFeed.sol\":4401:4438  string memory key = assetsKeys[asset] */\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PriceFeed.sol\":4458:4471  BASE_CURRENCY */\n      immutable(\"0xbf1fcd4bbdcfbc55a741fb1df45db5ad6a5122c50e7ade06e72a5499ae322de6\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":4449:4471  asset == BASE_CURRENCY */\n      and\n        /* \"contracts/PriceFeed.sol\":4449:4454  asset */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":4449:4471  asset == BASE_CURRENCY */\n      and\n      sub\n        /* \"contracts/PriceFeed.sol\":4445:4892  if (asset == BASE_CURRENCY) {... */\n      tag_81\n      jumpi\n        /* \"contracts/PriceFeed.sol\":4488:4506  BASE_CURRENCY_UNIT */\n      immutable(\"0x51863e56b7cfaa34136dd39904ea52747b45d5dc781efc9504f80805fc45ebbd\")\n        /* \"contracts/PriceFeed.sol\":4481:4506  return BASE_CURRENCY_UNIT */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":4445:4892  if (asset == BASE_CURRENCY) {... */\n    tag_81:\n        /* \"contracts/PriceFeed.sol\":4529:4532  key */\n      dup1\n        /* \"contracts/PriceFeed.sol\":4523:4540  bytes(key).length */\n      mload\n        /* \"contracts/PriceFeed.sol\":4544:4545  0 */\n      0x00\n        /* \"contracts/PriceFeed.sol\":4523:4545  bytes(key).length == 0 */\n      sub\n        /* \"contracts/PriceFeed.sol\":4519:4892  if (bytes(key).length == 0) {    ... */\n      tag_83\n      jumpi\n        /* \"contracts/PriceFeed.sol\":4566:4581  _fallbackOracle */\n      sload(0x03)\n        /* \"contracts/PriceFeed.sol\":4566:4602  _fallbackOracle.getAssetPrice(asset) */\n      mload(0x40)\n      shl(0xe0, 0xb3596f07)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      dup5\n      dup2\n      and\n        /* \"contracts/PriceFeed.sol\":4566:4602  _fallbackOracle.getAssetPrice(asset) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":711:762   */\n      mstore\n        /* \"contracts/PriceFeed.sol\":4566:4581  _fallbackOracle */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PriceFeed.sol\":4566:4595  _fallbackOracle.getAssetPrice */\n      0xb3596f07\n      swap1\n        /* \"#utility.yul\":684:702   */\n      0x24\n      add\n        /* \"contracts/PriceFeed.sol\":4566:4602  _fallbackOracle.getAssetPrice(asset) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/PriceFeed.sol\":4559:4602  return _fallbackOracle.getAssetPrice(asset) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":4519:4892  if (bytes(key).length == 0) {    ... */\n    tag_83:\n        /* \"contracts/PriceFeed.sol\":4660:4663  DIA */\n      sload(0x05)\n        /* \"contracts/PriceFeed.sol\":4660:4677  DIA.getValue(key) */\n      mload(0x40)\n      shl(0xe5, 0x04b01c25)\n      dup2\n      mstore\n        /* \"contracts/PriceFeed.sol\":4624:4637  uint128 price */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":4660:4663  DIA */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PriceFeed.sol\":4660:4672  DIA.getValue */\n      0x960384a0\n      swap1\n        /* \"contracts/PriceFeed.sol\":4660:4677  DIA.getValue(key) */\n      tag_90\n      swap1\n        /* \"contracts/PriceFeed.sol\":4673:4676  key */\n      dup7\n      swap1\n        /* \"contracts/PriceFeed.sol\":4660:4677  DIA.getValue(key) */\n      0x04\n      add\n      tag_56\n      jump\t// in\n    tag_90:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/PriceFeed.sol\":4623:4677  (uint128 price, uint128 timeStamp) = DIA.getValue(key) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PriceFeed.sol\":4703:4704  0 */\n      0x00\n        /* \"contracts/PriceFeed.sol\":4695:4700  price */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":4695:4704  price > 0 */\n      and\n      gt\n        /* \"contracts/PriceFeed.sol\":4695:4756  price > 0 && (block.timestamp - timeStamp) < maxPriceAgeLimit */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/PriceFeed.sol\":4740:4756  maxPriceAgeLimit */\n      sload(0x04)\n        /* \"contracts/PriceFeed.sol\":4709:4736  block.timestamp - timeStamp */\n      tag_96\n      sub(shl(0x80, 0x01), 0x01)\n      dup4\n      and\n        /* \"contracts/PriceFeed.sol\":4709:4724  block.timestamp */\n      timestamp\n        /* \"contracts/PriceFeed.sol\":4709:4736  block.timestamp - timeStamp */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/PriceFeed.sol\":4708:4756  (block.timestamp - timeStamp) < maxPriceAgeLimit */\n      lt\n        /* \"contracts/PriceFeed.sol\":4695:4756  price > 0 && (block.timestamp - timeStamp) < maxPriceAgeLimit */\n    tag_95:\n        /* \"contracts/PriceFeed.sol\":4691:4886  if (price > 0 && (block.timestamp - timeStamp) < maxPriceAgeLimit) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/PriceFeed.sol\":4775:4809  uint256(price) * CONVERSION_FACTOR */\n      tag_99\n        /* \"contracts/PriceFeed.sol\":4792:4809  CONVERSION_FACTOR */\n      immutable(\"0x06a86cedc6cacd68c72b41c10c237851dfed5ce85910507dd1c9be6a7d822d04\")\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":4775:4789  uint256(price) */\n      dup5\n      and\n        /* \"contracts/PriceFeed.sol\":4775:4809  uint256(price) * CONVERSION_FACTOR */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"contracts/PriceFeed.sol\":4768:4809  return uint256(price) * CONVERSION_FACTOR */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PriceFeed.sol\":4308:4896  function fetchPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":4691:4886  if (price > 0 && (block.timestamp - timeStamp) < maxPriceAgeLimit) {... */\n    tag_98:\n        /* \"contracts/PriceFeed.sol\":4841:4856  _fallbackOracle */\n      sload(0x03)\n        /* \"contracts/PriceFeed.sol\":4841:4877  _fallbackOracle.getAssetPrice(asset) */\n      mload(0x40)\n      shl(0xe0, 0xb3596f07)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      dup7\n      dup2\n      and\n        /* \"contracts/PriceFeed.sol\":4841:4877  _fallbackOracle.getAssetPrice(asset) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":711:762   */\n      mstore\n        /* \"contracts/PriceFeed.sol\":4841:4856  _fallbackOracle */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PriceFeed.sol\":4841:4870  _fallbackOracle.getAssetPrice */\n      0xb3596f07\n      swap1\n        /* \"#utility.yul\":684:702   */\n      0x24\n      add\n        /* \"contracts/PriceFeed.sol\":4841:4877  _fallbackOracle.getAssetPrice(asset) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":3299:3414  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n    tag_28:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1186:1240  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/PriceFeed.sol\":3375:3409  _setFallbackOracle(fallbackOracle) */\n      tag_112\n        /* \"contracts/PriceFeed.sol\":3394:3408  fallbackOracle */\n      dup2\n        /* \"contracts/PriceFeed.sol\":3375:3393  _setFallbackOracle */\n      tag_113\n        /* \"contracts/PriceFeed.sol\":3375:3409  _setFallbackOracle(fallbackOracle) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/PriceFeed.sol\":3299:3414  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":3086:3195  function setDIAOracle(address diaOracleAddress) external onlyOwner {... */\n    tag_31:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1186:1240  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_116:\n        /* \"contracts/PriceFeed.sol\":3159:3190  _setDIAOracle(diaOracleAddress) */\n      tag_112\n        /* \"contracts/PriceFeed.sol\":3173:3189  diaOracleAddress */\n      dup2\n        /* \"contracts/PriceFeed.sol\":3159:3172  _setDIAOracle */\n      tag_120\n        /* \"contracts/PriceFeed.sol\":3159:3190  _setDIAOracle(diaOracleAddress) */\n      jump\t// in\n        /* \"contracts/PriceFeed.sol\":2799:2984  function setwEthAddress(address asset) external onlyOwner {... */\n    tag_51:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1186:1240  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":2872:2891  asset != address(0) */\n      dup2\n      and\n        /* \"contracts/PriceFeed.sol\":2863:2915  require((asset != address(0)), 'Invalid parameters') */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4444:4446   */\n      0x20\n        /* \"contracts/PriceFeed.sol\":2863:2915  require((asset != address(0)), 'Invalid parameters') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4426:4447   */\n      mstore\n        /* \"#utility.yul\":4483:4485   */\n      0x12\n        /* \"#utility.yul\":4463:4481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4456:4486   */\n      mstore\n      shl(0x70, 0x496e76616c696420706172616d6574657273)\n        /* \"#utility.yul\":4502:4520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4495:4543   */\n      mstore\n        /* \"#utility.yul\":4560:4578   */\n      0x64\n      add\n        /* \"contracts/PriceFeed.sol\":2863:2915  require((asset != address(0)), 'Invalid parameters') */\n      tag_109\n        /* \"#utility.yul\":4242:4584   */\n      jump\n        /* \"contracts/PriceFeed.sol\":2863:2915  require((asset != address(0)), 'Invalid parameters') */\n    tag_130:\n        /* \"contracts/PriceFeed.sol\":2923:2934  wEthAddress */\n      0x02\n        /* \"contracts/PriceFeed.sol\":2923:2942  wEthAddress = asset */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/PriceFeed.sol\":2955:2979  EthAddressUpdated(asset) */\n      mload(0x40)\n        /* \"#utility.yul\":711:762   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PriceFeed.sol\":2955:2979  EthAddressUpdated(asset) */\n      0x58c18391fbfb633ee2f4d79e1c0c1d62597d97bc2c460d144c2583b13a2740e2\n      swap1\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"contracts/PriceFeed.sol\":2955:2979  EthAddressUpdated(asset) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PriceFeed.sol\":2799:2984  function setwEthAddress(address asset) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":5013:5135  function getSourceOfAsset(address asset) external view returns (string memory) {... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":5112:5129  assetsKeys[asset] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PriceFeed.sol\":5112:5122  assetsKeys */\n      0x01\n        /* \"contracts/PriceFeed.sol\":5112:5129  assetsKeys[asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/PriceFeed.sol\":5098:5130  return string(assetsKeys[asset]) */\n      dup1\n      sload\n        /* \"contracts/PriceFeed.sol\":5077:5090  string memory */\n      0x60\n      swap2\n        /* \"contracts/PriceFeed.sol\":5112:5129  assetsKeys[asset] */\n      swap1\n        /* \"contracts/PriceFeed.sol\":5098:5130  return string(assetsKeys[asset]) */\n      tag_135\n      swap1\n      tag_76\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_76\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PriceFeed.sol\":5013:5135  function getSourceOfAsset(address asset) external view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":2557:2793  function setAssetKey(address asset, string calldata key) external onlyOwner {... */\n    tag_63:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1186:1240  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":2648:2667  asset != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/PriceFeed.sol\":2648:2693  asset != address(0) && bytes(key).length != 0 */\n      tag_145\n      jumpi\n      pop\n        /* \"contracts/PriceFeed.sol\":2671:2693  bytes(key).length != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/PriceFeed.sol\":2648:2693  asset != address(0) && bytes(key).length != 0 */\n    tag_145:\n        /* \"contracts/PriceFeed.sol\":2639:2717  require((asset != address(0) && bytes(key).length != 0), 'Invalid parameters') */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4444:4446   */\n      0x20\n        /* \"contracts/PriceFeed.sol\":2639:2717  require((asset != address(0) && bytes(key).length != 0), 'Invalid parameters') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4426:4447   */\n      mstore\n        /* \"#utility.yul\":4483:4485   */\n      0x12\n        /* \"#utility.yul\":4463:4481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4456:4486   */\n      mstore\n      shl(0x70, 0x496e76616c696420706172616d6574657273)\n        /* \"#utility.yul\":4502:4520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4495:4543   */\n      mstore\n        /* \"#utility.yul\":4560:4578   */\n      0x64\n      add\n        /* \"contracts/PriceFeed.sol\":2639:2717  require((asset != address(0) && bytes(key).length != 0), 'Invalid parameters') */\n      tag_109\n        /* \"#utility.yul\":4242:4584   */\n      jump\n        /* \"contracts/PriceFeed.sol\":2639:2717  require((asset != address(0) && bytes(key).length != 0), 'Invalid parameters') */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PriceFeed.sol\":2725:2742  assetsKeys[asset] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PriceFeed.sol\":2725:2735  assetsKeys */\n      0x01\n        /* \"contracts/PriceFeed.sol\":2725:2742  assetsKeys[asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/PriceFeed.sol\":2725:2748  assetsKeys[asset] = key */\n      tag_148\n        /* \"contracts/PriceFeed.sol\":2745:2748  key */\n      dup3\n      dup5\n        /* \"contracts/PriceFeed.sol\":2725:2742  assetsKeys[asset] */\n      dup4\n        /* \"contracts/PriceFeed.sol\":2725:2748  assetsKeys[asset] = key */\n      tag_149\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/PriceFeed.sol\":2784:2787  key */\n      dup2\n      dup2\n        /* \"contracts/PriceFeed.sol\":2761:2788  AssetKeyUpdated(asset, key) */\n      mload(0x40)\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      0x1346085f9a075660968b9e1f053fbbcfa8642189a5f44875eea12a4c1e133b7e\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/PriceFeed.sol\":2557:2793  function setAssetKey(address asset, string calldata key) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":3567:3671  function setMaxPriceAgeLimit(uint256 AgeLimit) external onlyOwner {... */\n    tag_67:\n        /* \"contracts/Dependencies/Ownable.sol\":1381:1385  bool */\n      0x00\n        /* \"contracts/Dependencies/Ownable.sol\":1418:1424  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/Dependencies/Ownable.sol\":1404:1424  msg.sender == _owner */\n      eq\n        /* \"contracts/Dependencies/Ownable.sol\":1186:1240  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_154:\n        /* \"contracts/PriceFeed.sol\":3639:3655  maxPriceAgeLimit */\n      0x04\n        /* \"contracts/PriceFeed.sol\":3639:3666  maxPriceAgeLimit = AgeLimit */\n      sstore\n        /* \"contracts/PriceFeed.sol\":3567:3671  function setMaxPriceAgeLimit(uint256 AgeLimit) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":4102:4274  function _setFallbackOracle(address fallbackOracle) internal {... */\n    tag_113:\n        /* \"contracts/PriceFeed.sol\":4169:4184  _fallbackOracle */\n      0x03\n        /* \"contracts/PriceFeed.sol\":4169:4221  _fallbackOracle = IPriceOracleGetter(fallbackOracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/PriceFeed.sol\":4232:4269  FallbackOracleUpdated(fallbackOracle) */\n      mload(0x40)\n      0xce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PriceFeed.sol\":4102:4274  function _setFallbackOracle(address fallbackOracle) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/PriceFeed.sol\":3825:3978  function _setDIAOracle(address diaOracleAddress) internal {    ... */\n    tag_120:\n        /* \"contracts/PriceFeed.sol\":3893:3896  DIA */\n      0x05\n        /* \"contracts/PriceFeed.sol\":3893:3928  DIA = DIAOracleV2(diaOracleAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/PriceFeed.sol\":3939:3973  DIAOracleUpdated(diaOracleAddress) */\n      mload(0x40)\n      0x535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe90\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PriceFeed.sol\":3825:3978  function _setDIAOracle(address diaOracleAddress) internal {    ... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:369   */\n    tag_160:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_170:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_27:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_172:\n        /* \"#utility.yul\":525:554   */\n      tag_173\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_160\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":515:554   */\n      swap4\n        /* \"#utility.yul\":374:560   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":965:1513   */\n    tag_56:\n        /* \"#utility.yul\":1077:1081   */\n      0x00\n        /* \"#utility.yul\":1106:1108   */\n      0x20\n        /* \"#utility.yul\":1135:1137   */\n      dup1\n        /* \"#utility.yul\":1124:1133   */\n      dup4\n        /* \"#utility.yul\":1117:1138   */\n      mstore\n        /* \"#utility.yul\":1167:1173   */\n      dup4\n        /* \"#utility.yul\":1161:1174   */\n      mload\n        /* \"#utility.yul\":1210:1216   */\n      dup1\n        /* \"#utility.yul\":1205:1207   */\n      dup3\n        /* \"#utility.yul\":1194:1203   */\n      dup6\n        /* \"#utility.yul\":1190:1208   */\n      add\n        /* \"#utility.yul\":1183:1217   */\n      mstore\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1245:1385   */\n    tag_177:\n        /* \"#utility.yul\":1259:1265   */\n      dup2\n        /* \"#utility.yul\":1256:1257   */\n      dup2\n        /* \"#utility.yul\":1253:1266   */\n      lt\n        /* \"#utility.yul\":1245:1385   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1354:1368   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1350:1373   */\n      dup4\n      add\n        /* \"#utility.yul\":1344:1374   */\n      mload\n        /* \"#utility.yul\":1320:1337   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1339:1341   */\n      0x40\n        /* \"#utility.yul\":1316:1342   */\n      add\n        /* \"#utility.yul\":1309:1375   */\n      mstore\n        /* \"#utility.yul\":1274:1284   */\n      dup3\n      add\n        /* \"#utility.yul\":1245:1385   */\n      jump(tag_177)\n    tag_179:\n        /* \"#utility.yul\":1249:1252   */\n      pop\n        /* \"#utility.yul\":1434:1435   */\n      0x00\n        /* \"#utility.yul\":1429:1431   */\n      0x40\n        /* \"#utility.yul\":1420:1426   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      dup7\n        /* \"#utility.yul\":1405:1427   */\n      add\n        /* \"#utility.yul\":1401:1432   */\n      add\n        /* \"#utility.yul\":1394:1436   */\n      mstore\n        /* \"#utility.yul\":1504:1506   */\n      0x40\n        /* \"#utility.yul\":1497:1499   */\n      0x1f\n        /* \"#utility.yul\":1493:1500   */\n      not\n        /* \"#utility.yul\":1488:1490   */\n      0x1f\n        /* \"#utility.yul\":1480:1486   */\n      dup4\n        /* \"#utility.yul\":1476:1491   */\n      add\n        /* \"#utility.yul\":1472:1501   */\n      and\n        /* \"#utility.yul\":1461:1470   */\n      dup6\n        /* \"#utility.yul\":1457:1502   */\n      add\n        /* \"#utility.yul\":1453:1507   */\n      add\n        /* \"#utility.yul\":1445:1507   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":965:1513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:2184   */\n    tag_62:\n        /* \"#utility.yul\":1598:1604   */\n      0x00\n        /* \"#utility.yul\":1606:1612   */\n      dup1\n        /* \"#utility.yul\":1614:1620   */\n      0x00\n        /* \"#utility.yul\":1667:1669   */\n      0x40\n        /* \"#utility.yul\":1655:1664   */\n      dup5\n        /* \"#utility.yul\":1646:1653   */\n      dup7\n        /* \"#utility.yul\":1642:1665   */\n      sub\n        /* \"#utility.yul\":1638:1670   */\n      slt\n        /* \"#utility.yul\":1635:1687   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1683:1684   */\n      0x00\n        /* \"#utility.yul\":1680:1681   */\n      dup1\n        /* \"#utility.yul\":1673:1685   */\n      revert\n        /* \"#utility.yul\":1635:1687   */\n    tag_181:\n        /* \"#utility.yul\":1706:1735   */\n      tag_182\n        /* \"#utility.yul\":1725:1734   */\n      dup5\n        /* \"#utility.yul\":1706:1735   */\n      tag_160\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1696:1735   */\n      swap3\n      pop\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1775:1784   */\n      dup5\n        /* \"#utility.yul\":1771:1789   */\n      add\n        /* \"#utility.yul\":1758:1790   */\n      calldataload\n        /* \"#utility.yul\":1809:1827   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1842:1848   */\n      dup3\n        /* \"#utility.yul\":1839:1853   */\n      gt\n        /* \"#utility.yul\":1836:1870   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1863:1864   */\n      dup1\n        /* \"#utility.yul\":1856:1868   */\n      revert\n        /* \"#utility.yul\":1836:1870   */\n    tag_183:\n        /* \"#utility.yul\":1904:1910   */\n      dup2\n        /* \"#utility.yul\":1893:1902   */\n      dup7\n        /* \"#utility.yul\":1889:1911   */\n      add\n        /* \"#utility.yul\":1879:1911   */\n      swap2\n      pop\n        /* \"#utility.yul\":1949:1956   */\n      dup7\n        /* \"#utility.yul\":1942:1946   */\n      0x1f\n        /* \"#utility.yul\":1938:1940   */\n      dup4\n        /* \"#utility.yul\":1934:1947   */\n      add\n        /* \"#utility.yul\":1930:1957   */\n      slt\n        /* \"#utility.yul\":1920:1975   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1971:1972   */\n      0x00\n        /* \"#utility.yul\":1968:1969   */\n      dup1\n        /* \"#utility.yul\":1961:1973   */\n      revert\n        /* \"#utility.yul\":1920:1975   */\n    tag_184:\n        /* \"#utility.yul\":2011:2013   */\n      dup2\n        /* \"#utility.yul\":1998:2014   */\n      calldataload\n        /* \"#utility.yul\":2037:2039   */\n      dup2\n        /* \"#utility.yul\":2029:2035   */\n      dup2\n        /* \"#utility.yul\":2026:2040   */\n      gt\n        /* \"#utility.yul\":2023:2057   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2053:2054   */\n      0x00\n        /* \"#utility.yul\":2050:2051   */\n      dup1\n        /* \"#utility.yul\":2043:2055   */\n      revert\n        /* \"#utility.yul\":2023:2057   */\n    tag_185:\n        /* \"#utility.yul\":2098:2105   */\n      dup8\n        /* \"#utility.yul\":2093:2095   */\n      0x20\n        /* \"#utility.yul\":2084:2090   */\n      dup3\n        /* \"#utility.yul\":2080:2082   */\n      dup6\n        /* \"#utility.yul\":2076:2091   */\n      add\n        /* \"#utility.yul\":2072:2096   */\n      add\n        /* \"#utility.yul\":2069:2106   */\n      gt\n        /* \"#utility.yul\":2066:2123   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2119:2120   */\n      0x00\n        /* \"#utility.yul\":2116:2117   */\n      dup1\n        /* \"#utility.yul\":2109:2121   */\n      revert\n        /* \"#utility.yul\":2066:2123   */\n    tag_186:\n        /* \"#utility.yul\":2150:2152   */\n      0x20\n        /* \"#utility.yul\":2146:2148   */\n      dup4\n        /* \"#utility.yul\":2142:2153   */\n      add\n        /* \"#utility.yul\":2132:2153   */\n      swap5\n      pop\n        /* \"#utility.yul\":2172:2178   */\n      dup1\n        /* \"#utility.yul\":2162:2178   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1518:2184   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2189:2369   */\n    tag_66:\n        /* \"#utility.yul\":2248:2254   */\n      0x00\n        /* \"#utility.yul\":2301:2303   */\n      0x20\n        /* \"#utility.yul\":2289:2298   */\n      dup3\n        /* \"#utility.yul\":2280:2287   */\n      dup5\n        /* \"#utility.yul\":2276:2299   */\n      sub\n        /* \"#utility.yul\":2272:2304   */\n      slt\n        /* \"#utility.yul\":2269:2321   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2317:2318   */\n      0x00\n        /* \"#utility.yul\":2314:2315   */\n      dup1\n        /* \"#utility.yul\":2307:2319   */\n      revert\n        /* \"#utility.yul\":2269:2321   */\n    tag_188:\n      pop\n        /* \"#utility.yul\":2340:2363   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2189:2369   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2374:2754   */\n    tag_76:\n        /* \"#utility.yul\":2453:2454   */\n      0x01\n        /* \"#utility.yul\":2449:2461   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2496:2508   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2517:2578   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2571:2575   */\n      0x7f\n        /* \"#utility.yul\":2563:2569   */\n      dup3\n        /* \"#utility.yul\":2559:2576   */\n      and\n        /* \"#utility.yul\":2549:2576   */\n      swap2\n      pop\n        /* \"#utility.yul\":2517:2578   */\n    tag_190:\n        /* \"#utility.yul\":2624:2626   */\n      0x20\n        /* \"#utility.yul\":2616:2622   */\n      dup3\n        /* \"#utility.yul\":2613:2627   */\n      lt\n        /* \"#utility.yul\":2593:2611   */\n      dup2\n        /* \"#utility.yul\":2590:2628   */\n      sub\n        /* \"#utility.yul\":2587:2748   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2670:2680   */\n      0x4e487b71\n        /* \"#utility.yul\":2665:2668   */\n      0xe0\n        /* \"#utility.yul\":2661:2681   */\n      shl\n        /* \"#utility.yul\":2658:2659   */\n      0x00\n        /* \"#utility.yul\":2651:2682   */\n      mstore\n        /* \"#utility.yul\":2705:2709   */\n      0x22\n        /* \"#utility.yul\":2702:2703   */\n      0x04\n        /* \"#utility.yul\":2695:2710   */\n      mstore\n        /* \"#utility.yul\":2733:2737   */\n      0x24\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2723:2738   */\n      revert\n        /* \"#utility.yul\":2587:2748   */\n    tag_191:\n      pop\n        /* \"#utility.yul\":2374:2754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2943   */\n    tag_88:\n        /* \"#utility.yul\":2829:2835   */\n      0x00\n        /* \"#utility.yul\":2882:2884   */\n      0x20\n        /* \"#utility.yul\":2870:2879   */\n      dup3\n        /* \"#utility.yul\":2861:2868   */\n      dup5\n        /* \"#utility.yul\":2857:2880   */\n      sub\n        /* \"#utility.yul\":2853:2885   */\n      slt\n        /* \"#utility.yul\":2850:2902   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2898:2899   */\n      0x00\n        /* \"#utility.yul\":2895:2896   */\n      dup1\n        /* \"#utility.yul\":2888:2900   */\n      revert\n        /* \"#utility.yul\":2850:2902   */\n    tag_193:\n      pop\n        /* \"#utility.yul\":2921:2937   */\n      mload\n      swap2\n        /* \"#utility.yul\":2759:2943   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2948:3140   */\n    tag_161:\n        /* \"#utility.yul\":3027:3040   */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":3069:3115   */\n      dup2\n      and\n        /* \"#utility.yul\":3059:3116   */\n      dup2\n      eq\n        /* \"#utility.yul\":3049:3134   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3130:3131   */\n      0x00\n        /* \"#utility.yul\":3127:3128   */\n      dup1\n        /* \"#utility.yul\":3120:3132   */\n      revert\n        /* \"#utility.yul\":3145:3438   */\n    tag_94:\n        /* \"#utility.yul\":3224:3230   */\n      0x00\n        /* \"#utility.yul\":3232:3238   */\n      dup1\n        /* \"#utility.yul\":3285:3287   */\n      0x40\n        /* \"#utility.yul\":3273:3282   */\n      dup4\n        /* \"#utility.yul\":3264:3271   */\n      dup6\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3305   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3298:3299   */\n      dup1\n        /* \"#utility.yul\":3291:3303   */\n      revert\n        /* \"#utility.yul\":3253:3305   */\n    tag_197:\n        /* \"#utility.yul\":3324:3364   */\n      tag_198\n        /* \"#utility.yul\":3354:3363   */\n      dup4\n        /* \"#utility.yul\":3324:3364   */\n      tag_161\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3314:3364   */\n      swap2\n      pop\n        /* \"#utility.yul\":3383:3432   */\n      tag_199\n        /* \"#utility.yul\":3428:3430   */\n      0x20\n        /* \"#utility.yul\":3417:3426   */\n      dup5\n        /* \"#utility.yul\":3413:3431   */\n      add\n        /* \"#utility.yul\":3383:3432   */\n      tag_161\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3373:3432   */\n      swap1\n      pop\n        /* \"#utility.yul\":3145:3438   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3443:3570   */\n    tag_162:\n        /* \"#utility.yul\":3504:3514   */\n      0x4e487b71\n        /* \"#utility.yul\":3499:3502   */\n      0xe0\n        /* \"#utility.yul\":3495:3515   */\n      shl\n        /* \"#utility.yul\":3492:3493   */\n      0x00\n        /* \"#utility.yul\":3485:3516   */\n      mstore\n        /* \"#utility.yul\":3535:3539   */\n      0x11\n        /* \"#utility.yul\":3532:3533   */\n      0x04\n        /* \"#utility.yul\":3525:3540   */\n      mstore\n        /* \"#utility.yul\":3559:3563   */\n      0x24\n        /* \"#utility.yul\":3556:3557   */\n      0x00\n        /* \"#utility.yul\":3549:3564   */\n      revert\n        /* \"#utility.yul\":3575:3703   */\n    tag_97:\n        /* \"#utility.yul\":3642:3651   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3663:3674   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3660:3697   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3677:3695   */\n      tag_203\n      tag_162\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3575:3703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3876   */\n    tag_100:\n        /* \"#utility.yul\":3781:3790   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3812:3821   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3829:3844   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3823:3845   */\n      dup5\n      eq\n        /* \"#utility.yul\":3809:3846   */\n      or\n        /* \"#utility.yul\":3799:3870   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3850:3868   */\n      tag_203\n      tag_162\n      jump\t// in\n        /* \"#utility.yul\":3881:4237   */\n    tag_110:\n        /* \"#utility.yul\":4083:4085   */\n      0x20\n        /* \"#utility.yul\":4065:4086   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4102:4120   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4095:4125   */\n      mstore\n        /* \"#utility.yul\":4161:4195   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4156:4158   */\n      0x40\n        /* \"#utility.yul\":4141:4159   */\n      dup3\n      add\n        /* \"#utility.yul\":4134:4196   */\n      mstore\n        /* \"#utility.yul\":4228:4230   */\n      0x60\n        /* \"#utility.yul\":4213:4231   */\n      add\n      swap1\n        /* \"#utility.yul\":3881:4237   */\n      jump\t// out\n        /* \"#utility.yul\":4589:4716   */\n    tag_163:\n        /* \"#utility.yul\":4650:4660   */\n      0x4e487b71\n        /* \"#utility.yul\":4645:4648   */\n      0xe0\n        /* \"#utility.yul\":4641:4661   */\n      shl\n        /* \"#utility.yul\":4638:4639   */\n      0x00\n        /* \"#utility.yul\":4631:4662   */\n      mstore\n        /* \"#utility.yul\":4681:4685   */\n      0x41\n        /* \"#utility.yul\":4678:4679   */\n      0x04\n        /* \"#utility.yul\":4671:4686   */\n      mstore\n        /* \"#utility.yul\":4705:4709   */\n      0x24\n        /* \"#utility.yul\":4702:4703   */\n      0x00\n        /* \"#utility.yul\":4695:4710   */\n      revert\n        /* \"#utility.yul\":4847:5392   */\n    tag_165:\n        /* \"#utility.yul\":4949:4951   */\n      0x1f\n        /* \"#utility.yul\":4944:4947   */\n      dup3\n        /* \"#utility.yul\":4941:4952   */\n      gt\n        /* \"#utility.yul\":4938:5386   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4985:4986   */\n      0x00\n        /* \"#utility.yul\":5010:5015   */\n      dup2\n        /* \"#utility.yul\":5006:5008   */\n      dup2\n        /* \"#utility.yul\":4999:5016   */\n      mstore\n        /* \"#utility.yul\":5055:5059   */\n      0x20\n        /* \"#utility.yul\":5051:5053   */\n      dup2\n        /* \"#utility.yul\":5041:5060   */\n      keccak256\n        /* \"#utility.yul\":5125:5127   */\n      0x1f\n        /* \"#utility.yul\":5113:5123   */\n      dup6\n        /* \"#utility.yul\":5109:5128   */\n      add\n        /* \"#utility.yul\":5106:5107   */\n      0x05\n        /* \"#utility.yul\":5102:5129   */\n      shr\n        /* \"#utility.yul\":5096:5100   */\n      dup2\n        /* \"#utility.yul\":5092:5130   */\n      add\n        /* \"#utility.yul\":5161:5165   */\n      0x20\n        /* \"#utility.yul\":5149:5159   */\n      dup7\n        /* \"#utility.yul\":5146:5166   */\n      lt\n        /* \"#utility.yul\":5143:5190   */\n      iszero\n      tag_213\n      jumpi\n      pop\n        /* \"#utility.yul\":5184:5188   */\n      dup1\n        /* \"#utility.yul\":5143:5190   */\n    tag_213:\n        /* \"#utility.yul\":5239:5241   */\n      0x1f\n        /* \"#utility.yul\":5234:5237   */\n      dup6\n        /* \"#utility.yul\":5230:5242   */\n      add\n        /* \"#utility.yul\":5227:5228   */\n      0x05\n        /* \"#utility.yul\":5223:5243   */\n      shr\n        /* \"#utility.yul\":5217:5221   */\n      dup3\n        /* \"#utility.yul\":5213:5244   */\n      add\n        /* \"#utility.yul\":5203:5244   */\n      swap2\n      pop\n        /* \"#utility.yul\":5294:5376   */\n    tag_214:\n        /* \"#utility.yul\":5312:5314   */\n      dup2\n        /* \"#utility.yul\":5305:5310   */\n      dup2\n        /* \"#utility.yul\":5302:5315   */\n      lt\n        /* \"#utility.yul\":5294:5376   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":5357:5374   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":5338:5339   */\n      0x01\n        /* \"#utility.yul\":5327:5340   */\n      add\n        /* \"#utility.yul\":5294:5376   */\n      jump(tag_214)\n    tag_216:\n        /* \"#utility.yul\":5298:5301   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4938:5386   */\n    tag_212:\n        /* \"#utility.yul\":4847:5392   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5568:6774   */\n    tag_149:\n        /* \"#utility.yul\":5692:5710   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5687:5690   */\n      dup4\n        /* \"#utility.yul\":5684:5711   */\n      gt\n        /* \"#utility.yul\":5681:5734   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":5714:5732   */\n      tag_220\n      tag_163\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5743:5837   */\n      tag_221\n        /* \"#utility.yul\":5833:5836   */\n      dup4\n        /* \"#utility.yul\":5793:5831   */\n      tag_222\n        /* \"#utility.yul\":5825:5829   */\n      dup4\n        /* \"#utility.yul\":5819:5830   */\n      sload\n        /* \"#utility.yul\":5793:5831   */\n      tag_76\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5787:5791   */\n      dup4\n        /* \"#utility.yul\":5743:5837   */\n      tag_165\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5863:5864   */\n      0x00\n        /* \"#utility.yul\":5888:5890   */\n      0x1f\n        /* \"#utility.yul\":5883:5886   */\n      dup5\n        /* \"#utility.yul\":5880:5891   */\n      gt\n        /* \"#utility.yul\":5905:5906   */\n      0x01\n        /* \"#utility.yul\":5900:6516   */\n      dup2\n      eq\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6577:6580   */\n      dup6\n        /* \"#utility.yul\":6574:6667   */\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"#utility.yul\":6633:6652   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6620:6653   */\n      calldataload\n        /* \"#utility.yul\":6574:6667   */\n    tag_225:\n      not(0x00)\n        /* \"#utility.yul\":5525:5526   */\n      0x03\n        /* \"#utility.yul\":5521:5532   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":5517:5541   */\n      shr\n        /* \"#utility.yul\":5513:5542   */\n      not\n        /* \"#utility.yul\":5503:5543   */\n      and\n        /* \"#utility.yul\":5549:5550   */\n      0x01\n        /* \"#utility.yul\":5545:5556   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":5500:5557   */\n      or\n        /* \"#utility.yul\":6680:6758   */\n      dup4\n      sstore\n        /* \"#utility.yul\":5873:6768   */\n      jump(tag_223)\n        /* \"#utility.yul\":5900:6516   */\n    tag_224:\n        /* \"#utility.yul\":4794:4795   */\n      0x00\n        /* \"#utility.yul\":4787:4801   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4831:4835   */\n      0x20\n        /* \"#utility.yul\":4818:4836   */\n      swap1\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":5936:5953   */\n      dup7\n      and\n      swap1\n        /* \"#utility.yul\":6037:6046   */\n      dup4\n        /* \"#utility.yul\":6059:6288   */\n    tag_228:\n        /* \"#utility.yul\":6073:6080   */\n      dup3\n        /* \"#utility.yul\":6070:6071   */\n      dup2\n        /* \"#utility.yul\":6067:6081   */\n      lt\n        /* \"#utility.yul\":6059:6288   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6162:6181   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":6149:6182   */\n      calldataload\n        /* \"#utility.yul\":6134:6183   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6269:6273   */\n      0x20\n        /* \"#utility.yul\":6254:6274   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":6222:6223   */\n      0x01\n        /* \"#utility.yul\":6210:6224   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":6089:6101   */\n      add\n        /* \"#utility.yul\":6059:6288   */\n      jump(tag_228)\n    tag_230:\n        /* \"#utility.yul\":6063:6066   */\n      pop\n        /* \"#utility.yul\":6316:6319   */\n      dup7\n        /* \"#utility.yul\":6307:6314   */\n      dup3\n        /* \"#utility.yul\":6304:6320   */\n      lt\n        /* \"#utility.yul\":6301:6460   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6436:6442   */\n      not\n        /* \"#utility.yul\":6430:6433   */\n      0xf8\n        /* \"#utility.yul\":6424:6427   */\n      dup9\n        /* \"#utility.yul\":6421:6422   */\n      0x03\n        /* \"#utility.yul\":6417:6428   */\n      shl\n        /* \"#utility.yul\":6413:6434   */\n      and\n        /* \"#utility.yul\":6409:6443   */\n      shr\n        /* \"#utility.yul\":6405:6444   */\n      not\n        /* \"#utility.yul\":6392:6401   */\n      dup5\n        /* \"#utility.yul\":6387:6390   */\n      dup8\n        /* \"#utility.yul\":6383:6402   */\n      add\n        /* \"#utility.yul\":6370:6403   */\n      calldataload\n        /* \"#utility.yul\":6366:6445   */\n      and\n        /* \"#utility.yul\":6358:6364   */\n      dup2\n        /* \"#utility.yul\":6351:6446   */\n      sstore\n        /* \"#utility.yul\":6301:6460   */\n    tag_231:\n      pop\n      pop\n        /* \"#utility.yul\":6503:6504   */\n      0x01\n        /* \"#utility.yul\":6497:6500   */\n      dup6\n        /* \"#utility.yul\":6494:6495   */\n      0x01\n        /* \"#utility.yul\":6490:6501   */\n      shl\n        /* \"#utility.yul\":6486:6505   */\n      add\n        /* \"#utility.yul\":6480:6484   */\n      dup4\n        /* \"#utility.yul\":6473:6506   */\n      sstore\n        /* \"#utility.yul\":5873:6768   */\n    tag_223:\n      pop\n      pop\n        /* \"#utility.yul\":5568:6774   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6779:7052   */\n    tag_151:\n        /* \"#utility.yul\":6964:6970   */\n      dup2\n        /* \"#utility.yul\":6956:6962   */\n      dup4\n        /* \"#utility.yul\":6951:6954   */\n      dup3\n        /* \"#utility.yul\":6938:6971   */\n      calldatacopy\n        /* \"#utility.yul\":6920:6923   */\n      0x00\n        /* \"#utility.yul\":6990:7006   */\n      swap2\n      add\n        /* \"#utility.yul\":7015:7028   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6990:7006   */\n      swap2\n        /* \"#utility.yul\":6779:7052   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122059e0ab9a9a4447af6874cb55ec5a657d39e1c3e922977ccf9d8c7dd65ceb58aa64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_165": {
									"entryPoint": null,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setDIAOracle_461": {
									"entryPoint": 223,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setFallbackOracle_478": {
									"entryPoint": 297,
									"id": 478,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:882:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:353:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "404:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:5"
															},
															"nodeType": "YulIf",
															"src": "355:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "417:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "476:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "531:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "544:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "599:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:49:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "632:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "643:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "628:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "622:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:25:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "656:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "676:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "687:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:19:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:26:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:5",
														"type": ""
													}
												],
												"src": "196:502:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "826:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "814:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "856:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "867:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "849:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "773:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "784:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "795:4:5",
														"type": ""
													}
												],
												"src": "703:177:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040526402540be40060c05234801561001957600080fd5b50604051610ecb380380610ecb8339810160408190526100389161018f565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610080856100df565b61008984610129565b60048190556001600160a01b038316608081905260a08390526040518381527fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c19060200160405180910390a250505050506101e5565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe9090600090a250565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b80516001600160a01b038116811461018a57600080fd5b919050565b600080600080600060a086880312156101a757600080fd5b6101b086610173565b94506101be60208701610173565b93506101cc60408701610173565b6060870151608090970151959894975095949392505050565b60805160a05160c051610ca26102296000396000818161020101526104b1015260008181610178015261035e01526000818161024e01526103250152610ca26000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638f32d59b11610097578063d5725f1c11610066578063d5725f1c14610223578063dece273f14610236578063e19f470014610249578063f8cdd0141461027057600080fd5b80638f32d59b146101ab57806392a1aebf146101c957806392bf2be0146101dc578063bd252281146101fc57600080fd5b80636210308c116100d35780636210308c1461013d57806385152e45146101625780638c89b64f146101735780638da5cb5b1461019a57600080fd5b80630fdb11cf146100fa578063170aee731461011557806357fc36141461012a575b600080fd5b610102610278565b6040519081526020015b60405180910390f35b610128610123366004610912565b610556565b005b610128610138366004610912565b610595565b6003546001600160a01b03165b6040516001600160a01b03909116815260200161010c565b6005546001600160a01b031661014a565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031661014a565b6000546001600160a01b03163314604051901515815260200161010c565b6101286101d7366004610912565b6105c8565b6101ef6101ea366004610912565b610691565b60405161010c9190610934565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b610128610231366004610982565b61073d565b610128610244366004610a05565b610833565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b600454610102565b6002546001600160a01b0316600081815260016020526040812080549192918391906102a390610a1e565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90610a1e565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610384577f00000000000000000000000000000000000000000000000000000000000000009250505090565b80516000036104025760035460405163b3596f0760e01b81526001600160a01b0384811660048301529091169063b3596f0790602401602060405180830381865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610a58565b9250505090565b6005546040516304b01c2560e51b815260009182916001600160a01b039091169063960384a090610437908690600401610934565b6040805180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610a88565b915091506000826001600160801b03161180156104a757506004546104a56001600160801b03831642610ad1565b105b156104e8576104df7f00000000000000000000000000000000000000000000000000000000000000006001600160801b038416610aea565b94505050505090565b60035460405163b3596f0760e01b81526001600160a01b0386811660048301529091169063b3596f0790602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190610a58565b6000546001600160a01b031633146105895760405162461bcd60e51b815260040161058090610b01565b60405180910390fd5b61059281610862565b50565b6000546001600160a01b031633146105bf5760405162461bcd60e51b815260040161058090610b01565b610592816108ac565b6000546001600160a01b031633146105f25760405162461bcd60e51b815260040161058090610b01565b6001600160a01b03811661063d5760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706172616d657465727360701b6044820152606401610580565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f58c18391fbfb633ee2f4d79e1c0c1d62597d97bc2c460d144c2583b13a2740e29060200160405180910390a150565b6001600160a01b03811660009081526001602052604090208054606091906106b890610a1e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e490610a1e565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b50505050509050919050565b6000546001600160a01b031633146107675760405162461bcd60e51b815260040161058090610b01565b6001600160a01b0383161580159061077e57508015155b6107bf5760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706172616d657465727360701b6044820152606401610580565b6001600160a01b03831660009081526001602052604090206107e2828483610b9b565b5081816040516107f3929190610c5c565b604051908190038120906001600160a01b038516907f1346085f9a075660968b9e1f053fbbcfa8642189a5f44875eea12a4c1e133b7e90600090a3505050565b6000546001600160a01b0316331461085d5760405162461bcd60e51b815260040161058090610b01565b600455565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe9090600090a250565b80356001600160a01b038116811461090d57600080fd5b919050565b60006020828403121561092457600080fd5b61092d826108f6565b9392505050565b600060208083528351808285015260005b8181101561096157858101830151858201604001528201610945565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060006040848603121561099757600080fd5b6109a0846108f6565b9250602084013567ffffffffffffffff808211156109bd57600080fd5b818601915086601f8301126109d157600080fd5b8135818111156109e057600080fd5b8760208285010111156109f257600080fd5b6020830194508093505050509250925092565b600060208284031215610a1757600080fd5b5035919050565b600181811c90821680610a3257607f821691505b602082108103610a5257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610a6a57600080fd5b5051919050565b80516001600160801b038116811461090d57600080fd5b60008060408385031215610a9b57600080fd5b610aa483610a71565b9150610ab260208401610a71565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610ae457610ae4610abb565b92915050565b8082028115828204841417610ae457610ae4610abb565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f821115610b9657600081815260208120601f850160051c81016020861015610b735750805b601f850160051c820191505b81811015610b9257828155600101610b7f565b5050505b505050565b67ffffffffffffffff831115610bb357610bb3610b36565b610bc783610bc18354610a1e565b83610b4c565b6000601f841160018114610bfb5760008515610be35750838201355b600019600387901b1c1916600186901b178355610c55565b600083815260209020601f19861690835b82811015610c2c5786850135825560209485019460019092019101610c0c565b5086821015610c495760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b818382376000910190815291905056fea264697066735822122059e0ab9a9a4447af6874cb55ec5a657d39e1c3e922977ccf9d8c7dd65ceb58aa64736f6c63430008140033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH5 0x2540BE400 PUSH1 0xC0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xECB CODESIZE SUB DUP1 PUSH2 0xECB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x38 SWAP2 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x80 DUP6 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x89 DUP5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP4 SWAP1 MSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xE27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x535B93D9E0BE2F8CF2BA1E1F1F8C174E03AA29676B42AAD916BC7190D29ABE90 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 DUP7 PUSH2 0x173 JUMP JUMPDEST SWAP5 POP PUSH2 0x1BE PUSH1 0x20 DUP8 ADD PUSH2 0x173 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CC PUSH1 0x40 DUP8 ADD PUSH2 0x173 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xCA2 PUSH2 0x229 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x201 ADD MSTORE PUSH2 0x4B1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x178 ADD MSTORE PUSH2 0x35E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x24E ADD MSTORE PUSH2 0x325 ADD MSTORE PUSH2 0xCA2 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5725F1C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5725F1C EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xDECE273F EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xF8CDD014 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x92A1AEBF EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xBD252281 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6210308C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x85152E45 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB11CF EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x170AEE73 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x57FC3614 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A JUMP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x128 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2A3 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CF SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x384 JUMPI PUSH32 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x402 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4B01C25 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x960384A0 SWAP1 PUSH2 0x437 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT DUP1 ISZERO PUSH2 0x4A7 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x4A5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND TIMESTAMP PUSH2 0xAD1 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4DF PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0xAEA JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x862 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706172616D6574657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x58C18391FBFB633EE2F4D79E1C0C1D62597D97BC2C460D144C2583B13A2740E2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x6B8 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E4 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x706 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x731 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x714 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x77E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706172616D6574657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7E2 DUP3 DUP5 DUP4 PUSH2 0xB9B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7F3 SWAP3 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1346085F9A075660968B9E1F053FBBCFA8642189A5F44875EEA12A4C1E133B7E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x535B93D9E0BE2F8CF2BA1E1F1F8C174E03AA29676B42AAD916BC7190D29ABE90 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92D DUP3 PUSH2 0x8F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x945 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 DUP5 PUSH2 0x8F6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA4 DUP4 PUSH2 0xA71 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB2 PUSH1 0x20 DUP5 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0xABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB73 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB92 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB7F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0xBC7 DUP4 PUSH2 0xBC1 DUP4 SLOAD PUSH2 0xA1E JUMP JUMPDEST DUP4 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBFB JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0xBE3 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC2C JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC0C JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xE0 0xAB SWAP11 SWAP11 PREVRANDAO SELFBALANCE 0xAF PUSH9 0x74CB55EC5A657D39E1 0xC3 0xE9 0x22 SWAP8 PUSH29 0xCF9D8C7DD65CEB58AA64736F6C63430008140033000000000000000000 ",
							"sourceMap": "704:5086:4:-:0;;;1341:11;1296:56;;1906:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;829:6:1;:19;;-1:-1:-1;;;;;;829:19:1;838:10;829:19;;;;;863:44;;838:10;;829:6;863:44;;829:6;;863:44;2070:31:4;2084:16;2070:13;:31::i;:::-;2107:34;2126:14;2107:18;:34::i;:::-;2147:16;:32;;;-1:-1:-1;;;;;2185:28:4;;;;;;2219:37;;;;2267:47;;849:25:5;;;2267:47:4;;837:2:5;822:18;2267:47:4;;;;;;;1906:413;;;;;704:5086;;3825:153;3893:3;:35;;-1:-1:-1;;;;;;3893:35:4;-1:-1:-1;;;;;3893:35:4;;;;;;;;3939:34;;;;-1:-1:-1;;3939:34:4;3825:153;:::o;4102:172::-;4169:15;:52;;-1:-1:-1;;;;;;4169:52:4;-1:-1:-1;;;;;4169:52:4;;;;;;;;4232:37;;;;-1:-1:-1;;4232:37:4;4102:172;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;643:2;628:18;;622:25;687:3;672:19;;;666:26;196:502;;;;-1:-1:-1;544:59:5;622:25;666:26;196:502;-1:-1:-1;;;196:502:5:o;703:177::-;704:5086:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_CURRENCY_287": {
									"entryPoint": null,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_CURRENCY_UNIT_289": {
									"entryPoint": null,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CONVERSION_FACTOR_292": {
									"entryPoint": null,
									"id": 292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setDIAOracle_461": {
									"entryPoint": 2220,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setFallbackOracle_478": {
									"entryPoint": 2146,
									"id": 478,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fetchPrice_551": {
									"entryPoint": 632,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFallbackOracle_591": {
									"entryPoint": null,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMasterOracle_579": {
									"entryPoint": null,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxPriceAgeLimit_600": {
									"entryPoint": null,
									"id": 600,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSourceOfAsset_567": {
									"entryPoint": 1681,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOwner_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setAssetKey_378": {
									"entryPoint": 1853,
									"id": 378,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setDIAOracle_418": {
									"entryPoint": 1429,
									"id": 418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFallbackOracle_431": {
									"entryPoint": 1366,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxPriceAgeLimit_444": {
									"entryPoint": 2099,
									"id": 444,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setwEthAddress_405": {
									"entryPoint": 1480,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_calldata_ptr": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint128t_uint128_fromMemory": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7054:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "347:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "356:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "359:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "332:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "337:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "341:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "296:50:5"
															},
															"nodeType": "YulIf",
															"src": "293:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "224:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "235:5:5",
														"type": ""
													}
												],
												"src": "196:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "490:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "486:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:32:5"
															},
															"nodeType": "YulIf",
															"src": "454:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "515:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "410:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "421:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "433:6:5",
														"type": ""
													}
												],
												"src": "374:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "688:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "699:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "684:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "676:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "749:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "754:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "745:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "745:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "711:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "635:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "646:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "657:4:5",
														"type": ""
													}
												],
												"src": "565:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "868:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "878:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "878:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "945:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "938:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "938:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "931:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "913:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "837:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "848:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "859:4:5",
														"type": ""
													}
												],
												"src": "773:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1086:427:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1096:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1106:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1100:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1124:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1135:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1117:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1147:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1167:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1151:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1194:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1190:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1226:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1235:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1230:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1295:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1324:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1335:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1320:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1320:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1339:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1316:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1316:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1358:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1366:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1354:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1354:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1370:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1350:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1350:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1344:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1344:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1309:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1309:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1309:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1256:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1253:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1267:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1269:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1278:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1281:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1274:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1274:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1269:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1249:3:5",
																"statements": []
															},
															"src": "1245:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1409:9:5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1420:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:22:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1429:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:31:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1394:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1445:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1461:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1480:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1488:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1476:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1476:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1497:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1493:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1493:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1472:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1472:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1457:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1504:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1445:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1055:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1066:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1077:4:5",
														"type": ""
													}
												],
												"src": "965:548:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1625:559:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1671:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1680:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1673:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1673:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1673:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1655:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1642:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:32:5"
															},
															"nodeType": "YulIf",
															"src": "1635:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1725:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1706:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1744:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1775:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1786:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1771:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1758:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1748:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1799:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1809:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1803:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1854:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1863:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1866:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1839:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:14:5"
															},
															"nodeType": "YulIf",
															"src": "1836:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1879:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1893:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1889:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1883:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1961:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1942:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1934:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1934:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1930:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1930:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1923:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:35:5"
															},
															"nodeType": "YulIf",
															"src": "1920:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1984:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2011:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1988:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2041:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2050:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2053:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2043:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2043:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2043:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2029:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2037:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2026:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:14:5"
															},
															"nodeType": "YulIf",
															"src": "2023:34:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2107:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2119:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2109:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2109:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2109:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2080:2:5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2084:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2076:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2076:15:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2093:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2072:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2072:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2098:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2069:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:37:5"
															},
															"nodeType": "YulIf",
															"src": "2066:57:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2146:2:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:11:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:16:5",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2172:6:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1575:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1586:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1598:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1606:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1614:6:5",
														"type": ""
													}
												],
												"src": "1518:666:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2305:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2314:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2317:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2307:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2307:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2307:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2280:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2289:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2272:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:32:5"
															},
															"nodeType": "YulIf",
															"src": "2269:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2330:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2225:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2236:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2248:6:5",
														"type": ""
													}
												],
												"src": "2189:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2439:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2456:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2470:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2500:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2474:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2547:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2549:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2563:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2571:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2559:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2559:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2549:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2527:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:26:5"
															},
															"nodeType": "YulIf",
															"src": "2517:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2637:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2665:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2670:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2661:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2661:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2651:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2651:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2651:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2705:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2695:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2695:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2695:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2723:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2593:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2616:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2624:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2613:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2590:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:38:5"
															},
															"nodeType": "YulIf",
															"src": "2587:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2409:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2418:6:5",
														"type": ""
													}
												],
												"src": "2374:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2840:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2886:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2895:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2898:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2888:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2888:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2888:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2861:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2870:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2853:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2853:32:5"
															},
															"nodeType": "YulIf",
															"src": "2850:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2911:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2927:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2921:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2806:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2817:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2829:6:5",
														"type": ""
													}
												],
												"src": "2759:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3008:132:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3018:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3033:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3027:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3018:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3118:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3120:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3120:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3062:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3073:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3080:34:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3069:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3069:46:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3059:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:57:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:65:5"
															},
															"nodeType": "YulIf",
															"src": "3049:85:5"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2987:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2998:5:5",
														"type": ""
													}
												],
												"src": "2948:192:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:195:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3289:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3298:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3301:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3291:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:32:5"
															},
															"nodeType": "YulIf",
															"src": "3253:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3314:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3324:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3373:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3417:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3428:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3413:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3383:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3373:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3201:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3212:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3224:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3232:6:5",
														"type": ""
													}
												],
												"src": "3145:293:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3475:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3492:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3504:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3495:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3485:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3532:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3525:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3556:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3559:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3549:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3443:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3624:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3634:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3646:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3649:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3642:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3634:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3675:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3677:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3677:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3677:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3666:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3672:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3663:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:11:5"
															},
															"nodeType": "YulIf",
															"src": "3660:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3606:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3609:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3615:4:5",
														"type": ""
													}
												],
												"src": "3575:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3760:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3770:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3785:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3788:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3781:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3770:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3848:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3850:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3850:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3850:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3819:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3812:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3812:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3826:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3833:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3842:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3829:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3829:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3823:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3823:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3809:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:45:5"
															},
															"nodeType": "YulIf",
															"src": "3799:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3739:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3742:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3748:7:5",
														"type": ""
													}
												],
												"src": "3708:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4072:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4083:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4065:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4065:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4095:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4156:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4141:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4161:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4205:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4217:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4228:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4032:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4046:4:5",
														"type": ""
													}
												],
												"src": "3881:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4416:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4433:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4444:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4426:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4478:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4463:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4483:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4506:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4517:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:18:5"
																	},
																	{
																		"hexValue": "496e76616c696420706172616d6574657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4522:20:5",
																		"type": "",
																		"value": "Invalid parameters"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4495:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4552:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4564:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4552:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4393:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4407:4:5",
														"type": ""
													}
												],
												"src": "4242:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4621:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4638:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4645:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4650:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4641:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4671:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4671:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4589:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4777:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4797:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4810:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4818:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4810:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4760:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4768:4:5",
														"type": ""
													}
												],
												"src": "4721:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4928:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4961:425:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4975:11:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4985:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "4979:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5006:2:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5010:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4999:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4999:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4999:17:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5029:31:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5051:2:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5041:19:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "5033:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5073:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5096:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5106:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "5113:10:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5125:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5109:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5109:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5102:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5102:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5092:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5077:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5167:23:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5169:19:5",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "5184:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "5169:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "5149:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5161:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5146:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:20:5"
																		},
																		"nodeType": "YulIf",
																		"src": "5143:47:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5203:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5217:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5227:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5234:3:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5239:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5230:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5230:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5223:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5223:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5213:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5213:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "5207:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5257:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "5270:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "5261:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5355:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5364:5:5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "5371:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "5357:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5357:17:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5357:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5305:5:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5312:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5302:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:13:5"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "5316:26:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5318:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5331:5:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5338:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5327:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5327:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "5318:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "5298:3:5",
																			"statements": []
																		},
																		"src": "5294:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4941:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:11:5"
															},
															"nodeType": "YulIf",
															"src": "4938:448:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4900:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4907:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4912:10:5",
														"type": ""
													}
												],
												"src": "4847:545:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5482:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5492:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "5507:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5525:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "5528:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5521:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5521:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5538:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "5534:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5534:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5517:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5517:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5513:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5513:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5549:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5552:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5545:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5545:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5500:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5492:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5465:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5473:4:5",
														"type": ""
													}
												],
												"src": "5397:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5671:1103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5712:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5714:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5714:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5714:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5687:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5684:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:27:5"
															},
															"nodeType": "YulIf",
															"src": "5681:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5787:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5825:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5819:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5819:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "5793:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5793:38:5"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5833:3:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5743:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:94:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:94:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5846:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5863:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5850:9:5",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5907:609:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5921:32:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "5940:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5949:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5945:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5945:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5936:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5936:17:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5925:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5966:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6010:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5980:29:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5980:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5970:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6028:18:5",
																				"value": {
																					"name": "srcOffset",
																					"nodeType": "YulIdentifier",
																					"src": "6037:9:5"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6032:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6116:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6166:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6171:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6162:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6162:19:5"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nodeType": "YulIdentifier",
																											"src": "6149:12:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6149:33:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6134:49:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:49:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6200:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6214:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6222:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6210:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6210:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6200:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6241:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6258:9:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6269:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6254:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6254:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6241:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6070:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6073:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6067:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6067:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6082:21:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6084:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6093:1:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6096:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6089:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6089:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6084:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6063:3:5",
																					"statements": []
																				},
																				"src": "6059:229:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6333:127:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6358:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nodeType": "YulIdentifier",
																																"src": "6387:3:5"
																															},
																															{
																																"name": "srcOffset",
																																"nodeType": "YulIdentifier",
																																"src": "6392:9:5"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nodeType": "YulIdentifier",
																															"src": "6383:3:5"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "6383:19:5"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nodeType": "YulIdentifier",
																													"src": "6370:12:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6370:33:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "6421:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nodeType": "YulIdentifier",
																																				"src": "6424:3:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "6417:3:5"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "6417:11:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "6430:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "6413:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "6413:21:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "6440:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "6436:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "6436:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "6409:3:5"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "6409:34:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "6405:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6405:39:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "6366:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6366:79:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6351:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6351:95:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6351:95:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6307:7:5"
																						},
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "6316:3:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6304:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6304:16:5"
																				},
																				"nodeType": "YulIf",
																				"src": "6301:159:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6480:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6494:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nodeType": "YulIdentifier",
																											"src": "6497:3:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6490:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6490:11:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6503:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6486:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6486:19:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6473:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6473:33:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6473:33:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5900:616:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6533:235:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6547:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6560:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6551:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6593:74:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6611:42:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6637:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6642:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6633:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6633:19:5"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nodeType": "YulIdentifier",
																									"src": "6620:12:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6620:33:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6611:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nodeType": "YulIdentifier",
																					"src": "6577:3:5"
																				},
																				"nodeType": "YulIf",
																				"src": "6574:93:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6687:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6746:5:5"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6753:3:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6693:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6693:64:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6680:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6680:78:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6680:78:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6525:243:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5883:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5888:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5880:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:11:5"
															},
															"nodeType": "YulSwitch",
															"src": "5873:895:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5651:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5657:3:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5662:3:5",
														"type": ""
													}
												],
												"src": "5568:1206:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6928:124:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6951:3:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6956:6:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6964:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6938:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6938:33:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6980:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6994:3:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6999:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:16:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6984:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7022:2:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7026:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:13:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:13:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7037:9:5",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "7044:2:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7037:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6896:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6909:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6920:3:5",
														"type": ""
													}
												],
												"src": "6779:273:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint128_fromMemory(headStart)\n        value1 := abi_decode_uint128_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid parameters\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"287": [
									{
										"length": 32,
										"start": 590
									},
									{
										"length": 32,
										"start": 805
									}
								],
								"289": [
									{
										"length": 32,
										"start": 376
									},
									{
										"length": 32,
										"start": 862
									}
								],
								"292": [
									{
										"length": 32,
										"start": 513
									},
									{
										"length": 32,
										"start": 1201
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80638f32d59b11610097578063d5725f1c11610066578063d5725f1c14610223578063dece273f14610236578063e19f470014610249578063f8cdd0141461027057600080fd5b80638f32d59b146101ab57806392a1aebf146101c957806392bf2be0146101dc578063bd252281146101fc57600080fd5b80636210308c116100d35780636210308c1461013d57806385152e45146101625780638c89b64f146101735780638da5cb5b1461019a57600080fd5b80630fdb11cf146100fa578063170aee731461011557806357fc36141461012a575b600080fd5b610102610278565b6040519081526020015b60405180910390f35b610128610123366004610912565b610556565b005b610128610138366004610912565b610595565b6003546001600160a01b03165b6040516001600160a01b03909116815260200161010c565b6005546001600160a01b031661014a565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031661014a565b6000546001600160a01b03163314604051901515815260200161010c565b6101286101d7366004610912565b6105c8565b6101ef6101ea366004610912565b610691565b60405161010c9190610934565b6101027f000000000000000000000000000000000000000000000000000000000000000081565b610128610231366004610982565b61073d565b610128610244366004610a05565b610833565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b600454610102565b6002546001600160a01b0316600081815260016020526040812080549192918391906102a390610a1e565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90610a1e565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610384577f00000000000000000000000000000000000000000000000000000000000000009250505090565b80516000036104025760035460405163b3596f0760e01b81526001600160a01b0384811660048301529091169063b3596f0790602401602060405180830381865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610a58565b9250505090565b6005546040516304b01c2560e51b815260009182916001600160a01b039091169063960384a090610437908690600401610934565b6040805180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610a88565b915091506000826001600160801b03161180156104a757506004546104a56001600160801b03831642610ad1565b105b156104e8576104df7f00000000000000000000000000000000000000000000000000000000000000006001600160801b038416610aea565b94505050505090565b60035460405163b3596f0760e01b81526001600160a01b0386811660048301529091169063b3596f0790602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190610a58565b6000546001600160a01b031633146105895760405162461bcd60e51b815260040161058090610b01565b60405180910390fd5b61059281610862565b50565b6000546001600160a01b031633146105bf5760405162461bcd60e51b815260040161058090610b01565b610592816108ac565b6000546001600160a01b031633146105f25760405162461bcd60e51b815260040161058090610b01565b6001600160a01b03811661063d5760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706172616d657465727360701b6044820152606401610580565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f58c18391fbfb633ee2f4d79e1c0c1d62597d97bc2c460d144c2583b13a2740e29060200160405180910390a150565b6001600160a01b03811660009081526001602052604090208054606091906106b890610a1e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e490610a1e565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b50505050509050919050565b6000546001600160a01b031633146107675760405162461bcd60e51b815260040161058090610b01565b6001600160a01b0383161580159061077e57508015155b6107bf5760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706172616d657465727360701b6044820152606401610580565b6001600160a01b03831660009081526001602052604090206107e2828483610b9b565b5081816040516107f3929190610c5c565b604051908190038120906001600160a01b038516907f1346085f9a075660968b9e1f053fbbcfa8642189a5f44875eea12a4c1e133b7e90600090a3505050565b6000546001600160a01b0316331461085d5760405162461bcd60e51b815260040161058090610b01565b600455565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe9090600090a250565b80356001600160a01b038116811461090d57600080fd5b919050565b60006020828403121561092457600080fd5b61092d826108f6565b9392505050565b600060208083528351808285015260005b8181101561096157858101830151858201604001528201610945565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060006040848603121561099757600080fd5b6109a0846108f6565b9250602084013567ffffffffffffffff808211156109bd57600080fd5b818601915086601f8301126109d157600080fd5b8135818111156109e057600080fd5b8760208285010111156109f257600080fd5b6020830194508093505050509250925092565b600060208284031215610a1757600080fd5b5035919050565b600181811c90821680610a3257607f821691505b602082108103610a5257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610a6a57600080fd5b5051919050565b80516001600160801b038116811461090d57600080fd5b60008060408385031215610a9b57600080fd5b610aa483610a71565b9150610ab260208401610a71565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610ae457610ae4610abb565b92915050565b8082028115828204841417610ae457610ae4610abb565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f821115610b9657600081815260208120601f850160051c81016020861015610b735750805b601f850160051c820191505b81811015610b9257828155600101610b7f565b5050505b505050565b67ffffffffffffffff831115610bb357610bb3610b36565b610bc783610bc18354610a1e565b83610b4c565b6000601f841160018114610bfb5760008515610be35750838201355b600019600387901b1c1916600186901b178355610c55565b600083815260209020601f19861690835b82811015610c2c5786850135825560209485019460019092019101610c0c565b5086821015610c495760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b818382376000910190815291905056fea264697066735822122059e0ab9a9a4447af6874cb55ec5a657d39e1c3e922977ccf9d8c7dd65ceb58aa64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5725F1C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5725F1C EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xDECE273F EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xE19F4700 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xF8CDD014 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x92A1AEBF EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xBD252281 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6210308C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x85152E45 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x8C89B64F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFDB11CF EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x170AEE73 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x57FC3614 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A JUMP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x128 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2A3 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CF SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x384 JUMPI PUSH32 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x402 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4B01C25 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x960384A0 SWAP1 PUSH2 0x437 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT DUP1 ISZERO PUSH2 0x4A7 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x4A5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND TIMESTAMP PUSH2 0xAD1 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4DF PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0xAEA JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x862 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706172616D6574657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x58C18391FBFB633EE2F4D79E1C0C1D62597D97BC2C460D144C2583B13A2740E2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x6B8 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E4 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x706 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x731 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x714 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x77E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706172616D6574657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7E2 DUP3 DUP5 DUP4 PUSH2 0xB9B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7F3 SWAP3 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1346085F9A075660968B9E1F053FBBCFA8642189A5F44875EEA12A4C1E133B7E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x535B93D9E0BE2F8CF2BA1E1F1F8C174E03AA29676B42AAD916BC7190D29ABE90 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92D DUP3 PUSH2 0x8F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x945 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 DUP5 PUSH2 0x8F6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA4 DUP4 PUSH2 0xA71 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB2 PUSH1 0x20 DUP5 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0xABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB73 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB92 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB7F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0xBC7 DUP4 PUSH2 0xBC1 DUP4 SLOAD PUSH2 0xA1E JUMP JUMPDEST DUP4 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBFB JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0xBE3 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC2C JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC0C JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xE0 0xAB SWAP11 SWAP11 PREVRANDAO SELFBALANCE 0xAF PUSH9 0x74CB55EC5A657D39E1 0xC3 0xE9 0x22 SWAP8 PUSH29 0xCF9D8C7DD65CEB58AA64736F6C63430008140033000000000000000000 ",
							"sourceMap": "704:5086:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4308:588;;;:::i;:::-;;;160:25:5;;;148:2;133:18;4308:588:4;;;;;;;;3299:115;;;;;;:::i;:::-;;:::i;:::-;;3086:109;;;;;;:::i;:::-;;:::i;5445:103::-;5527:15;;-1:-1:-1;;;;;5527:15:4;5445:103;;;-1:-1:-1;;;;;729:32:5;;;711:51;;699:2;684:18;5445:103:4;565:203:5;5242:89:4;5322:3;;-1:-1:-1;;;;;5322:3:4;5242:89;;1249:43;;;;;990:77:1;1028:7;1054:6;-1:-1:-1;;;;;1054:6:1;990:77;;1341:90;1381:4;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1341:90;;938:14:5;;931:22;913:41;;901:2;886:18;1341:90:1;773:187:5;2799:185:4;;;;;;:::i;:::-;;:::i;5013:122::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1296:56::-;;;;;2557:236;;;;;;:::i;:::-;;:::i;3567:104::-;;;;;;:::i;:::-;;:::i;1205:38::-;;;;;5691:97;5767:16;;5691:97;;4308:588;4384:11;;-1:-1:-1;;;;;4384:11:4;4353:7;4421:17;;;4384:11;4421:17;;;;;4401:37;;4353:7;;4384:11;4353:7;;4421:17;4401:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4458:13;-1:-1:-1;;;;;4449:22:4;:5;-1:-1:-1;;;;;4449:22:4;;4445:447;;4488:18;4481:25;;;;4308:588;:::o;4445:447::-;4529:3;4523:17;4544:1;4523:22;4519:373;;4566:15;;:36;;-1:-1:-1;;;4566:36:4;;-1:-1:-1;;;;;729:32:5;;;4566:36:4;;;711:51:5;4566:15:4;;;;:29;;684:18:5;;4566:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4559:43;;;;4308:588;:::o;4519:373::-;4660:3;;:17;;-1:-1:-1;;;4660:17:4;;4624:13;;;;-1:-1:-1;;;;;4660:3:4;;;;:12;;:17;;4673:3;;4660:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4623:54;;;;4703:1;4695:5;-1:-1:-1;;;;;4695:9:4;;:61;;;;-1:-1:-1;4740:16:4;;4709:27;-1:-1:-1;;;;;4709:27:4;;:15;:27;:::i;:::-;4708:48;4695:61;4691:195;;;4775:34;4792:17;-1:-1:-1;;;;;4775:14:4;;:34;:::i;:::-;4768:41;;;;;;4308:588;:::o;4691:195::-;4841:15;;:36;;-1:-1:-1;;;4841:36:4;;-1:-1:-1;;;;;729:32:5;;;4841:36:4;;;711:51:5;4841:15:4;;;;:29;;684:18:5;;4841:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3299:115::-;1381:4:1;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1186:54;;;;-1:-1:-1;;;1186:54:1;;;;;;;:::i;:::-;;;;;;;;;3375:34:4::1;3394:14;3375:18;:34::i;:::-;3299:115:::0;:::o;3086:109::-;1381:4:1;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1186:54;;;;-1:-1:-1;;;1186:54:1;;;;;;;:::i;:::-;3159:31:4::1;3173:16;3159:13;:31::i;2799:185::-:0;1381:4:1;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1186:54;;;;-1:-1:-1;;;1186:54:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2872:19:4;::::1;2863:52;;;::::0;-1:-1:-1;;;2863:52:4;;4444:2:5;2863:52:4::1;::::0;::::1;4426:21:5::0;4483:2;4463:18;;;4456:30;-1:-1:-1;;;4502:18:5;;;4495:48;4560:18;;2863:52:4::1;4242:342:5::0;2863:52:4::1;2923:11;:19:::0;;-1:-1:-1;;;;;;2923:19:4::1;-1:-1:-1::0;;;;;2923:19:4;::::1;::::0;;::::1;::::0;;;2955:24:::1;::::0;711:51:5;;;2955:24:4::1;::::0;699:2:5;684:18;2955:24:4::1;;;;;;;2799:185:::0;:::o;5013:122::-;-1:-1:-1;;;;;5112:17:4;;;;;;:10;:17;;;;;5098:32;;5077:13;;5112:17;5098:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5013:122;;;:::o;2557:236::-;1381:4:1;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1186:54;;;;-1:-1:-1;;;1186:54:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2648:19:4;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;2671:22:4;;::::1;2648:45;2639:78;;;::::0;-1:-1:-1;;;2639:78:4;;4444:2:5;2639:78:4::1;::::0;::::1;4426:21:5::0;4483:2;4463:18;;;4456:30;-1:-1:-1;;;4502:18:5;;;4495:48;4560:18;;2639:78:4::1;4242:342:5::0;2639:78:4::1;-1:-1:-1::0;;;;;2725:17:4;::::1;;::::0;;;:10:::1;:17;::::0;;;;:23:::1;2745:3:::0;;2725:17;:23:::1;:::i;:::-;;2784:3;;2761:27;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;2761:27:4;::::1;::::0;::::1;::::0;;;::::1;2557:236:::0;;;:::o;3567:104::-;1381:4:1;1418:6;-1:-1:-1;;;;;1418:6:1;1404:10;:20;1186:54;;;;-1:-1:-1;;;1186:54:1;;;;;;;:::i;:::-;3639:16:4::1;:27:::0;3567:104::o;4102:172::-;4169:15;:52;;-1:-1:-1;;;;;;4169:52:4;-1:-1:-1;;;;;4169:52:4;;;;;;;;4232:37;;;;-1:-1:-1;;4232:37:4;4102:172;:::o;3825:153::-;3893:3;:35;;-1:-1:-1;;;;;;3893:35:4;-1:-1:-1;;;;;3893:35:4;;;;;;;;3939:34;;;;-1:-1:-1;;3939:34:4;3825:153;:::o;196:173:5:-;264:20;;-1:-1:-1;;;;;313:31:5;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:5:o;965:548::-;1077:4;1106:2;1135;1124:9;1117:21;1167:6;1161:13;1210:6;1205:2;1194:9;1190:18;1183:34;1235:1;1245:140;1259:6;1256:1;1253:13;1245:140;;;1354:14;;;1350:23;;1344:30;1320:17;;;1339:2;1316:26;1309:66;1274:10;;1245:140;;;1249:3;1434:1;1429:2;1420:6;1409:9;1405:22;1401:31;1394:42;1504:2;1497;1493:7;1488:2;1480:6;1476:15;1472:29;1461:9;1457:45;1453:54;1445:62;;;;965:548;;;;:::o;1518:666::-;1598:6;1606;1614;1667:2;1655:9;1646:7;1642:23;1638:32;1635:52;;;1683:1;1680;1673:12;1635:52;1706:29;1725:9;1706:29;:::i;:::-;1696:39;;1786:2;1775:9;1771:18;1758:32;1809:18;1850:2;1842:6;1839:14;1836:34;;;1866:1;1863;1856:12;1836:34;1904:6;1893:9;1889:22;1879:32;;1949:7;1942:4;1938:2;1934:13;1930:27;1920:55;;1971:1;1968;1961:12;1920:55;2011:2;1998:16;2037:2;2029:6;2026:14;2023:34;;;2053:1;2050;2043:12;2023:34;2098:7;2093:2;2084:6;2080:2;2076:15;2072:24;2069:37;2066:57;;;2119:1;2116;2109:12;2066:57;2150:2;2146;2142:11;2132:21;;2172:6;2162:16;;;;;1518:666;;;;;:::o;2189:180::-;2248:6;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;-1:-1:-1;2340:23:5;;2189:180;-1:-1:-1;2189:180:5:o;2374:380::-;2453:1;2449:12;;;;2496;;;2517:61;;2571:4;2563:6;2559:17;2549:27;;2517:61;2624:2;2616:6;2613:14;2593:18;2590:38;2587:161;;2670:10;2665:3;2661:20;2658:1;2651:31;2705:4;2702:1;2695:15;2733:4;2730:1;2723:15;2587:161;;2374:380;;;:::o;2759:184::-;2829:6;2882:2;2870:9;2861:7;2857:23;2853:32;2850:52;;;2898:1;2895;2888:12;2850:52;-1:-1:-1;2921:16:5;;2759:184;-1:-1:-1;2759:184:5:o;2948:192::-;3027:13;;-1:-1:-1;;;;;3069:46:5;;3059:57;;3049:85;;3130:1;3127;3120:12;3145:293;3224:6;3232;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;3324:40;3354:9;3324:40;:::i;:::-;3314:50;;3383:49;3428:2;3417:9;3413:18;3383:49;:::i;:::-;3373:59;;3145:293;;;;;:::o;3443:127::-;3504:10;3499:3;3495:20;3492:1;3485:31;3535:4;3532:1;3525:15;3559:4;3556:1;3549:15;3575:128;3642:9;;;3663:11;;;3660:37;;;3677:18;;:::i;:::-;3575:128;;;;:::o;3708:168::-;3781:9;;;3812;;3829:15;;;3823:22;;3809:37;3799:71;;3850:18;;:::i;3881:356::-;4083:2;4065:21;;;4102:18;;;4095:30;4161:34;4156:2;4141:18;;4134:62;4228:2;4213:18;;3881:356::o;4589:127::-;4650:10;4645:3;4641:20;4638:1;4631:31;4681:4;4678:1;4671:15;4705:4;4702:1;4695:15;4847:545;4949:2;4944:3;4941:11;4938:448;;;4985:1;5010:5;5006:2;4999:17;5055:4;5051:2;5041:19;5125:2;5113:10;5109:19;5106:1;5102:27;5096:4;5092:38;5161:4;5149:10;5146:20;5143:47;;;-1:-1:-1;5184:4:5;5143:47;5239:2;5234:3;5230:12;5227:1;5223:20;5217:4;5213:31;5203:41;;5294:82;5312:2;5305:5;5302:13;5294:82;;;5357:17;;;5338:1;5327:13;5294:82;;;5298:3;;;4938:448;4847:545;;;:::o;5568:1206::-;5692:18;5687:3;5684:27;5681:53;;;5714:18;;:::i;:::-;5743:94;5833:3;5793:38;5825:4;5819:11;5793:38;:::i;:::-;5787:4;5743:94;:::i;:::-;5863:1;5888:2;5883:3;5880:11;5905:1;5900:616;;;;6560:1;6577:3;6574:93;;;-1:-1:-1;6633:19:5;;;6620:33;6574:93;-1:-1:-1;;5525:1:5;5521:11;;;5517:24;5513:29;5503:40;5549:1;5545:11;;;5500:57;6680:78;;5873:895;;5900:616;4794:1;4787:14;;;4831:4;4818:18;;-1:-1:-1;;5936:17:5;;;6037:9;6059:229;6073:7;6070:1;6067:14;6059:229;;;6162:19;;;6149:33;6134:49;;6269:4;6254:20;;;;6222:1;6210:14;;;;6089:12;6059:229;;;6063:3;6316;6307:7;6304:16;6301:159;;;6440:1;6436:6;6430:3;6424;6421:1;6417:11;6413:21;6409:34;6405:39;6392:9;6387:3;6383:19;6370:33;6366:79;6358:6;6351:95;6301:159;;;6503:1;6497:3;6494:1;6490:11;6486:19;6480:4;6473:33;5873:895;;;5568:1206;;;:::o;6779:273::-;6964:6;6956;6951:3;6938:33;6920:3;6990:16;;7015:13;;;6990:16;6779:273;-1:-1:-1;6779:273:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "646800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASE_CURRENCY()": "infinite",
								"BASE_CURRENCY_UNIT()": "infinite",
								"CONVERSION_FACTOR()": "infinite",
								"fetchPrice()": "infinite",
								"getFallbackOracle()": "2343",
								"getMasterOracle()": "2376",
								"getMaxPriceAgeLimit()": "2369",
								"getSourceOfAsset(address)": "infinite",
								"isOwner()": "2332",
								"owner()": "2420",
								"setAssetKey(address,string)": "infinite",
								"setDIAOracle(address)": "27947",
								"setFallbackOracle(address)": "27925",
								"setMaxPriceAgeLimit(uint256)": "24508",
								"setwEthAddress(address)": "27844"
							},
							"internal": {
								"_setDIAOracle(address)": "25426",
								"_setFallbackOracle(address)": "25426"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1352,
									"name": "PUSH",
									"source": 4,
									"value": "2540BE400"
								},
								{
									"begin": 1296,
									"end": 1352,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 1296,
									"end": 1352,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1906,
									"end": 2319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 829,
									"end": 835,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 829,
									"end": 848,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 907,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 838,
									"end": 848,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 863,
									"end": 907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 829,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 863,
									"end": 907,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2084,
									"end": 2100,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2083,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2070,
									"end": 2101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2126,
									"end": 2140,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2107,
									"end": 2141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 2141,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2107,
									"end": 2141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2147,
									"end": 2163,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2147,
									"end": 2179,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2147,
									"end": 2179,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2147,
									"end": 2179,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 2213,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2256,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 2219,
									"end": 2256,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2256,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2256,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 849,
									"end": 874,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 849,
									"end": 874,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 849,
									"end": 874,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "E27C4C1372396A3D15A9922F74F9DFC7C72B1AD6D63868470787249C356454C1"
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 837,
									"end": 839,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 822,
									"end": 840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2267,
									"end": 2314,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3978,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3825,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3896,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3928,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3939,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3939,
									"end": 3973,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3939,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "535B93D9E0BE2F8CF2BA1E1F1F8C174E03AA29676B42AAD916BC7190D29ABE90"
								},
								{
									"begin": 3939,
									"end": 3973,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3939,
									"end": 3973,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3978,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4102,
									"end": 4274,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4102,
									"end": 4274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4184,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4169,
									"end": 4221,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4232,
									"end": 4269,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4232,
									"end": 4269,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4232,
									"end": 4269,
									"name": "PUSH",
									"source": 4,
									"value": "CE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB"
								},
								{
									"begin": 4232,
									"end": 4269,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 4232,
									"end": 4269,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 4102,
									"end": 4274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4102,
									"end": 4274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 643,
									"end": 645,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 628,
									"end": 646,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 622,
									"end": 647,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 687,
									"end": 690,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 672,
									"end": 691,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 691,
									"name": "SWAP8",
									"source": 5
								},
								{
									"begin": 672,
									"end": 691,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 666,
									"end": 692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP9",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 622,
									"end": 647,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 666,
									"end": 692,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 703,
									"end": 880,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 703,
									"end": 880,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "292"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "289"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "287"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 5790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059e0ab9a9a4447af6874cb55ec5a657d39e1c3e922977ccf9d8c7dd65ceb58aa64736f6c63430008140033",
									".code": [
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "D5725F1C"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "D5725F1C"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "DECE273F"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "E19F4700"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "F8CDD014"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "92A1AEBF"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "92BF2BE0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "BD252281"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "6210308C"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "6210308C"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "85152E45"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "8C89B64F"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "FDB11CF"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "170AEE73"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "57FC3614"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 5790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4308,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3299,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3086,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 565,
											"end": 768,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5331,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5242,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5325,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5322,
											"end": 5325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5322,
											"end": 5325,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5242,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5242,
											"end": 5331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1292,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 990,
											"end": 1067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 931,
											"end": 953,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 913,
											"end": 954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 913,
											"end": 954,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 773,
											"end": 960,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2799,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2799,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5013,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5013,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5013,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1352,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2557,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2557,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3567,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3567,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1243,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5691,
											"end": 5788,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5691,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5767,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5767,
											"end": 5783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5691,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5691,
											"end": 5788,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4395,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4384,
											"end": 4395,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4384,
											"end": 4395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4395,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4401,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4401,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4471,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 4471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 4454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 4471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 4471,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4445,
											"end": 4892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4892,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4445,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4545,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4519,
											"end": 4892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3596F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4595,
											"name": "PUSH",
											"source": 4,
											"value": "B3596F07"
										},
										{
											"begin": 4566,
											"end": 4595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4566,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4566,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4602,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4519,
											"end": 4892,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4519,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B01C25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 4637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 4637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 4637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "PUSH",
											"source": 4,
											"value": "960384A0"
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4660,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4660,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4703,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4740,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4740,
											"end": 4756,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4724,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4709,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4709,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4756,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4886,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4691,
											"end": 4886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4792,
											"end": 4809,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4789,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4775,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4809,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4775,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4886,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4691,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3596F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4870,
											"name": "PUSH",
											"source": 4,
											"value": "B3596F07"
										},
										{
											"begin": 4841,
											"end": 4870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4841,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3394,
											"end": 3408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3173,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3159,
											"end": 3190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2891,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 2915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2863,
											"end": 2915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4426,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420706172616D6574657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4543,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4242,
											"end": 4584,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2863,
											"end": 2915,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "58C18391FBFB633EE2F4D79E1C0C1D62597D97BC2C460D144C2583B13A2740E2"
										},
										{
											"begin": 2955,
											"end": 2979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2979,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5122,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5098,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5098,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2667,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2648,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2693,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2648,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4426,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420706172616D6574657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4543,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4242,
											"end": 4584,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2639,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2725,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2745,
											"end": 2748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2748,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2725,
											"end": 2748,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2725,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2761,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1346085F9A075660968B9E1F053FBBCFA8642189A5F44875EEA12A4C1E133B7E"
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2788,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3567,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1424,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1186,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 3666,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4274,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4102,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "PUSH",
											"source": 4,
											"value": "CE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB"
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3978,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3825,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3928,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 3973,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "535B93D9E0BE2F8CF2BA1E1F1F8C174E03AA29676B42AAD916BC7190D29ABE90"
										},
										{
											"begin": 3939,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 3973,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 525,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 525,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 554,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 374,
											"end": 560,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 374,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1133,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1203,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1266,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1368,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1373,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1245,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1499,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1501,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1470,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1507,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1664,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1670,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1687,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1635,
											"end": 1687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1687,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1635,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1706,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1735,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1706,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1758,
											"end": 1790,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1853,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1870,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1836,
											"end": 1870,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1868,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1836,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1902,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1957,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1920,
											"end": 1975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1920,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2014,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2055,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2123,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2066,
											"end": 2123,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2123,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2066,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2153,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 2184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2189,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2304,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2319,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2754,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2374,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2508,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2517,
											"end": 2578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2576,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2517,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2627,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2628,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2587,
											"end": 2748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2661,
											"end": 2681,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2587,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2754,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2943,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2759,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2868,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2885,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2902,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2850,
											"end": 2902,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2850,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 2937,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2759,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 3140,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2948,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3040,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3040,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3069,
											"end": 3115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3116,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3116,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3049,
											"end": 3134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3324,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3383,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3432,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3383,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3570,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3443,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3495,
											"end": 3515,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3539,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3532,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3525,
											"end": 3540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3674,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3677,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3876,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3708,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3846,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3799,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3799,
											"end": 3870,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3850,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 4237,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3881,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 4237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4589,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 4660,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 4645,
											"end": 4648,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4641,
											"end": 4661,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4686,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4710,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 5392,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4847,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4944,
											"end": 4947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4952,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4938,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4999,
											"end": 5016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5055,
											"end": 5059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5102,
											"end": 5129,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5159,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5166,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5190,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5143,
											"end": 5190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5190,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5143,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5223,
											"end": 5243,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5294,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5386,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4938,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 5392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 6774,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5568,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5711,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5734,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5681,
											"end": 5734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5714,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5833,
											"end": 5836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5819,
											"end": 5830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5793,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5793,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5743,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5837,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5743,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5890,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5883,
											"end": 5886,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6580,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6653,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5542,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5543,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5545,
											"end": 5556,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5556,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5557,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6758,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5900,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4801,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5953,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6081,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6182,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6183,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6059,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6433,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 6424,
											"end": 6427,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6409,
											"end": 6443,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6405,
											"end": 6444,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6403,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6366,
											"end": 6445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6446,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6504,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6497,
											"end": 6500,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6490,
											"end": 6501,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6486,
											"end": 6505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6473,
											"end": 6506,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 6774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 6774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 6774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 6774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 7052,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6779,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6971,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 7006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 7052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6779,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/DIAOracleV2.sol",
								"contracts/Dependencies/Ownable.sol",
								"contracts/Interfaces/IPriceFeed.sol",
								"contracts/Interfaces/IPriceOracleGetter.sol",
								"contracts/PriceFeed.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE_CURRENCY()": "e19f4700",
							"BASE_CURRENCY_UNIT()": "8c89b64f",
							"CONVERSION_FACTOR()": "bd252281",
							"fetchPrice()": "0fdb11cf",
							"getFallbackOracle()": "6210308c",
							"getMasterOracle()": "85152e45",
							"getMaxPriceAgeLimit()": "f8cdd014",
							"getSourceOfAsset(address)": "92bf2be0",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"setAssetKey(address,string)": "d5725f1c",
							"setDIAOracle(address)": "57fc3614",
							"setFallbackOracle(address)": "170aee73",
							"setMaxPriceAgeLimit(uint256)": "dece273f",
							"setwEthAddress(address)": "92a1aebf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"DIAOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAgeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"AssetKeyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"diaOracleAddress\",\"type\":\"address\"}],\"name\":\"DIAOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"EthAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONVERSION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMasterOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPriceAgeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getSourceOfAsset\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"setAssetKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"diaOracleAddress\",\"type\":\"address\"}],\"name\":\"setDIAOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"AgeLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxPriceAgeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"setwEthAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Meridian Finance\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"DIAOracleAddress\":\"The address of the master oracle to use\",\"baseCurrency\":\"the base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"the unit of the base currency\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an aggregator is not consistent\",\"priceAgeLimit\":\"the max permitted age of oracle price before call is forwarded to fallback oracle\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"getMasterOracle()\":{\"returns\":{\"_0\":\"address The addres of the DIA oracle\"}},\"getMaxPriceAgeLimit()\":{\"returns\":{\"_0\":\"the max age in seconds\"}},\"getSourceOfAsset(address)\":{\"returns\":{\"_0\":\"The DIA key string\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"setAssetKey(address,string)\":{\"params\":{\"asset\":\"The address of the asset to be set\",\"key\":\"The DIA keys/symbol of the source of each asset\"}},\"setDIAOracle(address)\":{\"params\":{\"diaOracleAddress\":\"The address of the MasterOracle\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"setMaxPriceAgeLimit(uint256)\":{\"params\":{\"AgeLimit\":\"max age in seconds of latest price\"}}},\"title\":\"PriceFeed\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"getMasterOracle()\":{\"notice\":\"Gets the address of the master oracle\"},\"getMaxPriceAgeLimit()\":{\"notice\":\"Gets the maximum age that the oracle price can be before the call is routed to fallback\"},\"setAssetKey(address,string)\":{\"notice\":\"External function called to set or replace DIA keys for assets. \"},\"setDIAOracle(address)\":{\"notice\":\"Sets the MasterOracle\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle\"},\"setMaxPriceAgeLimit(uint256)\":{\"notice\":\"Sets the max age that an oracle price can be before fallback oracle is called\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with DIA oracle         smart contracts as primary option - If the returned price by DIA is <= 0, or price is older than maxPriceAgeLimit the call is forwarded to a fallbackOracle - Owned by the OmniDex governance system, allowed to add keys for assets, replace them,   change master oracle and change the fallbackOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DIAOracleV2.sol\":{\"keccak256\":\"0x0be34ccf1c9926ade1247b1ee55488348fe9543df576612a8eb4843dbedbc27e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f06df8c99f3cda0479c7b4b2325ae2838fe8a15efc5b0b9ae12649f4cd101f2a\",\"dweb:/ipfs/QmdhnZW4QHoWWaudj4JA4Vj5SwBubqqF8wxw9nXumhiZ1W\"]},\"contracts/Dependencies/Ownable.sol\":{\"keccak256\":\"0xe918cfb483fc33e2ac0281e7501d1646776916a999449c30dbb4b552673031ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5ce9a0c9f6ffc0ab68a5b65cee22501f69d46dea73e8be4622ff3f4545ebb83\",\"dweb:/ipfs/QmbSjTyRbS6G1qdSAC12qnR8iwr96tyY1pgxaFpoWip6ou\"]},\"contracts/Interfaces/IPriceFeed.sol\":{\"keccak256\":\"0x0d4e2b89f36d90a20675d433e5f96d2829e00a54f2f55205cb8fed9d17502483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb744ec70ae9144d1c381ef01b649c5e0a7eeb8982b47a1b293e3284b7d85a7d\",\"dweb:/ipfs/QmZiL54Ndx6BLnx3GamFiVifk4YePTRG1Pfbm1WJTXzHXf\"]},\"contracts/Interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0x4c7c10c2211f40efa778fd0686814de0a7a7cc9ad95ee37b7cbfdb412154aafa\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2ca0bb0670b7ebaeb2cce25f6691ac677ead3bfba3ab6464321a302226742b6\",\"dweb:/ipfs/QmbH7Cv6kQyPVYkEPLgDvFTsRWae4ermaQNCGfCeTo1kK3\"]},\"contracts/PriceFeed.sol\":{\"keccak256\":\"0xf82ac28136874a6b426223dc586789ca8e6ae0d278b805d9ddf2b2c60ccb1fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4171fb90b0cae7035b0ebc545bfc33dbe91f70c4cddba6f260255df99c3dfe3\",\"dweb:/ipfs/QmZE53854sKcJRnxSBJNUDg9gNuXB2gUzoSM9D62MtU9z8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 140,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 280,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "assetsKeys",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 282,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "wEthAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 285,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "_fallbackOracle",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IPriceOracleGetter)242"
							},
							{
								"astId": 294,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "maxPriceAgeLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 297,
								"contract": "contracts/PriceFeed.sol:PriceFeed",
								"label": "DIA",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(DIAOracleV2)135"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(DIAOracleV2)135": {
								"encoding": "inplace",
								"label": "contract DIAOracleV2",
								"numberOfBytes": "20"
							},
							"t_contract(IPriceOracleGetter)242": {
								"encoding": "inplace",
								"label": "contract IPriceOracleGetter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							},
							"getFallbackOracle()": {
								"notice": "Gets the address of the fallback oracle"
							},
							"getMasterOracle()": {
								"notice": "Gets the address of the master oracle"
							},
							"getMaxPriceAgeLimit()": {
								"notice": "Gets the maximum age that the oracle price can be before the call is routed to fallback"
							},
							"setAssetKey(address,string)": {
								"notice": "External function called to set or replace DIA keys for assets. "
							},
							"setDIAOracle(address)": {
								"notice": "Sets the MasterOracle"
							},
							"setFallbackOracle(address)": {
								"notice": "Sets the fallbackOracle"
							},
							"setMaxPriceAgeLimit(uint256)": {
								"notice": "Sets the max age that an oracle price can be before fallback oracle is called"
							}
						},
						"notice": "Proxy smart contract to get the price of an asset from a price source, with DIA oracle         smart contracts as primary option - If the returned price by DIA is <= 0, or price is older than maxPriceAgeLimit the call is forwarded to a fallbackOracle - Owned by the OmniDex governance system, allowed to add keys for assets, replace them,   change master oracle and change the fallbackOracle",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DIAOracleV2.sol": {
				"ast": {
					"absolutePath": "contracts/DIAOracleV2.sol",
					"exportedSymbols": {
						"DIAOracleV2": [
							135
						]
					},
					"id": 136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DIAOracleV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 135,
							"linearizedBaseContracts": [
								135
							],
							"name": "DIAOracleV2",
							"nameLocation": "67:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5a9ade8b",
									"id": 5,
									"mutability": "mutable",
									"name": "values",
									"nameLocation": "120:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 135,
									"src": "85:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "94:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "85:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "oracleUpdater",
									"nameLocation": "140:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 135,
									"src": "132:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "132:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "a7fc99ed7617309ee23f63ae90196a1e490d362e6f6a547a59bc809ee2291782",
									"id": 15,
									"name": "OracleUpdate",
									"nameLocation": "170:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "190:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "183:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "203:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "195:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 10,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "218:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "210:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 12,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:46:0"
									},
									"src": "164:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "121e958a4cadf7f8dadefa22cc019700365240223668418faebed197da07089f",
									"id": 19,
									"name": "UpdaterAddressChange",
									"nameLocation": "240:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "newUpdater",
												"nameLocation": "269:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "261:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:20:0"
									},
									"src": "234:47:0"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "306:43:0",
										"statements": [
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "oracleUpdater",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "316:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "332:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "336:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "332:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "316:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "316:26:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:0:0"
									},
									"scope": 135,
									"src": "291:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "437:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 38,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "455:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "459:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "455:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 40,
																"name": "oracleUpdater",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "469:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "455:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "447:36:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "cValue",
														"nameLocation": "501:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "493:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 44,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"id": 49,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "522:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"components": [
																					{
																						"id": 47,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "513:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 46,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "513:7:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 48,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "512:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 50,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "512:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 51,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "511:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "533:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "511:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 54,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "510:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 55,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "540:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "510:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "493:56:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 58,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 60,
														"indexExpression": {
															"id": 59,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "566:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "559:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "cValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "573:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "559:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "559:20:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "607:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 66,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 67,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "619:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 64,
														"name": "OracleUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "594:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint128_$_t_uint128_$returns$__$",
															"typeString": "function (string memory,uint128,uint128)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "594:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "EmitStatement",
												"src": "589:40:0"
											}
										]
									},
									"functionSelector": "7898e0c2",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setValue",
									"nameLocation": "368:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "391:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "377:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "404:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "396:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 31,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "419:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "411:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 33,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:53:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:0"
									},
									"scope": 135,
									"src": "359:277:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "724:186:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "cValue",
														"nameLocation": "742:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "734:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"baseExpression": {
														"id": 82,
														"name": "values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "751:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 84,
													"indexExpression": {
														"id": 83,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "758:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "751:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "734:28:0"
											},
											{
												"assignments": [
													87
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "780:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "772:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 86,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "cValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "811:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "811:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "802:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 88,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "793:7:0",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 90,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "792:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "772:46:0"
											},
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "836:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "828:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 98,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "cValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "854:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "864:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "854:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 100,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "845:7:0",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 102,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "844:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "828:40:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 109,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"id": 110,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "885:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint128,uint128)"
													}
												},
												"functionReturnParameters": 79,
												"id": 111,
												"nodeType": "Return",
												"src": "878:25:0"
											}
										]
									},
									"functionSelector": "960384a0",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getValue",
									"nameLocation": "655:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "678:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "664:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:19:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "706:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 75,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 77,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:18:0"
									},
									"scope": 135,
									"src": "646:264:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "996:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 119,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1014:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1018:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1014:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 121,
																"name": "oracleUpdater",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1028:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1014:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1006:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1006:36:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "oracleUpdater",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1052:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "newOracleUpdaterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1068:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1052:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1052:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 130,
															"name": "newOracleUpdaterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1127:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 129,
														"name": "UpdaterAddressChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1106:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1106:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "EmitStatement",
												"src": "1101:50:0"
											}
										]
									},
									"functionSelector": "6aa45efc",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateOracleUpdaterAddress",
									"nameLocation": "929:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "newOracleUpdaterAddress",
												"nameLocation": "964:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "956:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:33:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:0:0"
									},
									"scope": 135,
									"src": "920:238:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 136,
							"src": "58:1102:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								19
							]
						}
					],
					"src": "33:1127:0"
				},
				"id": 0
			},
			"contracts/Dependencies/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							218
						]
					},
					"id": 219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 137,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "58:507:1",
								"text": " Based on OpenZeppelin's Ownable contract:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "Ownable",
							"nameLocation": "575:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "605:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "589:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 146,
									"name": "OwnershipTransferred",
									"nameLocation": "624:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "661:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "645:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "692:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "676:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:57:1"
									},
									"src": "618:84:1"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "819:95:1",
										"statements": [
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "829:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 151,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "838:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "842:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "838:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "829:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "829:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "884:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 156,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "884:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "884:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "896:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "900:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "896:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "863:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "858:49:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "708:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "819:0:1"
									},
									"scope": 218,
									"src": "804:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1037:30:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "1054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 170,
												"id": 172,
												"nodeType": "Return",
												"src": "1047:13:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "920:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "999:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1028:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:1"
									},
									"scope": 218,
									"src": "990:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "1176:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 178,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1194:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1194:9:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1186:54:1"
											},
											{
												"id": 183,
												"nodeType": "PlaceholderStatement",
												"src": "1250:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1073:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 185,
									"name": "onlyOwner",
									"nameLocation": "1164:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:1"
									},
									"src": "1155:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1387:44:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 191,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1404:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1408:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1404:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 193,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1418:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1404:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 190,
												"id": 195,
												"nodeType": "Return",
												"src": "1397:27:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "1264:72:1",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1350:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1357:2:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1381:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1381:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:6:1"
									},
									"scope": 218,
									"src": "1341:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1910:91:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 202,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1962:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1954:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1954:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1954:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 201,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1925:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1925:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "EmitStatement",
												"src": "1920:45:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1975:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1984:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 210,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1984:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1984:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1975:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1975:19:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1437:429:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner.\n NOTE: This function is not safe, as it doesn’t check owner is calling it.\n Make sure you check it before calling it."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_renounceOwnership",
									"nameLocation": "1880:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:2:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:0:1"
									},
									"scope": 218,
									"src": "1871:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 219,
							"src": "566:1437:1",
							"usedErrors": [],
							"usedEvents": [
								146
							]
						}
					],
					"src": "33:1971:1"
				},
				"id": 1
			},
			"contracts/Interfaces/IPriceFeed.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces/IPriceFeed.sol",
					"exportedSymbols": {
						"IPriceFeed": [
							230
						]
					},
					"id": 231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 220,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceFeed",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "IPriceFeed",
							"nameLocation": "68:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "4d29de21de555af78a62fc82dd4bc05e9ae5b0660a37f04729527e0f22780cd3",
									"id": 224,
									"name": "LastGoodPriceUpdated",
									"nameLocation": "114:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lastGoodPrice",
												"nameLocation": "140:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "135:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "135:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:21:2"
									},
									"src": "108:48:2"
								},
								{
									"functionSelector": "0fdb11cf",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchPrice",
									"nameLocation": "198:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "229:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:6:2"
									},
									"scope": 230,
									"src": "189:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 231,
							"src": "58:179:2",
							"usedErrors": [],
							"usedEvents": [
								224
							]
						}
					],
					"src": "33:205:2"
				},
				"id": 2
			},
			"contracts/Interfaces/IPriceOracleGetter.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces/IPriceOracleGetter.sol",
					"exportedSymbols": {
						"IPriceOracleGetter": [
							242
						]
					},
					"id": 243,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 232,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracleGetter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 233,
								"nodeType": "StructuredDocumentation",
								"src": "63:99:3",
								"text": " @title IPriceOracleGetter interface\n @notice Interface for the Meridian price oracle.*"
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "IPriceOracleGetter",
							"nameLocation": "174:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "197:127:3",
										"text": " @dev returns the asset price USD\n @param asset the address of the asset\n @return the price of the asset*"
									},
									"functionSelector": "b3596f07",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetPrice",
									"nameLocation": "336:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:15:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "388:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:9:3"
									},
									"scope": 242,
									"src": "327:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 243,
							"src": "164:235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:361:3"
				},
				"id": 3
			},
			"contracts/PriceFeed.sol": {
				"ast": {
					"absolutePath": "contracts/PriceFeed.sol",
					"exportedSymbols": {
						"DIAOracleV2": [
							135
						],
						"IPriceFeed": [
							230
						],
						"IPriceOracleGetter": [
							242
						],
						"Ownable": [
							218
						],
						"PriceFeed": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/Dependencies/Ownable.sol",
							"file": "./Dependencies/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 602,
							"sourceUnit": 219,
							"src": "58:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces/IPriceFeed.sol",
							"file": "./Interfaces/IPriceFeed.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 602,
							"sourceUnit": 231,
							"src": "95:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/DIAOracleV2.sol",
							"file": "./DIAOracleV2.sol",
							"id": 247,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 602,
							"sourceUnit": 136,
							"src": "133:27:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces/IPriceOracleGetter.sol",
							"file": "./Interfaces/IPriceOracleGetter.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 602,
							"sourceUnit": 243,
							"src": "161:71:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 248,
										"name": "IPriceOracleGetter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "169:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 251,
										"name": "Ownable",
										"nameLocations": [
											"726:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 218,
										"src": "726:7:4"
									},
									"id": 252,
									"nodeType": "InheritanceSpecifier",
									"src": "726:7:4"
								}
							],
							"canonicalName": "PriceFeed",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 250,
								"nodeType": "StructuredDocumentation",
								"src": "234:470:4",
								"text": "@title PriceFeed\n @author Meridian Finance\n @notice Proxy smart contract to get the price of an asset from a price source, with DIA oracle\n         smart contracts as primary option\n - If the returned price by DIA is <= 0, or price is older than maxPriceAgeLimit the call is forwarded to a fallbackOracle\n - Owned by the OmniDex governance system, allowed to add keys for assets, replace them,\n   change master oracle and change the fallbackOracle"
							},
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601,
								218
							],
							"name": "PriceFeed",
							"nameLocation": "713:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c1",
									"id": 258,
									"name": "BaseCurrencySet",
									"nameLocation": "778:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "baseCurrency",
												"nameLocation": "810:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseCurrencyUnit",
												"nameLocation": "832:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "824:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:56:4"
									},
									"src": "772:78:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1346085f9a075660968b9e1f053fbbcfa8642189a5f44875eea12a4c1e133b7e",
									"id": 264,
									"name": "AssetKeyUpdated",
									"nameLocation": "859:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "891:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "875:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "913:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "898:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 261,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "898:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:43:4"
									},
									"src": "853:65:4"
								},
								{
									"anonymous": false,
									"eventSelector": "ce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb",
									"id": 268,
									"name": "FallbackOracleUpdated",
									"nameLocation": "927:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nameLocation": "965:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "949:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:32:4"
									},
									"src": "921:60:4"
								},
								{
									"anonymous": false,
									"eventSelector": "535b93d9e0be2f8cf2ba1e1f1f8c174e03aa29676b42aad916bc7190d29abe90",
									"id": 272,
									"name": "DIAOracleUpdated",
									"nameLocation": "990:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "diaOracleAddress",
												"nameLocation": "1023:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1007:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:34:4"
									},
									"src": "984:57:4"
								},
								{
									"anonymous": false,
									"eventSelector": "58c18391fbfb633ee2f4d79e1c0c1d62597d97bc2c460d144c2583b13a2740e2",
									"id": 276,
									"name": "EthAddressUpdated",
									"nameLocation": "1050:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": false,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "1076:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "1068:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:15:4"
									},
									"src": "1044:39:4"
								},
								{
									"constant": false,
									"id": 280,
									"mutability": "mutable",
									"name": "assetsKeys",
									"nameLocation": "1122:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1087:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 279,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 277,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1095:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1087:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 278,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1106:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 282,
									"mutability": "mutable",
									"name": "wEthAddress",
									"nameLocation": "1144:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1136:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 281,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1136:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_fallbackOracle",
									"nameLocation": "1186:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1159:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
										"typeString": "contract IPriceOracleGetter"
									},
									"typeName": {
										"id": 284,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 283,
											"name": "IPriceOracleGetter",
											"nameLocations": [
												"1159:18:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 242,
											"src": "1159:18:4"
										},
										"referencedDeclaration": 242,
										"src": "1159:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
											"typeString": "contract IPriceOracleGetter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e19f4700",
									"id": 287,
									"mutability": "immutable",
									"name": "BASE_CURRENCY",
									"nameLocation": "1230:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1205:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 286,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1205:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c89b64f",
									"id": 289,
									"mutability": "immutable",
									"name": "BASE_CURRENCY_UNIT",
									"nameLocation": "1274:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1249:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1249:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd252281",
									"id": 292,
									"mutability": "immutable",
									"name": "CONVERSION_FACTOR",
									"nameLocation": "1321:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1296:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1296:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030303030",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1341:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "10000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "maxPriceAgeLimit",
									"nameLocation": "1365:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1357:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1357:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 297,
									"mutability": "mutable",
									"name": "DIA",
									"nameLocation": "1399:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 601,
									"src": "1387:15:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_DIAOracleV2_$135",
										"typeString": "contract DIAOracleV2"
									},
									"typeName": {
										"id": 296,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 295,
											"name": "DIAOracleV2",
											"nameLocations": [
												"1387:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 135,
											"src": "1387:11:4"
										},
										"referencedDeclaration": 135,
										"src": "1387:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DIAOracleV2_$135",
											"typeString": "contract DIAOracleV2"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2064:255:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "DIAOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2084:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "_setDIAOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2070:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2070:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "2126:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 315,
														"name": "_setFallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "2107:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2107:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "2107:34:4"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 319,
														"name": "maxPriceAgeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2147:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 320,
														"name": "priceAgeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2166:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2147:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2147:32:4"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "BASE_CURRENCY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2185:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "baseCurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2201:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2185:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2185:28:4"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "BASE_CURRENCY_UNIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2219:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "baseCurrencyUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2240:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2219:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "2219:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 332,
															"name": "baseCurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "2283:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 333,
															"name": "baseCurrencyUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2297:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"name": "BaseCurrencySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "2267:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "EmitStatement",
												"src": "2262:52:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "1408:493:4",
										"text": "@notice Constructor\n @param DIAOracleAddress The address of the master oracle to use\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n aggregator is not consistent\n @param baseCurrency the base currency used for the price quotes. If USD is used, base currency is 0x0\n @param baseCurrencyUnit the unit of the base currency\n @param priceAgeLimit the max permitted age of oracle price before call is forwarded to fallback oracle"
									},
									"id": 337,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "DIAOracleAddress",
												"nameLocation": "1931:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1923:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nameLocation": "1961:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1953:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "baseCurrency",
												"nameLocation": "1989:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1981:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "baseCurrencyUnit",
												"nameLocation": "2015:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2007:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "priceAgeLimit",
												"nameLocation": "2045:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2037:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:145:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:0:4"
									},
									"scope": 601,
									"src": "1906:413:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "2633:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 348,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2648:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2665:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2657:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 349,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2657:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2657:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2648:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 356,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 342,
																						"src": "2677:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_calldata_ptr",
																							"typeString": "string calldata"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_calldata_ptr",
																							"typeString": "string calldata"
																						}
																					],
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2671:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 354,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "2671:5:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2671:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2682:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "2671:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2692:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2671:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2648:45:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 362,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2647:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706172616d6574657273",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b",
																"typeString": "literal_string \"Invalid parameters\""
															},
															"value": "Invalid parameters"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b",
																"typeString": "literal_string \"Invalid parameters\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 366,
															"name": "assetsKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2725:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 368,
														"indexExpression": {
															"id": 367,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "2736:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2725:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 369,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2745:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "2725:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "2725:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 373,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "2777:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2784:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 372,
														"name": "AssetKeyUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2761:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "EmitStatement",
												"src": "2756:32:4"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2359:195:4",
										"text": "@notice External function called to set or replace DIA keys for assets. \n @param asset The address of the asset to be set\n @param key The DIA keys/symbol of the source of each asset"
									},
									"functionSelector": "d5725f1c",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 344,
												"name": "onlyOwner",
												"nameLocations": [
													"2623:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "2623:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:9:4"
										}
									],
									"name": "setAssetKey",
									"nameLocation": "2566:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2586:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "2578:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2609:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "2593:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2593:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2577:36:4"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:4"
									},
									"scope": 601,
									"src": "2557:236:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "2857:127:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "2872:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2889:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2881:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 387,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2881:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2881:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2872:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2871:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706172616d6574657273",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2894:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b",
																"typeString": "literal_string \"Invalid parameters\""
															},
															"value": "Invalid parameters"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d9e05c1b5b6737ac9f9146b2b5bfb0bb213aca450e861507099c193aa7ca23b",
																"typeString": "literal_string \"Invalid parameters\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2863:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "2863:52:4"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "wEthAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2923:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2937:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2923:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2923:19:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 401,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2973:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "EthAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "2955:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "EmitStatement",
												"src": "2950:29:4"
											}
										]
									},
									"functionSelector": "92a1aebf",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "onlyOwner",
												"nameLocations": [
													"2847:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "2847:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2847:9:4"
										}
									],
									"name": "setwEthAddress",
									"nameLocation": "2808:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "2823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2822:15:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2857:0:4"
									},
									"scope": 601,
									"src": "2799:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3153:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "diaOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "3173:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 413,
														"name": "_setDIAOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3159:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3159:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3159:31:4"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "2988:95:4",
										"text": "@notice Sets the MasterOracle\n @param diaOracleAddress The address of the MasterOracle"
									},
									"functionSelector": "57fc3614",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 410,
												"name": "onlyOwner",
												"nameLocations": [
													"3143:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "3143:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3143:9:4"
										}
									],
									"name": "setDIAOracle",
									"nameLocation": "3095:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "diaOracleAddress",
												"nameLocation": "3116:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3108:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:26:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 601,
									"src": "3086:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3369:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3394:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 426,
														"name": "_setFallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3375:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "3375:34:4"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3199:97:4",
										"text": "@notice Sets the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"
									},
									"functionSelector": "170aee73",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 423,
												"name": "onlyOwner",
												"nameLocations": [
													"3359:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "3359:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3359:9:4"
										}
									],
									"name": "setFallbackOracle",
									"nameLocation": "3308:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nameLocation": "3334:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3326:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3325:24:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:0:4"
									},
									"scope": 601,
									"src": "3299:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "3633:38:4",
										"statements": [
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "maxPriceAgeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3639:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "AgeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3658:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3639:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "3639:27:4"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3418:146:4",
										"text": "@notice Sets the max age that an oracle price can be before fallback oracle is called\n @param AgeLimit max age in seconds of latest price"
									},
									"functionSelector": "dece273f",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 436,
												"name": "onlyOwner",
												"nameLocations": [
													"3623:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "3623:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3623:9:4"
										}
									],
									"name": "setMaxPriceAgeLimit",
									"nameLocation": "3576:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "AgeLimit",
												"nameLocation": "3604:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "3596:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:18:4"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:4"
									},
									"scope": 601,
									"src": "3567:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "3883:95:4",
										"statements": [
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "DIA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "3893:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DIAOracleV2_$135",
															"typeString": "contract DIAOracleV2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 452,
																"name": "diaOracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "3911:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 451,
															"name": "DIAOracleV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "3899:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DIAOracleV2_$135_$",
																"typeString": "type(contract DIAOracleV2)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3899:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DIAOracleV2_$135",
															"typeString": "contract DIAOracleV2"
														}
													},
													"src": "3893:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DIAOracleV2_$135",
														"typeString": "contract DIAOracleV2"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3893:35:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "diaOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "3956:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 456,
														"name": "DIAOracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3939:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "3934:39:4"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "3707:115:4",
										"text": "@notice Internal function to set the MasterOracle\n @param diaOracleAddress The address of the MasterOracle"
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDIAOracle",
									"nameLocation": "3834:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "diaOracleAddress",
												"nameLocation": "3856:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3848:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:26:4"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3883:0:4"
									},
									"scope": 601,
									"src": "3825:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4163:111:4",
										"statements": [
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "_fallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "4169:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 469,
																"name": "fallbackOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "4206:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 468,
															"name": "IPriceOracleGetter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4187:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracleGetter_$242_$",
																"typeString": "type(contract IPriceOracleGetter)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4187:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"src": "4169:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
														"typeString": "contract IPriceOracleGetter"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4169:52:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 474,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "4254:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 473,
														"name": "FallbackOracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "4232:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "4227:42:4"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "3982:117:4",
										"text": "@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFallbackOracle",
									"nameLocation": "4111:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nameLocation": "4138:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4130:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:24:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4163:0:4"
									},
									"scope": 601,
									"src": "4102:172:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "4362:534:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "4376:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "4368:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 483,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"id": 485,
													"name": "wEthAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 282,
													"src": "4384:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:27:4"
											},
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "4415:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "4401:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 487,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4401:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"baseExpression": {
														"id": 489,
														"name": "assetsKeys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "4421:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
															"typeString": "mapping(address => string storage ref)"
														}
													},
													"id": 491,
													"indexExpression": {
														"id": 490,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "4432:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4421:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4401:37:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "4449:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 494,
														"name": "BASE_CURRENCY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4458:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4449:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 501,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "4529:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4523:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 499,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4523:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4523:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4534:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4523:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4544:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4523:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 547,
														"nodeType": "Block",
														"src": "4615:277:4",
														"statements": [
															{
																"assignments": [
																	513,
																	515
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 513,
																		"mutability": "mutable",
																		"name": "price",
																		"nameLocation": "4632:5:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 547,
																		"src": "4624:13:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 512,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "4624:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	},
																	{
																		"constant": false,
																		"id": 515,
																		"mutability": "mutable",
																		"name": "timeStamp",
																		"nameLocation": "4647:9:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 547,
																		"src": "4639:17:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "4639:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 520,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 518,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "4673:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 516,
																			"name": "DIA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "4660:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DIAOracleV2_$135",
																				"typeString": "contract DIAOracleV2"
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4664:8:4",
																		"memberName": "getValue",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 113,
																		"src": "4660:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint128_$_t_uint128_$",
																			"typeString": "function (string memory) view external returns (uint128,uint128)"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4660:17:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
																		"typeString": "tuple(uint128,uint128)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4623:54:4"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 521,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "4695:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4703:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4695:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 527,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 524,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "4709:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4715:9:4",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "4709:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 526,
																						"name": "timeStamp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 515,
																						"src": "4727:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "4709:27:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 528,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4708:29:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 529,
																			"name": "maxPriceAgeLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "4740:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4708:48:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4695:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 545,
																	"nodeType": "Block",
																	"src": "4824:62:4",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 542,
																						"name": "asset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 484,
																						"src": "4871:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 540,
																						"name": "_fallbackOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 285,
																						"src": "4841:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
																							"typeString": "contract IPriceOracleGetter"
																						}
																					},
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4857:13:4",
																					"memberName": "getAssetPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 241,
																					"src": "4841:29:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4841:36:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 482,
																			"id": 544,
																			"nodeType": "Return",
																			"src": "4834:43:4"
																		}
																	]
																},
																"id": 546,
																"nodeType": "IfStatement",
																"src": "4691:195:4",
																"trueBody": {
																	"id": 539,
																	"nodeType": "Block",
																	"src": "4758:60:4",
																	"statements": [
																		{
																			"expression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 534,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 513,
																							"src": "4783:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						],
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4775:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4775:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4775:14:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 536,
																					"name": "CONVERSION_FACTOR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "4792:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4775:34:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 482,
																			"id": 538,
																			"nodeType": "Return",
																			"src": "4768:41:4"
																		}
																	]
																}
															}
														]
													},
													"id": 548,
													"nodeType": "IfStatement",
													"src": "4519:373:4",
													"trueBody": {
														"id": 511,
														"nodeType": "Block",
														"src": "4547:62:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 508,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "4596:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 506,
																			"name": "_fallbackOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "4566:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
																				"typeString": "contract IPriceOracleGetter"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4582:13:4",
																		"memberName": "getAssetPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 241,
																		"src": "4566:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4566:36:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 482,
																"id": 510,
																"nodeType": "Return",
																"src": "4559:43:4"
															}
														]
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "4445:447:4",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4473:40:4",
													"statements": [
														{
															"expression": {
																"id": 496,
																"name": "BASE_CURRENCY_UNIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "4488:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 482,
															"id": 497,
															"nodeType": "Return",
															"src": "4481:25:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0fdb11cf",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchPrice",
									"nameLocation": "4317:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4327:2:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4353:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4352:9:4"
									},
									"scope": 601,
									"src": "4308:588:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "5092:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 561,
																"name": "assetsKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5112:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																	"typeString": "mapping(address => string storage ref)"
																}
															},
															"id": 563,
															"indexExpression": {
																"id": 562,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5123:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5112:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5105:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5105:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"functionReturnParameters": 558,
												"id": 565,
												"nodeType": "Return",
												"src": "5098:32:4"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "4980:30:4",
										"text": "@return The DIA key string"
									},
									"functionSelector": "92bf2be0",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSourceOfAsset",
									"nameLocation": "5022:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5038:15:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "5077:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5077:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5076:15:4"
									},
									"scope": 601,
									"src": "5013:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "5301:30:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "DIA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5322:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DIAOracleV2_$135",
																"typeString": "contract DIAOracleV2"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_DIAOracleV2_$135",
																"typeString": "contract DIAOracleV2"
															}
														],
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5314:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5314:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 572,
												"id": 577,
												"nodeType": "Return",
												"src": "5307:19:4"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "5139:100:4",
										"text": "@notice Gets the address of the master oracle\n @return address The addres of the DIA oracle"
									},
									"functionSelector": "85152e45",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMasterOracle",
									"nameLocation": "5251:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:2:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5292:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5291:9:4"
									},
									"scope": 601,
									"src": "5242:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "5506:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "_fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5527:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
																"typeString": "contract IPriceOracleGetter"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IPriceOracleGetter_$242",
																"typeString": "contract IPriceOracleGetter"
															}
														],
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5519:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 585,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5519:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 584,
												"id": 589,
												"nodeType": "Return",
												"src": "5512:31:4"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "5335:107:4",
										"text": "@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"
									},
									"functionSelector": "6210308c",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackOracle",
									"nameLocation": "5454:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5471:2:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:9:4"
									},
									"scope": 601,
									"src": "5445:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "5754:34:4",
										"statements": [
											{
												"expression": {
													"id": 597,
													"name": "maxPriceAgeLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "5767:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 596,
												"id": 598,
												"nodeType": "Return",
												"src": "5760:23:4"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "5552:136:4",
										"text": "@notice Gets the maximum age that the oracle price can be before the call is routed to fallback\n @return the max age in seconds"
									},
									"functionSelector": "f8cdd014",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxPriceAgeLimit",
									"nameLocation": "5700:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5719:2:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5745:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5744:9:4"
									},
									"scope": 601,
									"src": "5691:97:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 602,
							"src": "704:5086:4",
							"usedErrors": [],
							"usedEvents": [
								146,
								258,
								264,
								268,
								272,
								276
							]
						}
					],
					"src": "33:5757:4"
				},
				"id": 4
			}
		}
	}
}