{
	"id": "923b66c2a715a4827c5e33254301445b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.11",
	"solcLongVersion": "0.6.11+commit.5ef660b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/Oracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.11 <0.6.13;\n\nimport \"./Interfaces/IDIAOracle.sol\";\nimport \"./Dependencies/Ownable.sol\";\nimport \"./Interfaces/IPriceFeed.sol\";\nimport \"./Dependencies/Ownable.sol\";\n\ncontract PriceFeed is IPriceFeed, Ownable {\n    \n    IDIAOracle DIA;\n    string public KEY = \"ETH/USD\";\n\n    constructor( address DIAOracleAddress ) public { \n        _setDIAOracle(DIAOracleAddress);\n    }\n\n    function setDIAOracle(address diaOracleAddress) external onlyOwner {\n        DIA = IDIAOracle(diaOracleAddress);\n    }\n      \n    function _setDIAOracle(address diaOracleAddress) internal {    \n          DIA = IDIAOracle(diaOracleAddress);\n    }\n\n    // --- Functions ---\n    function fetchPrice() external override returns (uint256) {\n        (uint128 price,) = DIA.getValue(KEY); \n        price = price * 1e10;\n        emit LastGoodPriceUpdated(price);\n        return price;\n    }\n\n}\n"
			},
			"contracts/contracts/Dependencies/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * Based on OpenZeppelin's Ownable contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n *\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), msg.sender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     *\n     * NOTE: This function is not safe, as it doesnâ€™t check owner is calling it.\n     * Make sure you check it before calling it.\n     */\n    function _renounceOwnership() internal {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n}\n"
			},
			"contracts/contracts/Interfaces/IPriceFeed.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\ninterface IPriceFeed {\n\n    // --- Events ---\n    event LastGoodPriceUpdated(uint _lastGoodPrice);\n\n   \n    // --- Function ---\n    function fetchPrice() external returns (uint);\n}\n"
			},
			"contracts/contracts/Interfaces/IDIAOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n\ninterface IDIAOracle {\n    function getValue(string memory key) external view returns (uint128, uint128);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/Dependencies/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's Ownable contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/Ownable.sol\":{\"keccak256\":\"0x33ebd980403ab2462257b6b0352dd42d6d4ae86ce9de8c8fa7b8b5a84c585f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c164606fdfd19624a7cf85fb8258b1866431a45a208489cd7158db0f132fc212\",\"dweb:/ipfs/QmYsmA6SdwwHSguo2SHDWP9wAxkvb1NPr7Yevw9vGhwCaV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/contracts/Dependencies/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's Ownable contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
						"version": 1
					}
				}
			},
			"contracts/contracts/Interfaces/IDIAOracle.sol": {
				"IDIAOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "getValue",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getValue(string)": "960384a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Interfaces/IDIAOracle.sol\":\"IDIAOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Interfaces/IDIAOracle.sol\":{\"keccak256\":\"0x925aa40615e1b7670729608915d89eabf8af4866b118daec87e6e9b32ffc77be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d589cd68d3d3a672c045439ac4dc95c5a809bc43d6118c584535976c0bb6c5c5\",\"dweb:/ipfs/QmUZZ5CYosP4hCVs71jqeRE68eDK7dvsEKn1LKwtYnLRB7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/Interfaces/IPriceFeed.sol": {
				"IPriceFeed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastGoodPrice",
									"type": "uint256"
								}
							],
							"name": "LastGoodPriceUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "fetchPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fetchPrice()": "0fdb11cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastGoodPrice\",\"type\":\"uint256\"}],\"name\":\"LastGoodPriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fetchPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Interfaces/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Interfaces/IPriceFeed.sol\":{\"keccak256\":\"0x8addf8adace4b531698302a46cc65d357ef4302aea661502263420e931318172\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0054616ceb3db586a38f205e807c0724752d6d172b34299b9acdcfefdb8fffaf\",\"dweb:/ipfs/QmY9BPjvfui1ReXjrTb4wYrCzZXNow7xqkqZyPG1eHUB4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/Oracle.sol": {
				"PriceFeed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "DIAOracleAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastGoodPrice",
									"type": "uint256"
								}
							],
							"name": "LastGoodPriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "KEY",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "diaOracleAddress",
									"type": "address"
								}
							],
							"name": "setDIAOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/Oracle.sol\":292:321  string public KEY = \"ETH/USD\" */\n  0xc0\n    /* \"contracts/contracts/Oracle.sol\":219:915  contract PriceFeed is IPriceFeed, Ownable {... */\n  0x40\n    /* \"contracts/contracts/Oracle.sol\":292:321  string public KEY = \"ETH/USD\" */\n  mstore\n  0x07\n    /* \"contracts/contracts/Oracle.sol\":219:915  contract PriceFeed is IPriceFeed, Ownable {... */\n  0x80\n    /* \"contracts/contracts/Oracle.sol\":292:321  string public KEY = \"ETH/USD\" */\n  dup2\n  swap1\n  mstore\n  shl(0xca, 0x1155120bd554d1)\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x02\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/contracts/Oracle.sol\":328:424  constructor( address DIAOracleAddress ) public { ... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":838:844  _owner */\n  0x00\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":838:857  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":847:857  msg.sender */\n  caller\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":838:857  _owner = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":872:916  OwnershipTransferred(address(0), msg.sender) */\n  mload(0x40)\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":847:857  msg.sender */\n  swap1\n  swap2\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":838:844  _owner */\n  swap1\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":872:916  OwnershipTransferred(address(0), msg.sender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":838:844  _owner */\n  dup3\n  swap1\n    /* \"contracts/contracts/Dependencies/Ownable.sol\":872:916  OwnershipTransferred(address(0), msg.sender) */\n  log3\n    /* \"contracts/contracts/Oracle.sol\":386:417  _setDIAOracle(DIAOracleAddress) */\n  tag_9\n    /* \"contracts/contracts/Oracle.sol\":400:416  DIAOracleAddress */\n  dup2\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/contracts/Oracle.sol\":386:399  _setDIAOracle */\n  tag_10\n    /* \"contracts/contracts/Oracle.sol\":386:417  _setDIAOracle(DIAOracleAddress) */\n  and\n  jump\t// in\ntag_9:\n    /* \"contracts/contracts/Oracle.sol\":328:424  constructor( address DIAOracleAddress ) public { ... */\n  pop\n    /* \"contracts/contracts/Oracle.sol\":219:915  contract PriceFeed is IPriceFeed, Ownable {... */\n  jump(tag_11)\n    /* \"contracts/contracts/Oracle.sol\":560:675  function _setDIAOracle(address diaOracleAddress) internal {    ... */\ntag_10:\n    /* \"contracts/contracts/Oracle.sol\":634:637  DIA */\n  0x01\n    /* \"contracts/contracts/Oracle.sol\":634:668  DIA = IDIAOracle(diaOracleAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/Oracle.sol\":560:675  function _setDIAOracle(address diaOracleAddress) internal {    ... */\n  jump\t// out\n    /* \"contracts/contracts/Oracle.sol\":219:915  contract PriceFeed is IPriceFeed, Ownable {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  tag_19\n  swap2\n  swap1\ntag_20:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_20)\ntag_19:\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/Oracle.sol\":219:915  contract PriceFeed is IPriceFeed, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0fdb11cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2dc387b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x57fc3614\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/Oracle.sol\":706:912  function fetchPrice() external override returns (uint256) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/Oracle.sol\":292:321  string public KEY = \"ETH/USD\" */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_12:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_12)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_15:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/Oracle.sol\":430:548  function setDIAOracle(address diaOracleAddress) external onlyOwner {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":999:1076  function owner() public view returns (address) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1350:1440  function isOwner() public view returns (bool) {... */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/Oracle.sol\":706:912  function fetchPrice() external override returns (uint256) {... */\n    tag_9:\n        /* \"contracts/contracts/Oracle.sol\":793:796  DIA */\n      0x01\n      dup1\n      sload\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      mload(0x40)\n      shl(0xe5, 0x04b01c25)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/Oracle.sol\":806:809  KEY */\n      0x02\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      dup1\n      sload\n      not(0x00)\n      swap6\n      dup2\n      and\n      iszero\n        /* \"contracts/contracts/Oracle.sol\":793:796  DIA */\n      0x0100\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      mul\n      swap6\n      swap1\n      swap6\n      add\n      swap1\n      swap5\n      and\n      dup5\n      swap1\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/contracts/Oracle.sol\":755:762  uint256 */\n      0x00\n      swap5\n      dup6\n      swap5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/Oracle.sol\":793:796  DIA */\n      and\n      swap4\n        /* \"contracts/contracts/Oracle.sol\":793:805  DIA.getValue */\n      0x960384a0\n      swap4\n        /* \"contracts/contracts/Oracle.sol\":806:809  KEY */\n      swap2\n      swap3\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      dup3\n      swap2\n      0x44\n      add\n      swap1\n        /* \"contracts/contracts/Oracle.sol\":806:809  KEY */\n      dup5\n      swap1\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_25\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_24)\n    tag_25:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_26:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_26\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_24:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      mload\n      0x40\n        /* \"contracts/contracts/Oracle.sol\":856:883  LastGoodPriceUpdated(price) */\n      dup1\n      mload\n        /* \"contracts/contracts/Oracle.sol\":837:841  1e10 */\n      0x02540be400\n        /* \"contracts/contracts/Oracle.sol\":829:841  price * 1e10 */\n      swap1\n      swap3\n      mul\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/contracts/Oracle.sol\":856:883  LastGoodPriceUpdated(price) */\n      dup2\n      and\n      dup4\n      mstore\n      swap1\n      mload\n        /* \"contracts/contracts/Oracle.sol\":829:841  price * 1e10 */\n      swap1\n      swap3\n      pop\n        /* \"contracts/contracts/Oracle.sol\":856:883  LastGoodPriceUpdated(price) */\n      0x4d29de21de555af78a62fc82dd4bc05e9ae5b0660a37f04729527e0f22780cd3\n      swap2\n        /* \"contracts/contracts/Oracle.sol\":793:810  DIA.getValue(KEY) */\n      0x20\n        /* \"contracts/contracts/Oracle.sol\":856:883  LastGoodPriceUpdated(price) */\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/contracts/Oracle.sol\":893:905  return price */\n      and\n      swap1\n      pop\n        /* \"contracts/contracts/Oracle.sol\":706:912  function fetchPrice() external override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/Oracle.sol\":292:321  string public KEY = \"ETH/USD\" */\n    tag_11:\n      0x02\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x01\n      dup5\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap4\n      and\n      dup5\n      swap1\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_32\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_31)\n    tag_32:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_33:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_33\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/Oracle.sol\":430:548  function setDIAOracle(address diaOracleAddress) external onlyOwner {... */\n    tag_18:\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1203:1212  isOwner() */\n      tag_35\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1203:1210  isOwner */\n      tag_22\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1203:1212  isOwner() */\n      jump\t// in\n    tag_35:\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1195:1249  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/contracts/Oracle.sol\":507:510  DIA */\n      0x01\n        /* \"contracts/contracts/Oracle.sol\":507:541  DIA = IDIAOracle(diaOracleAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/Oracle.sol\":430:548  function setDIAOracle(address diaOracleAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":999:1076  function owner() public view returns (address) {... */\n    tag_20:\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1037:1044  address */\n      0x00\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1063:1069  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":999:1076  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1350:1440  function isOwner() public view returns (bool) {... */\n    tag_22:\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1390:1394  bool */\n      0x00\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1427:1433  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1413:1423  msg.sender */\n      caller\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1413:1433  msg.sender == _owner */\n      eq\n      swap1\n        /* \"contracts/contracts/Dependencies/Ownable.sol\":1350:1440  function isOwner() public view returns (bool) {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220efb3630d9ae2a58a3ef986b8fb05f391231dd0205e4c3dbf8c62aeac0ae7ab9164736f6c634300060b0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c060405260076080819052661155120bd554d160ca1b60a090815261002891600291906100d3565b5034801561003557600080fd5b5060405161057a38038061057a8339818101604052602081101561005857600080fd5b5051600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36100ab816001600160e01b036100b116565b5061016e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011457805160ff1916838001178555610141565b82800160010185558215610141579182015b82811115610141578251825591602001919060010190610126565b5061014d929150610151565b5090565b61016b91905b8082111561014d5760008155600101610157565b90565b6103fd8061017d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630fdb11cf1461005c5780632dc387b31461007657806357fc3614146100f35780638da5cb5b1461011b5780638f32d59b1461013f575b600080fd5b61006461015b565b60408051918252519081900360200190f35b61007e6102a1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100b85781810151838201526020016100a0565b50505050905090810190601f1680156100e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101196004803603602081101561010957600080fd5b50356001600160a01b031661032c565b005b6101236103a7565b604080516001600160a01b039092168252519081900360200190f35b6101476103b6565b604080519115158252519081900360200190f35b600180546040516304b01c2560e51b8152602060048201908152600280546000199581161561010002959095019094168490046024830181905260009485946001600160a01b03169363960384a0939192829160440190849080156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b505092505050604080518083038186803b15801561021e57600080fd5b505afa158015610232573d6000803e3d6000fd5b505050506040513d604081101561024857600080fd5b5051604080516402540be4009092026001600160801b038116835290519092507f4d29de21de555af78a62fc82dd4bc05e9ae5b0660a37f04729527e0f22780cd3916020908290030190a16001600160801b0316905090565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b6103346103b6565b610385576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6000546001600160a01b031633149056fea2646970667358221220efb3630d9ae2a58a3ef986b8fb05f391231dd0205e4c3dbf8c62aeac0ae7ab9164736f6c634300060b0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x7 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH7 0x1155120BD554D1 PUSH1 0xCA SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH2 0x28 SWAP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xD3 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x57A CODESIZE SUB DUP1 PUSH2 0x57A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH2 0xAB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0xB1 AND JUMP JUMPDEST POP PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x114 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x141 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x141 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x141 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x14D SWAP3 SWAP2 POP PUSH2 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x157 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3FD DUP1 PUSH2 0x17D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFDB11CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2DC387B3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x57FC3614 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4B01C25 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT SWAP6 DUP2 AND ISZERO PUSH2 0x100 MUL SWAP6 SWAP1 SWAP6 ADD SWAP1 SWAP5 AND DUP5 SWAP1 DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH4 0x960384A0 SWAP4 SWAP2 SWAP3 DUP3 SWAP2 PUSH1 0x44 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x201 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x201 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH5 0x2540BE400 SWAP1 SWAP3 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP4 MSTORE SWAP1 MLOAD SWAP1 SWAP3 POP PUSH32 0x4D29DE21DE555AF78A62FC82DD4BC05E9AE5B0660A37F04729527E0F22780CD3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB3 PUSH4 0xD9AE2A5 DUP11 RETURNDATACOPY 0xF9 DUP7 0xB8 0xFB SDIV RETURN SWAP2 0x23 SAR 0xD0 KECCAK256 0x5E 0x4C RETURNDATASIZE 0xBF DUP13 PUSH3 0xAEAC0A 0xE7 0xAB SWAP2 PUSH5 0x736F6C6343 STOP MOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "292:29:3:-:0;219:696;292:29;;219:696;292:29;;;-1:-1:-1;;;292:29:3;;;;;;;;;;:::i;:::-;;328:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;328:96:3;838:6:0;:19;;-1:-1:-1;;;;;;838:19:0;847:10;838:19;;;;;872:44;;847:10;;838:6;872:44;;838:6;;872:44;386:31:3;400:16;-1:-1:-1;;;;;386:13:3;:31;:::i;:::-;328:96;219:696;;560:115;634:3;:34;;-1:-1:-1;;;;;;634:34:3;-1:-1:-1;;;;;634:34:3;;;;;;;;;;560:115::o;219:696::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;219:696:3;;;-1:-1:-1;219:696:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630fdb11cf1461005c5780632dc387b31461007657806357fc3614146100f35780638da5cb5b1461011b5780638f32d59b1461013f575b600080fd5b61006461015b565b60408051918252519081900360200190f35b61007e6102a1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100b85781810151838201526020016100a0565b50505050905090810190601f1680156100e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101196004803603602081101561010957600080fd5b50356001600160a01b031661032c565b005b6101236103a7565b604080516001600160a01b039092168252519081900360200190f35b6101476103b6565b604080519115158252519081900360200190f35b600180546040516304b01c2560e51b8152602060048201908152600280546000199581161561010002959095019094168490046024830181905260009485946001600160a01b03169363960384a0939192829160440190849080156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b505092505050604080518083038186803b15801561021e57600080fd5b505afa158015610232573d6000803e3d6000fd5b505050506040513d604081101561024857600080fd5b5051604080516402540be4009092026001600160801b038116835290519092507f4d29de21de555af78a62fc82dd4bc05e9ae5b0660a37f04729527e0f22780cd3916020908290030190a16001600160801b0316905090565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b6103346103b6565b610385576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6000546001600160a01b031633149056fea2646970667358221220efb3630d9ae2a58a3ef986b8fb05f391231dd0205e4c3dbf8c62aeac0ae7ab9164736f6c634300060b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFDB11CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2DC387B3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x57FC3614 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4B01C25 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT SWAP6 DUP2 AND ISZERO PUSH2 0x100 MUL SWAP6 SWAP1 SWAP6 ADD SWAP1 SWAP5 AND DUP5 SWAP1 DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH4 0x960384A0 SWAP4 SWAP2 SWAP3 DUP3 SWAP2 PUSH1 0x44 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x201 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x201 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH5 0x2540BE400 SWAP1 SWAP3 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP4 MSTORE SWAP1 MLOAD SWAP1 SWAP3 POP PUSH32 0x4D29DE21DE555AF78A62FC82DD4BC05E9AE5B0660A37F04729527E0F22780CD3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB3 PUSH4 0xD9AE2A5 DUP11 RETURNDATACOPY 0xF9 DUP7 0xB8 0xFB SDIV RETURN SWAP2 0x23 SAR 0xD0 KECCAK256 0x5E 0x4C RETURNDATASIZE 0xBF DUP13 PUSH3 0xAEAC0A 0xE7 0xAB SWAP2 PUSH5 0x736F6C6343 STOP MOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "219:696:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:206;;;:::i;:::-;;;;;;;;;;;;;;;;292:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:118;;;;;;;;;;;;;;;;-1:-1:-1;430:118:3;-1:-1:-1;;;;;430:118:3;;:::i;:::-;;999:77:0;;;:::i;:::-;;;;-1:-1:-1;;;;;999:77:0;;;;;;;;;;;;;;1350:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;706:206:3;793:3;;;:17;;-1:-1:-1;;;793:17:3;;;;;;;;;806:3;793:17;;-1:-1:-1;;793:17:3;;;;:3;:17;;;;;;;;;;;;;;;;;755:7;;;;-1:-1:-1;;;;;793:3:3;;:12;;806:3;;793:17;;;;;806:3;;793:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;793:17:3;;856:27;;837:4;829:12;;;-1:-1:-1;;;;;856:27:3;;;;;;829:12;;-1:-1:-1;856:27:3;;793:17;856:27;;;;;;;-1:-1:-1;;;;;893:12:3;;-1:-1:-1;706:206:3;:::o;292:29::-;;;;;;;;;;;;;;-1:-1:-1;;292:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;430:118::-;1203:9:0;:7;:9::i;:::-;1195:54;;;;;-1:-1:-1;;;1195:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:3:3::1;:34:::0;;-1:-1:-1;;;;;;507:34:3::1;-1:-1:-1::0;;;;;507:34:3;;;::::1;::::0;;;::::1;::::0;;430:118::o;999:77:0:-;1037:7;1063:6;-1:-1:-1;;;;;1063:6:0;999:77;:::o;1350:90::-;1390:4;1427:6;-1:-1:-1;;;;;1427:6:0;1413:10;:20;;1350:90::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "204200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"KEY()": "infinite",
								"fetchPrice()": "infinite",
								"isOwner()": "1093",
								"owner()": "1081",
								"setDIAOracle(address)": "21962"
							},
							"internal": {
								"_setDIAOracle(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1155120BD554D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 321,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 292,
									"end": 321,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 328,
									"end": 424,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 424,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 838,
									"end": 844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 857,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 838,
									"end": 857,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 847,
									"end": 857,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 838,
									"end": 857,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 916,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 916,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 847,
									"end": 857,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 847,
									"end": 857,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 838,
									"end": 844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 916,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 872,
									"end": 916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 838,
									"end": 844,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 838,
									"end": 844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 916,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 386,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 400,
									"end": 416,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 386,
									"end": 417,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 386,
									"end": 417,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 386,
									"end": 417,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 386,
									"end": 417,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 560,
									"end": 675,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 560,
									"end": 675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 637,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 668,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 634,
									"end": 668,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 634,
									"end": 668,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 560,
									"end": 675,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 219,
									"end": 915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efb3630d9ae2a58a3ef986b8fb05f391231dd0205e4c3dbf8c62aeac0ae7ab9164736f6c634300060b0033",
									".code": [
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "FDB11CF"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "2DC387B3"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "57FC3614"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "8F32D59B"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 430,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 430,
											"end": 548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 706,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 706,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 796,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 796,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B01C25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 806,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 796,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 762,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 755,
											"end": 762,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 755,
											"end": 762,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 793,
											"end": 796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 796,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "960384A0"
										},
										{
											"begin": 793,
											"end": 805,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 806,
											"end": 809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 806,
											"end": 809,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 806,
											"end": 809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "2540BE400"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 829,
											"end": 841,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 856,
											"end": 883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "4D29DE21DE555AF78A62FC82DD4BC05E9AE5B0660A37F04729527E0F22780CD3"
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 856,
											"end": 883,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 893,
											"end": 905,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 893,
											"end": 905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 706,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 912,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 292,
											"end": 321,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1203,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1195,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 507,
											"end": 541,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 430,
											"end": 548,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1076,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"KEY()": "2dc387b3",
							"fetchPrice()": "0fdb11cf",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"setDIAOracle(address)": "57fc3614"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"DIAOracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastGoodPrice\",\"type\":\"uint256\"}],\"name\":\"LastGoodPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KEY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"diaOracleAddress\",\"type\":\"address\"}],\"name\":\"setDIAOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Oracle.sol\":\"PriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/Ownable.sol\":{\"keccak256\":\"0x33ebd980403ab2462257b6b0352dd42d6d4ae86ce9de8c8fa7b8b5a84c585f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c164606fdfd19624a7cf85fb8258b1866431a45a208489cd7158db0f132fc212\",\"dweb:/ipfs/QmYsmA6SdwwHSguo2SHDWP9wAxkvb1NPr7Yevw9vGhwCaV\"]},\"contracts/contracts/Interfaces/IDIAOracle.sol\":{\"keccak256\":\"0x925aa40615e1b7670729608915d89eabf8af4866b118daec87e6e9b32ffc77be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d589cd68d3d3a672c045439ac4dc95c5a809bc43d6118c584535976c0bb6c5c5\",\"dweb:/ipfs/QmUZZ5CYosP4hCVs71jqeRE68eDK7dvsEKn1LKwtYnLRB7\"]},\"contracts/contracts/Interfaces/IPriceFeed.sol\":{\"keccak256\":\"0x8addf8adace4b531698302a46cc65d357ef4302aea661502263420e931318172\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0054616ceb3db586a38f205e807c0724752d6d172b34299b9acdcfefdb8fffaf\",\"dweb:/ipfs/QmY9BPjvfui1ReXjrTb4wYrCzZXNow7xqkqZyPG1eHUB4i\"]},\"contracts/contracts/Oracle.sol\":{\"keccak256\":\"0x5c2b66da86da46f2b7830b80ecb385372564d8ade0fd4d19e671a60ad609db76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2932c8a60aebff8f57356a35bdefa7a707d79de1b6d0dec76e4b77467ba70c60\",\"dweb:/ipfs/QmcTrgNHMYhXoGicWCPHTTb8CDCJDnM3Y8dqXTLtkaLpqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/contracts/Oracle.sol:PriceFeed",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 118,
								"contract": "contracts/contracts/Oracle.sol:PriceFeed",
								"label": "DIA",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IDIAOracle)94"
							},
							{
								"astId": 121,
								"contract": "contracts/contracts/Oracle.sol:PriceFeed",
								"label": "KEY",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IDIAOracle)94": {
								"encoding": "inplace",
								"label": "contract IDIAOracle",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/Dependencies/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							82
						]
					},
					"id": 83,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:507:0",
								"text": " Based on OpenZeppelin's Ownable contract:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 82,
									"src": "589:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 10,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "645:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "676:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "644:57:0"
									},
									"src": "618:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "828:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "838:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "847:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "847:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "838:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "838:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "901:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "893:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 20,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "893:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "893:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 24,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "905:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "905:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 19,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "872:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "EmitStatement",
												"src": "867:49:0"
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "708:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:0:0"
									},
									"scope": 82,
									"src": "804:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "1046:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 34,
												"id": 36,
												"nodeType": "Return",
												"src": "1056:13:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "929:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "1037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1036:9:0"
									},
									"scope": 82,
									"src": "999:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1185:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 42,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1203:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1214:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1195:54:0"
											},
											{
												"id": 47,
												"nodeType": "PlaceholderStatement",
												"src": "1259:1:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1082:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 49,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:2:0"
									},
									"src": "1164:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1396:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1413:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1413:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 57,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1427:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1413:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 59,
												"nodeType": "Return",
												"src": "1406:27:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1273:72:0",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1366:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "1390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1389:6:0"
									},
									"scope": 82,
									"src": "1350:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1919:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 66,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1971:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 67,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1963:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1963:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 65,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1934:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1934:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "EmitStatement",
												"src": "1929:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 73,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1984:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2001:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 74,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1993:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1984:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1984:19:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1446:429:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner.\n NOTE: This function is not safe, as it doesnâ€™t check owner is calling it.\n Make sure you check it before calling it."
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 82,
									"src": "1880:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 83,
							"src": "566:1446:0"
						}
					],
					"src": "33:1980:0"
				},
				"id": 0
			},
			"contracts/contracts/Interfaces/IDIAOracle.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Interfaces/IDIAOracle.sol",
					"exportedSymbols": {
						"IDIAOracle": [
							94
						]
					},
					"id": 95,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 84,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IDIAOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "960384a0",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "104:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "104:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "103:19:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 88,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "155:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 90,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "145:18:1"
									},
									"scope": 94,
									"src": "86:78:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 95,
							"src": "59:107:1"
						}
					],
					"src": "33:133:1"
				},
				"id": 1
			},
			"contracts/contracts/Interfaces/IPriceFeed.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Interfaces/IPriceFeed.sol",
					"exportedSymbols": {
						"IPriceFeed": [
							106
						]
					},
					"id": 107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 96,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "IPriceFeed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 100,
									"name": "LastGoodPriceUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lastGoodPrice",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "135:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "135:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "134:21:2"
									},
									"src": "108:48:2"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0fdb11cf",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fetchPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:2"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "230:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "230:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:6:2"
									},
									"scope": 106,
									"src": "190:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 107,
							"src": "58:180:2"
						}
					],
					"src": "33:206:2"
				},
				"id": 2
			},
			"contracts/contracts/Oracle.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Oracle.sol",
					"exportedSymbols": {
						"PriceFeed": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11",
								"<",
								"0.6",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:3"
						},
						{
							"absolutePath": "contracts/contracts/Interfaces/IDIAOracle.sol",
							"file": "./Interfaces/IDIAOracle.sol",
							"id": 109,
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 95,
							"src": "68:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/Ownable.sol",
							"file": "./Dependencies/Ownable.sol",
							"id": 110,
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 83,
							"src": "106:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Interfaces/IPriceFeed.sol",
							"file": "./Interfaces/IPriceFeed.sol",
							"id": 111,
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 107,
							"src": "143:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/Ownable.sol",
							"file": "./Dependencies/Ownable.sol",
							"id": 112,
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 83,
							"src": "181:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 113,
										"name": "IPriceFeed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 106,
										"src": "241:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceFeed_$106",
											"typeString": "contract IPriceFeed"
										}
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "241:10:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 115,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 82,
										"src": "253:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$82",
											"typeString": "contract Ownable"
										}
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:3"
								}
							],
							"contractDependencies": [
								82,
								106
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184,
								82,
								106
							],
							"name": "PriceFeed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "DIA",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 184,
									"src": "272:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDIAOracle_$94",
										"typeString": "contract IDIAOracle"
									},
									"typeName": {
										"contractScope": null,
										"id": 117,
										"name": "IDIAOracle",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 94,
										"src": "272:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDIAOracle_$94",
											"typeString": "contract IDIAOracle"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2dc387b3",
									"id": 121,
									"mutability": "mutable",
									"name": "KEY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 184,
									"src": "292:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 119,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "292:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4554482f555344",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "312:9:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0b43555ace6b39aae1b894097d0a9fc17f504c62fea598fa206cc6f5088e6e45",
											"typeString": "literal_string \"ETH/USD\""
										},
										"value": "ETH/USD"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "375:49:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 127,
															"name": "DIAOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "400:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_setDIAOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "386:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "386:31:3"
											}
										]
									},
									"documentation": null,
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "DIAOracleAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "341:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "339:28:3"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:0:3"
									},
									"scope": 184,
									"src": "328:96:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "497:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 138,
														"name": "DIA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "507:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDIAOracle_$94",
															"typeString": "contract IDIAOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 140,
																"name": "diaOracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "524:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 139,
															"name": "IDIAOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "513:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDIAOracle_$94_$",
																"typeString": "type(contract IDIAOracle)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "513:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDIAOracle_$94",
															"typeString": "contract IDIAOracle"
														}
													},
													"src": "507:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDIAOracle_$94",
														"typeString": "contract IDIAOracle"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "507:34:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "57fc3614",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 136,
											"modifierName": {
												"argumentTypes": null,
												"id": 135,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "487:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "487:9:3"
										}
									],
									"name": "setDIAOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "diaOracleAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "452:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "451:26:3"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:3"
									},
									"scope": 184,
									"src": "430:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "618:57:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 150,
														"name": "DIA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "634:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDIAOracle_$94",
															"typeString": "contract IDIAOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 152,
																"name": "diaOracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "651:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 151,
															"name": "IDIAOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "640:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDIAOracle_$94_$",
																"typeString": "type(contract IDIAOracle)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "640:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDIAOracle_$94",
															"typeString": "contract IDIAOracle"
														}
													},
													"src": "634:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDIAOracle_$94",
														"typeString": "contract IDIAOracle"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "634:34:3"
											}
										]
									},
									"documentation": null,
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDIAOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "diaOracleAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "583:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:26:3"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:0:3"
									},
									"scope": 184,
									"src": "560:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										105
									],
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "764:148:3",
										"statements": [
											{
												"assignments": [
													164,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 182,
														"src": "775:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 163,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "775:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 169,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "KEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "806:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 165,
															"name": "DIA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "793:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDIAOracle_$94",
																"typeString": "contract IDIAOracle"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "793:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint128_$_t_uint128_$",
															"typeString": "function (string memory) view external returns (uint128,uint128)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint128,uint128)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "774:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 170,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "821:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 171,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "829:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653130",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "837:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "1e10"
														},
														"src": "829:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "821:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "821:20:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 177,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "877:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 176,
														"name": "LastGoodPriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "856:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "EmitStatement",
												"src": "851:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 180,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 164,
													"src": "900:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 162,
												"id": 181,
												"nodeType": "Return",
												"src": "893:12:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0fdb11cf",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchPrice",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 159,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "737:8:3"
									},
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "755:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "754:9:3"
									},
									"scope": 184,
									"src": "706:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "219:696:3"
						}
					],
					"src": "33:883:3"
				},
				"id": 3
			}
		}
	}
}