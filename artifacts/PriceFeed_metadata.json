{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "DIAOracleAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "fallbackOracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "baseCurrency",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "baseCurrencyUnit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "priceAgeLimit",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "AssetKeyUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "baseCurrency",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseCurrencyUnit",
						"type": "uint256"
					}
				],
				"name": "BaseCurrencySet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "diaOracleAddress",
						"type": "address"
					}
				],
				"name": "DIAOracleUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "EthAddressUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fallbackOracle",
						"type": "address"
					}
				],
				"name": "FallbackOracleUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BASE_CURRENCY",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "BASE_CURRENCY_UNIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "CONVERSION_FACTOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fetchPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFallbackOracle",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMasterOracle",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaxPriceAgeLimit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "getSourceOfAsset",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "setAssetKey",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "diaOracleAddress",
						"type": "address"
					}
				],
				"name": "setDIAOracle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fallbackOracle",
						"type": "address"
					}
				],
				"name": "setFallbackOracle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "AgeLimit",
						"type": "uint256"
					}
				],
				"name": "setMaxPriceAgeLimit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "setwEthAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Meridian Finance",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"DIAOracleAddress": "The address of the master oracle to use",
						"baseCurrency": "the base currency used for the price quotes. If USD is used, base currency is 0x0",
						"baseCurrencyUnit": "the unit of the base currency",
						"fallbackOracle": "The address of the fallback oracle to use if the data of an aggregator is not consistent",
						"priceAgeLimit": "the max permitted age of oracle price before call is forwarded to fallback oracle"
					}
				},
				"getFallbackOracle()": {
					"returns": {
						"_0": "address The addres of the fallback oracle"
					}
				},
				"getMasterOracle()": {
					"returns": {
						"_0": "address The addres of the DIA oracle"
					}
				},
				"getMaxPriceAgeLimit()": {
					"returns": {
						"_0": "the max age in seconds"
					}
				},
				"getSourceOfAsset(address)": {
					"returns": {
						"_0": "The DIA key string"
					}
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"setAssetKey(address,string)": {
					"params": {
						"asset": "The address of the asset to be set",
						"key": "The DIA keys/symbol of the source of each asset"
					}
				},
				"setDIAOracle(address)": {
					"params": {
						"diaOracleAddress": "The address of the MasterOracle"
					}
				},
				"setFallbackOracle(address)": {
					"params": {
						"fallbackOracle": "The address of the fallbackOracle"
					}
				},
				"setMaxPriceAgeLimit(uint256)": {
					"params": {
						"AgeLimit": "max age in seconds of latest price"
					}
				}
			},
			"title": "PriceFeed",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor"
				},
				"getFallbackOracle()": {
					"notice": "Gets the address of the fallback oracle"
				},
				"getMasterOracle()": {
					"notice": "Gets the address of the master oracle"
				},
				"getMaxPriceAgeLimit()": {
					"notice": "Gets the maximum age that the oracle price can be before the call is routed to fallback"
				},
				"setAssetKey(address,string)": {
					"notice": "External function called to set or replace DIA keys for assets. "
				},
				"setDIAOracle(address)": {
					"notice": "Sets the MasterOracle"
				},
				"setFallbackOracle(address)": {
					"notice": "Sets the fallbackOracle"
				},
				"setMaxPriceAgeLimit(uint256)": {
					"notice": "Sets the max age that an oracle price can be before fallback oracle is called"
				}
			},
			"notice": "Proxy smart contract to get the price of an asset from a price source, with DIA oracle         smart contracts as primary option - If the returned price by DIA is <= 0, or price is older than maxPriceAgeLimit the call is forwarded to a fallbackOracle - Owned by the OmniDex governance system, allowed to add keys for assets, replace them,   change master oracle and change the fallbackOracle",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PriceFeed.sol": "PriceFeed"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/DIAOracleV2.sol": {
			"keccak256": "0x0be34ccf1c9926ade1247b1ee55488348fe9543df576612a8eb4843dbedbc27e",
			"license": "MIT",
			"urls": [
				"bzz-raw://f06df8c99f3cda0479c7b4b2325ae2838fe8a15efc5b0b9ae12649f4cd101f2a",
				"dweb:/ipfs/QmdhnZW4QHoWWaudj4JA4Vj5SwBubqqF8wxw9nXumhiZ1W"
			]
		},
		"contracts/Dependencies/Ownable.sol": {
			"keccak256": "0xe918cfb483fc33e2ac0281e7501d1646776916a999449c30dbb4b552673031ec",
			"license": "MIT",
			"urls": [
				"bzz-raw://b5ce9a0c9f6ffc0ab68a5b65cee22501f69d46dea73e8be4622ff3f4545ebb83",
				"dweb:/ipfs/QmbSjTyRbS6G1qdSAC12qnR8iwr96tyY1pgxaFpoWip6ou"
			]
		},
		"contracts/Interfaces/IPriceFeed.sol": {
			"keccak256": "0x0d4e2b89f36d90a20675d433e5f96d2829e00a54f2f55205cb8fed9d17502483",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb744ec70ae9144d1c381ef01b649c5e0a7eeb8982b47a1b293e3284b7d85a7d",
				"dweb:/ipfs/QmZiL54Ndx6BLnx3GamFiVifk4YePTRG1Pfbm1WJTXzHXf"
			]
		},
		"contracts/Interfaces/IPriceOracleGetter.sol": {
			"keccak256": "0x4c7c10c2211f40efa778fd0686814de0a7a7cc9ad95ee37b7cbfdb412154aafa",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://a2ca0bb0670b7ebaeb2cce25f6691ac677ead3bfba3ab6464321a302226742b6",
				"dweb:/ipfs/QmbH7Cv6kQyPVYkEPLgDvFTsRWae4ermaQNCGfCeTo1kK3"
			]
		},
		"contracts/PriceFeed.sol": {
			"keccak256": "0xf82ac28136874a6b426223dc586789ca8e6ae0d278b805d9ddf2b2c60ccb1fe8",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4171fb90b0cae7035b0ebc545bfc33dbe91f70c4cddba6f260255df99c3dfe3",
				"dweb:/ipfs/QmZE53854sKcJRnxSBJNUDg9gNuXB2gUzoSM9D62MtU9z8"
			]
		}
	},
	"version": 1
}