{
	"id": "864800127181a9ebd478c2c23a4f6ab6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.11",
	"solcLongVersion": "0.6.11+commit.5ef660b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/LQTY/LockupContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\nimport \"../Dependencies/SafeMath.sol\";\nimport \"../Interfaces/ILQTYToken.sol\";\n\n/*\n* The lockup contract architecture utilizes a single LockupContract, with an unlockTime. The unlockTime is passed as an argument \n* to the LockupContract's constructor. The contract's balance can be withdrawn by the beneficiary when block.timestamp > unlockTime. \n* At construction, the contract checks that unlockTime is at least one year later than the Liquity system's deployment time. \n\n* Within the first year from deployment, the deployer of the LQTYToken (Liquity AG's address) may transfer LQTY only to valid \n* LockupContracts, and no other addresses (this is enforced in LQTYToken.sol's transfer() function).\n* \n* The above two restrictions ensure that until one year after system deployment, LQTY tokens originating from Liquity AG cannot \n* enter circulating supply and cannot be staked to earn system revenue.\n*/\ncontract LockupContract {\n    using SafeMath for uint;\n\n    // --- Data ---\n    string constant public NAME = \"LockupContract\";\n\n    uint constant public SECONDS_IN_ONE_YEAR = 31536000; \n\n    address public immutable beneficiary;\n\n    ILQTYToken public lqtyToken;\n\n    // Unlock time is the Unix point in time at which the beneficiary can withdraw.\n    uint public unlockTime;\n\n    // --- Events ---\n\n    event LockupContractCreated(address _beneficiary, uint _unlockTime);\n    event LockupContractEmptied(uint _LQTYwithdrawal);\n\n    // --- Functions ---\n\n    constructor \n    (\n        address _lqtyTokenAddress, \n        address _beneficiary, \n        uint _unlockTime\n    )\n        public \n    {\n        lqtyToken = ILQTYToken(_lqtyTokenAddress);\n\n        /*\n        * Set the unlock time to a chosen instant in the future, as long as it is at least 1 year after\n        * the system was deployed \n        */\n        _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime);\n        unlockTime = _unlockTime;\n        \n        beneficiary =  _beneficiary;\n        emit LockupContractCreated(_beneficiary, _unlockTime);\n    }\n\n    function withdrawLQTY() external {\n        _requireCallerIsBeneficiary();\n        _requireLockupDurationHasPassed();\n\n        ILQTYToken lqtyTokenCached = lqtyToken;\n        uint LQTYBalance = lqtyTokenCached.balanceOf(address(this));\n        lqtyTokenCached.transfer(beneficiary, LQTYBalance);\n        emit LockupContractEmptied(LQTYBalance);\n    }\n\n    // --- 'require' functions ---\n\n    function _requireCallerIsBeneficiary() internal view {\n        require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\");\n    }\n\n    function _requireLockupDurationHasPassed() internal view {\n        require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\");\n    }\n\n    function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {\n        uint systemDeploymentTime = lqtyToken.getDeploymentStartTime();\n        require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\");\n    }\n}\n"
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\nimport \"../Dependencies/IERC20.sol\";\nimport \"../Dependencies/IERC2612.sol\";\n\ninterface ILQTYToken is IERC20, IERC2612 { \n   \n    // --- Events ---\n    \n    event CommunityIssuanceAddressSet(address _communityIssuanceAddress);\n    event LQTYStakingAddressSet(address _lqtyStakingAddress);\n    event LockupContractFactoryAddressSet(address _lockupContractFactoryAddress);\n\n    // --- Functions ---\n    \n    function sendToLQTYStaking(address _sender, uint256 _amount) external;\n\n    function getDeploymentStartTime() external view returns (uint256);\n\n    // function getLpRewardsEntitlement() external view returns (uint256);\n}\n"
			},
			"contracts/contracts/Dependencies/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * Based on OpenZeppelin's SafeMath:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n *\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * @dev Interface of the ERC2612 standard as defined in the EIP.\n *\n * Adds the {permit} method, which can be used to change one's\n * {IERC20-allowance} without having to send a transaction, by signing a\n * message. This allows users to spend tokens without having to hold Ether.\n *\n * See https://eips.ethereum.org/EIPS/eip-2612.\n * \n * Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\n */\ninterface IERC2612 {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 amount, \n                    uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n    \n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases `owner`'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     *\n     * `owner` can limit the time a Permit is valid for by setting `deadline` to \n     * a value in the near future. The deadline argument can be set to uint(-1) to \n     * create Permits that effectively never expire.\n     */\n    function nonces(address owner) external view returns (uint256);\n    \n    function version() external view returns (string memory);\n    function permitTypeHash() external view returns (bytes32);\n    function domainSeparator() external view returns (bytes32);\n}\n"
			},
			"contracts/contracts/Dependencies/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * Based on the OpenZeppelin IER20 interface:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n *\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    \n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/Dependencies/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
						"version": 1
					}
				}
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"IERC2612": {
					"abi": [
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/",
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"domainSeparator()": "f698da25",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\",\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/IERC2612.sol\":\"IERC2612\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/Dependencies/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d08f60ff1f43c23d58b08487f33112275f25d2dc01c79bc12f2f5fc0a5e50fda64736f6c634300060b0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d08f60ff1f43c23d58b08487f33112275f25d2dc01c79bc12f2f5fc0a5e50fda64736f6c634300060b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP16 PUSH1 0xFF 0x1F NUMBER 0xC2 RETURNDATASIZE PC 0xB0 DUP5 DUP8 RETURN BALANCE SLT 0x27 0x5F 0x25 0xD2 0xDC ADD 0xC7 SWAP12 0xC1 0x2F 0x2F 0x5F 0xC0 0xA5 0xE5 0xF 0xDA PUSH5 0x736F6C6343 STOP MOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "760:4708:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d08f60ff1f43c23d58b08487f33112275f25d2dc01c79bc12f2f5fc0a5e50fda64736f6c634300060b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP16 PUSH1 0xFF 0x1F NUMBER 0xC2 RETURNDATASIZE PC 0xB0 DUP5 DUP8 RETURN BALANCE SLT 0x27 0x5F 0x25 0xD2 0xDC ADD 0xC7 SWAP12 0xC1 0x2F 0x2F 0x5F 0xC0 0xA5 0xE5 0xF 0xDA PUSH5 0x736F6C6343 STOP MOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "760:4708:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d08f60ff1f43c23d58b08487f33112275f25d2dc01c79bc12f2f5fc0a5e50fda64736f6c634300060b0033",
									".code": [
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0x666b890992a066cc791f36c2975cd595d9761a014c654c385ed36ffaf658f3fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b261f6ac077c4ebc81dd3f4c833f866139acd8b908feff72385c32f83c21c2d\",\"dweb:/ipfs/Qmb91cmmBEFhwUWwVxgxTPmeNxzdiyCdxoVXB2gN3Gvg7e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol",
						"version": 1
					}
				}
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"ILQTYToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_communityIssuanceAddress",
									"type": "address"
								}
							],
							"name": "CommunityIssuanceAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lqtyStakingAddress",
									"type": "address"
								}
							],
							"name": "LQTYStakingAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lockupContractFactoryAddress",
									"type": "address"
								}
							],
							"name": "LockupContractFactoryAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeploymentStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToLQTYStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"domainSeparator()": "f698da25",
							"getDeploymentStartTime()": "3c84b7c2",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"sendToLQTYStaking(address,uint256)": "f3a2568b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_communityIssuanceAddress\",\"type\":\"address\"}],\"name\":\"CommunityIssuanceAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lqtyStakingAddress\",\"type\":\"address\"}],\"name\":\"LQTYStakingAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lockupContractFactoryAddress\",\"type\":\"address\"}],\"name\":\"LockupContractFactoryAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToLQTYStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Interfaces/ILQTYToken.sol\":\"ILQTYToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]},\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]},\"contracts/contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0x5e4ffb34b4f3fa77718061a40858722b3811be1ea99ca498c637e97237a4a83a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c729af77d7c08cb4ac0b0886dbda817afd5b83a235797b82b0ce9b3a251faf7\",\"dweb:/ipfs/QmbWf5HVLs1v7vrfuLzgXhddUvyPW76YXLYMRqH96o5Bpx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/LQTY/LockupContract.sol": {
				"LockupContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lqtyTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_unlockTime",
									"type": "uint256"
								}
							],
							"name": "LockupContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_LQTYwithdrawal",
									"type": "uint256"
								}
							],
							"name": "LockupContractEmptied",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NAME",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_IN_ONE_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lqtyToken",
							"outputs": [
								{
									"internalType": "contract ILQTYToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawLQTY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/LQTY/LockupContract.sol\":966:3172  contract LockupContract {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1526:2104  constructor ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x60\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  swap1\n  swap3\n  add\n  mload\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1673:1682  lqtyToken */\n  0x00\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1673:1714  lqtyToken = ILQTYToken(_lqtyTokenAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1526:2104  constructor ... */\n  swap1\n  swap2\n  swap1\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1886:1954  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime) */\n  tag_5\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1526:2104  constructor ... */\n  dup2\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1886:1941  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment */\n  tag_6\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1886:1954  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime) */\n  jump\t// in\ntag_5:\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1964:1974  unlockTime */\n  0x01\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1964:1988  unlockTime = _unlockTime */\n  dup2\n  swap1\n  sstore\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2007:2034  beneficiary =  _beneficiary */\n  0x60\n  dup4\n  swap1\n  shl\n  and\n  0x80\n  mstore\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2049:2097  LockupContractCreated(_beneficiary, _unlockTime) */\n  0x40\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2007:2034  beneficiary =  _beneficiary */\n  dup5\n  and\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2049:2097  LockupContractCreated(_beneficiary, _unlockTime) */\n  dup2\n  mstore\n  0x20\n  dup2\n  add\n  dup4\n  swap1\n  mstore\n  dup2\n  mload\n  0x5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54\n  swap3\n  swap2\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log1\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1526:2104  constructor ... */\n  pop\n  pop\n  pop\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":966:3172  contract LockupContract {... */\n  jump(tag_7)\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2834:3170  function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {... */\ntag_6:\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2941:2966  uint systemDeploymentTime */\n  0x00\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2969:2978  lqtyToken */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2969:3001  lqtyToken.getDeploymentStartTime */\n  and\n  0x3c84b7c2\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2969:3003  lqtyToken.getDeploymentStartTime() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  pop\n  mload\n  swap1\n  pop\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3036:3081  systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  tag_13\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2969:3003  lqtyToken.getDeploymentStartTime() */\n  dup2\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":1142:1150  31536000 */\n  0x01e13380\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3036:3060  systemDeploymentTime.add */\n  tag_14\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2969:3003  lqtyToken.getDeploymentStartTime() */\n  0x20\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3036:3060  systemDeploymentTime.add */\n  swap1\n  dup2\n  shl\n  tag_0_25\n  or\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3036:3081  systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  swap1\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3021:3032  _unlockTime */\n  dup3\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3021:3081  _unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  lt\n  iszero\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":3013:3163  require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x4d\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267\n  0x4d\n  swap2\n  codecopy\n  0x60\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":2834:3170  function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_14:\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1063:1070  uint256 */\n  0x00\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n  dup3\n  dup3\n  add\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1117:1123  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_17\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_17:\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1173:1174  c */\n  swap4\n    /* \"contracts/contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/contracts/LQTY/LockupContract.sol\":966:3172  contract LockupContract {... */\ntag_7:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267 4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374206265206174206c65617374206f6e6520796561722061667465722073797374656d206465706c6f796d656e74\n\nsub_0: assembly {\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":966:3172  contract LockupContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f7af3c3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x251c1aa3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x98e5f3c4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3f4df7e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb9470a46\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1201:1228  ILQTYToken public lqtyToken */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1319:1341  uint public unlockTime */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1158:1194  address public immutable beneficiary */\n    tag_5:\n      tag_9\n      tag_14\n      jump\t// in\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1099:1150  uint constant public SECONDS_IN_ONE_YEAR = 31536000 */\n    tag_6:\n      tag_11\n      tag_16\n      jump\t// in\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1046:1092  string constant public NAME = \"LockupContract\" */\n    tag_7:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_19:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_19)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2110:2459  function withdrawLQTY() external {... */\n    tag_8:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1201:1228  ILQTYToken public lqtyToken */\n    tag_10:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1319:1341  uint public unlockTime */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1158:1194  address public immutable beneficiary */\n    tag_14:\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1099:1150  uint constant public SECONDS_IN_ONE_YEAR = 31536000 */\n    tag_16:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1142:1150  31536000 */\n      0x01e13380\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1099:1150  uint constant public SECONDS_IN_ONE_YEAR = 31536000 */\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":1046:1092  string constant public NAME = \"LockupContract\" */\n    tag_18:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x92, 0x131bd8dadd5c10dbdb9d1c9858dd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2110:2459  function withdrawLQTY() external {... */\n    tag_24:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2153:2182  _requireCallerIsBeneficiary() */\n      tag_27\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2153:2180  _requireCallerIsBeneficiary */\n      tag_28\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2153:2182  _requireCallerIsBeneficiary() */\n      jump\t// in\n    tag_27:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2192:2225  _requireLockupDurationHasPassed() */\n      tag_29\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2192:2223  _requireLockupDurationHasPassed */\n      tag_30\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2192:2225  _requireLockupDurationHasPassed() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2236:2262  ILQTYToken lqtyTokenCached */\n      0x00\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2265:2274  lqtyToken */\n      dup1\n      sload\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2337:2341  this */\n      address\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2265:2274  lqtyToken */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2236:2262  ILQTYToken lqtyTokenCached */\n      swap2\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2265:2274  lqtyToken */\n      dup4\n      swap2\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2328  lqtyTokenCached.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2265:2274  lqtyToken */\n      dup7\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      mload\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2378:2389  beneficiary */\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      0x24\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2377  lqtyTokenCached.transfer */\n      swap1\n      dup5\n      and\n      swap2\n      0xa9059cbb\n      swap2\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2303:2343  lqtyTokenCached.balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2377  lqtyTokenCached.transfer */\n      dup8\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      pop\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2418:2452  LockupContractEmptied(LQTYBalance) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      0x7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2353:2403  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      0x20\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2418:2452  LockupContractEmptied(LQTYBalance) */\n      add\n      swap1\n      log1\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2110:2459  function withdrawLQTY() external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1063:1070  uint256 */\n      0x00\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1117:1123  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_40\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x28, 0x536166654d6174683a206164646974696f6e206f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1173:1174  c */\n      swap4\n        /* \"contracts/contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2501:2654  function _requireCallerIsBeneficiary() internal view {... */\n    tag_28:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2572:2582  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2586:2597  beneficiary */\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2572:2597  msg.sender == beneficiary */\n      and\n      eq\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2564:2647  require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2501:2654  function _requireCallerIsBeneficiary() internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2660:2828  function _requireLockupDurationHasPassed() internal view {... */\n    tag_30:\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2754:2764  unlockTime */\n      sload(0x01)\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2735:2750  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2735:2764  block.timestamp >= unlockTime */\n      lt\n      iszero\n        /* \"contracts/contracts/LQTY/LockupContract.sol\":2727:2821  require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5 4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d757374206861766520706173736564\n    data_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318 4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279\n\n    auxdata: 0xa264697066735822122055133c497278793adc27c7bf8747eb013fdf258611c2d5e0e5ac3cf27f4fcbfe64736f6c634300060b0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b506040516107223803806107228339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b0319166001600160a01b038416179055909190610068816100cb565b60018190556001600160601b0319606083901b16608052604080516001600160a01b03841681526020810183905281517f5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54929181900390910190a1505050610204565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633c84b7c26040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50519050610161816301e133806101a3602090811b61030a17901c565b82101561019f5760405162461bcd60e51b815260040180806020018281038252604d8152602001806106d5604d913960600191505060405180910390fd5b5050565b6000828201838110156101fd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60805160601c6104aa61022b600039806101535280610249528061037452506104aa6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631f7af3c314610067578063251c1aa31461008b57806338af3eed146100a557806398e5f3c4146100ad578063a3f4df7e146100b5578063b9470a4614610132575b600080fd5b61006f61013c565b604080516001600160a01b039092168252519081900360200190f35b61009361014b565b60408051918252519081900360200190f35b61006f610151565b610093610175565b6100bd61017d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013a6101a7565b005b6000546001600160a01b031681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6301e1338081565b6040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b6101af610369565b6101b76103d2565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216929183916370a08231916024808301926020929190829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b50516040805163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b505050506040513d60208110156102d157600080fd5b50506040805182815290517f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9181900360200190a15050565b600082820183811015610362576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d05760405162461bcd60e51b815260040180806020018281038252602d815260200180610448602d913960400191505060405180910390fd5b565b6001544210156103d05760405162461bcd60e51b81526004018080602001828103825260348152602001806104146034913960400191505060405180910390fdfe4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d7573742068617665207061737365644c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279a264697066735822122055133c497278793adc27c7bf8747eb013fdf258611c2d5e0e5ac3cf27f4fcbfe64736f6c634300060b00334c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374206265206174206c65617374206f6e6520796561722061667465722073797374656d206465706c6f796d656e74",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x722 CODESIZE SUB DUP1 PUSH2 0x722 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x68 DUP2 PUSH2 0xCB JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x5FAEE922186516BF77266643C1FDA130ACEFC439D571400E8697106C6AED9B54 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP PUSH2 0x204 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3C84B7C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x161 DUP2 PUSH4 0x1E13380 PUSH2 0x1A3 PUSH1 0x20 SWAP1 DUP2 SHL PUSH2 0x30A OR SWAP1 SHR JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6D5 PUSH1 0x4D SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x4AA PUSH2 0x22B PUSH1 0x0 CODECOPY DUP1 PUSH2 0x153 MSTORE DUP1 PUSH2 0x249 MSTORE DUP1 PUSH2 0x374 MSTORE POP PUSH2 0x4AA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7AF3C3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x98E5F3C4 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB9470A46 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x151 JUMP JUMPDEST PUSH2 0x93 PUSH2 0x175 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x124 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x1A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x131BD8DADD5C10DBDB9D1C9858DD PUSH1 0x92 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1AF PUSH2 0x369 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x219 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x536166654D6174683A206164646974696F6E206F766572666C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x448 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x414 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4C PUSH16 0x636B7570436F6E74726163743A205468 PUSH6 0x206C6F636B75 PUSH17 0x206475726174696F6E206D757374206861 PUSH23 0x65207061737365644C6F636B7570436F6E74726163743A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74207468652062656E65666963 PUSH10 0x617279A2646970667358 0x22 SLT KECCAK256 SSTORE SGT EXTCODECOPY 0x49 PUSH19 0x78793ADC27C7BF8747EB013FDF258611C2D5E0 0xE5 0xAC EXTCODECOPY CALLCODE PUSH32 0x4FCBFE64736F6C634300060B00334C6F636B7570436F6E74726163743A20756E PUSH13 0x6F636B2074696D65206D757374 KECCAK256 PUSH3 0x652061 PUSH21 0x206C65617374206F6E652079656172206166746572 KECCAK256 PUSH20 0x797374656D206465706C6F796D656E7400000000 ",
							"sourceMap": "966:2206:4:-:0;;;1526:578;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1526:578:4;;;;;;;;;;;1673:9;:41;;-1:-1:-1;;;;;;1673:41:4;-1:-1:-1;;;;;1673:41:4;;;;;1526:578;;;1886:68;1526:578;1886:55;:68::i;:::-;1964:10;:24;;;-1:-1:-1;;;;;;2007:27:4;;;;;;;2049:48;;;-1:-1:-1;;;;;2007:27:4;;2049:48;;;;;;;;;;;;;;;;;;;;;1526:578;;;966:2206;;2834:336;2941:25;2969:9;;;;;;;;;-1:-1:-1;;;;;2969:9:4;-1:-1:-1;;;;;2969:32:4;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2969:34:4;;-1:-1:-1;3036:45:4;2969:34;1142:8;3036:24;2969:34;3036:24;;;;;:45;;:::i;:::-;3021:11;:60;;3013:150;;;;-1:-1:-1;;;3013:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2834:336;;:::o;1005:176:2:-;1063:7;1094:5;;;1117:6;;;;1109:46;;;;;-1:-1:-1;;;1109:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:1;1005:176;-1:-1:-1;;;1005:176:2:o;966:2206:4:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"399": [
									{
										"length": 32,
										"start": 339
									},
									{
										"length": 32,
										"start": 585
									},
									{
										"length": 32,
										"start": 884
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631f7af3c314610067578063251c1aa31461008b57806338af3eed146100a557806398e5f3c4146100ad578063a3f4df7e146100b5578063b9470a4614610132575b600080fd5b61006f61013c565b604080516001600160a01b039092168252519081900360200190f35b61009361014b565b60408051918252519081900360200190f35b61006f610151565b610093610175565b6100bd61017d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013a6101a7565b005b6000546001600160a01b031681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6301e1338081565b6040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b6101af610369565b6101b76103d2565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216929183916370a08231916024808301926020929190829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b50516040805163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b505050506040513d60208110156102d157600080fd5b50506040805182815290517f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9181900360200190a15050565b600082820183811015610362576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d05760405162461bcd60e51b815260040180806020018281038252602d815260200180610448602d913960400191505060405180910390fd5b565b6001544210156103d05760405162461bcd60e51b81526004018080602001828103825260348152602001806104146034913960400191505060405180910390fdfe4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d7573742068617665207061737365644c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279a264697066735822122055133c497278793adc27c7bf8747eb013fdf258611c2d5e0e5ac3cf27f4fcbfe64736f6c634300060b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7AF3C3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x98E5F3C4 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB9470A46 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x151 JUMP JUMPDEST PUSH2 0x93 PUSH2 0x175 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x124 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x1A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x131BD8DADD5C10DBDB9D1C9858DD PUSH1 0x92 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1AF PUSH2 0x369 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x219 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x536166654D6174683A206164646974696F6E206F766572666C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x448 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x414 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4C PUSH16 0x636B7570436F6E74726163743A205468 PUSH6 0x206C6F636B75 PUSH17 0x206475726174696F6E206D757374206861 PUSH23 0x65207061737365644C6F636B7570436F6E74726163743A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74207468652062656E65666963 PUSH10 0x617279A2646970667358 0x22 SLT KECCAK256 SSTORE SGT EXTCODECOPY 0x49 PUSH19 0x78793ADC27C7BF8747EB013FDF258611C2D5E0 0xE5 0xAC EXTCODECOPY CALLCODE PUSH32 0x4FCBFE64736F6C634300060B0033000000000000000000000000000000000000 ",
							"sourceMap": "966:2206:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:27;;;:::i;:::-;;;;-1:-1:-1;;;;;1201:27:4;;;;;;;;;;;;;;1319:22;;;:::i;:::-;;;;;;;;;;;;;;;;1158:36;;;:::i;1099:51::-;;;:::i;1046:46::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:349;;;:::i;:::-;;1201:27;;;-1:-1:-1;;;;;1201:27:4;;:::o;1319:22::-;;;;:::o;1158:36::-;;;:::o;1099:51::-;1142:8;1099:51;:::o;1046:46::-;;;;;;;;;;;;;;-1:-1:-1;;;1046:46:4;;;;:::o;2110:349::-;2153:29;:27;:29::i;:::-;2192:33;:31;:33::i;:::-;2236:26;2265:9;;2303:40;;;-1:-1:-1;;;2303:40:4;;2337:4;2303:40;;;;;;-1:-1:-1;;;;;2265:9:4;;;;2236:26;2265:9;;2303:25;;:40;;;;;;;;;;;;;;2265:9;2303:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2303:40:4;2353:50;;;-1:-1:-1;;;2353:50:4;;-1:-1:-1;;;;;2378:11:4;2353:50;;;;;;;;;;;;;;2303:40;;-1:-1:-1;2353:24:4;;;;;;:50;;;;;2303:40;;2353:50;;;;;;;;-1:-1:-1;2353:24:4;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2418:34:4;;;;;;;;;;;;;2353:50;2418:34;;;2110:349;;:::o;1005:176:2:-;1063:7;1094:5;;;1117:6;;;;1109:46;;;;;-1:-1:-1;;;1109:46:2;;;;;;;;;;;;-1:-1:-1;;;1109:46:2;;;;;;;;;;;;;;;1173:1;1005:176;-1:-1:-1;;;1005:176:2:o;2501:153:4:-;2572:10;-1:-1:-1;;;;;2586:11:4;2572:25;;2564:83;;;;-1:-1:-1;;;2564:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2501:153::o;2660:168::-;2754:10;;2735:15;:29;;2727:94;;;;-1:-1:-1;;;2727:94:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "238800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NAME()": "infinite",
								"SECONDS_IN_ONE_YEAR()": "242",
								"beneficiary()": "infinite",
								"lqtyToken()": "1015",
								"unlockTime()": "998",
								"withdrawLQTY()": "infinite"
							},
							"internal": {
								"_requireCallerIsBeneficiary()": "infinite",
								"_requireLockupDurationHasPassed()": "infinite",
								"_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1886,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1886,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1886,
									"end": 1954,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1886,
									"end": 1954,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1886,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 1974,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1964,
									"end": 1988,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 1988,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 1988,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "PUSH",
									"source": 4,
									"value": "5FAEE922186516BF77266643C1FDA130ACEFC439D571400E8697106C6AED9B54"
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2049,
									"end": 2097,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2834,
									"end": 3170,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2834,
									"end": 3170,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2941,
									"end": 2966,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2969,
									"end": 3001,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3001,
									"name": "PUSH",
									"source": 4,
									"value": "3C84B7C2"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "STATICCALL",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1150,
									"name": "PUSH",
									"source": 4,
									"value": "1E13380"
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2969,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551641"
								},
								{
									"begin": 3036,
									"end": 3060,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3036,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3081,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3081,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "4D"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH data",
									"source": 4,
									"value": "FA7D35D8BA3CB9477F8D2991AE59B8BD5517F50C9CAEE3C407D66859F000D267"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "4D"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3013,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2834,
									"end": 3170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2834,
									"end": 3170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2834,
									"end": 3170,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1063,
									"end": 1070,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "1B"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1173,
									"end": 1174,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "399"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 3172,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055133c497278793adc27c7bf8747eb013fdf258611c2d5e0e5ac3cf27f4fcbfe64736f6c634300060b0033",
									".code": [
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "1F7AF3C3"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "251C1AA3"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "38AF3EED"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "98E5F3C4"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "A3F4DF7E"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "B9470A46"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3172,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD8DADD5C10DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2153,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2192,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2192,
											"end": 2225,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2225,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2192,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2341,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2377,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F"
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2452,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2459,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1005,
											"end": 1181,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2501,
											"end": 2654,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2501,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2582,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "2D"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH data",
											"source": 4,
											"value": "6F5FE979492A2F2B3C19A6F112E727F4F83BF91814C82AD68C2DB485F3E9D318"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "2D"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2564,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2654,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2660,
											"end": 2828,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2660,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2750,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH data",
											"source": 4,
											"value": "167FA4388FF18B329F1218BE189E73142E4068ACA57040F1C4871FC96244DFF5"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2821,
											"name": "REVERT",
											"source": 4
										}
									],
									".data": {
										"167FA4388FF18B329F1218BE189E73142E4068ACA57040F1C4871FC96244DFF5": "4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d757374206861766520706173736564",
										"6F5FE979492A2F2B3C19A6F112E727F4F83BF91814C82AD68C2DB485F3E9D318": "4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279"
									}
								},
								"FA7D35D8BA3CB9477F8D2991AE59B8BD5517F50C9CAEE3C407D66859F000D267": "4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374206265206174206c65617374206f6e6520796561722061667465722073797374656d206465706c6f796d656e74"
							}
						},
						"methodIdentifiers": {
							"NAME()": "a3f4df7e",
							"SECONDS_IN_ONE_YEAR()": "98e5f3c4",
							"beneficiary()": "38af3eed",
							"lqtyToken()": "1f7af3c3",
							"unlockTime()": "251c1aa3",
							"withdrawLQTY()": "b9470a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lqtyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"LockupContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_LQTYwithdrawal\",\"type\":\"uint256\"}],\"name\":\"LockupContractEmptied\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_IN_ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lqtyToken\",\"outputs\":[{\"internalType\":\"contract ILQTYToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLQTY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/LQTY/LockupContract.sol\":\"LockupContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]},\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]},\"contracts/contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0x666b890992a066cc791f36c2975cd595d9761a014c654c385ed36ffaf658f3fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b261f6ac077c4ebc81dd3f4c833f866139acd8b908feff72385c32f83c21c2d\",\"dweb:/ipfs/Qmb91cmmBEFhwUWwVxgxTPmeNxzdiyCdxoVXB2gN3Gvg7e\"]},\"contracts/contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0x5e4ffb34b4f3fa77718061a40858722b3811be1ea99ca498c637e97237a4a83a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c729af77d7c08cb4ac0b0886dbda817afd5b83a235797b82b0ce9b3a251faf7\",\"dweb:/ipfs/QmbWf5HVLs1v7vrfuLzgXhddUvyPW76YXLYMRqH96o5Bpx\"]},\"contracts/contracts/LQTY/LockupContract.sol\":{\"keccak256\":\"0xf5019a7c2fe19079e42ee2269bcbe272f04d3175ed1175bb0257a750857a830f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea178b4e6d03e22d251873f3ab94b9a95220ba3ac86d04ef73f60ac307648598\",\"dweb:/ipfs/QmWsUP4smdo8emx47o2F1FNNjvkCtGsUom49wnA9SmzSUN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 401,
								"contract": "contracts/contracts/LQTY/LockupContract.sol:LockupContract",
								"label": "lqtyToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ILQTYToken)384"
							},
							{
								"astId": 403,
								"contract": "contracts/contracts/LQTY/LockupContract.sol:LockupContract",
								"label": "unlockTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(ILQTYToken)384": {
								"encoding": "inplace",
								"label": "contract ILQTYToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/Dependencies/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:222:0",
								"text": " Based on the OpenZeppelin IER20 interface:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "304:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "420:9:0"
									},
									"scope": 110,
									"src": "375:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "436:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "571:9:0"
									},
									"scope": 110,
									"src": "513:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "587:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "819:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "818:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "871:6:0"
									},
									"scope": 110,
									"src": "801:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "884:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1171:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1226:9:0"
									},
									"scope": 110,
									"src": "1153:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "39509351",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:37:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 110,
									"src": "1241:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a457c2d7",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1360:42:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1420:6:0"
									},
									"scope": 110,
									"src": "1334:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1433:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2114:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2096:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2148:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:6:0"
									},
									"scope": 110,
									"src": "2080:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2160:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2499:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2482:51:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2551:6:0"
									},
									"scope": 110,
									"src": "2461:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2602:15:0"
									},
									"scope": 110,
									"src": "2564:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "2664:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:15:0"
									},
									"scope": 110,
									"src": "2623:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "2727:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2726:7:0"
									},
									"scope": 110,
									"src": "2684:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2744:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 100,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2922:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2944:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2921:57:0"
									},
									"src": "2907:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2985:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 109,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3153:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3176:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3152:63:0"
									},
									"src": "3138:78:0"
								}
							],
							"scope": 111,
							"src": "281:2937:0"
						}
					],
					"src": "33:3185:0"
				},
				"id": 0
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/IERC2612.sol",
					"exportedSymbols": {
						"IERC2612": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "58:429:1",
								"text": " @dev Interface of the ERC2612 standard as defined in the EIP.\n Adds the {permit} method, which can be used to change one's\n {IERC20-allowance} without having to send a transaction, by signing a\n message. This allows users to spend tokens without having to hold Ether.\n See https://eips.ethereum.org/EIPS/eip-2612.\n \n Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/"
							},
							"fullyImplemented": false,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC2612",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "513:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1368:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1437:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1455:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 123,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1464:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1475:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1367:118:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:1"
									},
									"scope": 155,
									"src": "1352:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1505:526:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases `owner`'s nonce by one. This\n prevents a signature from being used multiple times.\n `owner` can limit the time a Permit is valid for by setting `deadline` to \n a value in the near future. The deadline argument can be set to uint(-1) to \n create Permits that effectively never expire."
									},
									"functionSelector": "7ecebe00",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "2052:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2051:15:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "2090:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2089:9:1"
									},
									"scope": 155,
									"src": "2036:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:2:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "2151:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2151:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2150:15:1"
									},
									"scope": 155,
									"src": "2109:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "10ce43bd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTypeHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2220:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:9:1"
									},
									"scope": 155,
									"src": "2171:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f698da25",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "domainSeparator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "2284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2283:9:1"
									},
									"scope": 155,
									"src": "2234:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "488:1807:1"
						}
					],
					"src": "33:2263:1"
				},
				"id": 1
			},
			"contracts/contracts/Dependencies/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 157,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "58:701:2",
								"text": " Based on OpenZeppelin's SafeMath:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1072:109:2",
										"statements": [
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 183,
														"src": "1082:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1094:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1098:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1094:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1082:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 175,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "1117:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1122:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1109:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1109:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 181,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1173:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 182,
												"nodeType": "Return",
												"src": "1166:8:2"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "783:217:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1063:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1062:9:2"
									},
									"scope": 351,
									"src": "1005:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "1512:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1533:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1536:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 194,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															201,
															229
														],
														"referencedDeclaration": 229,
														"src": "1529:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 199,
												"nodeType": "Return",
												"src": "1522:50:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1187:253:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "1458:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "1469:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1457:22:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "1503:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1502:9:2"
									},
									"scope": 351,
									"src": "1445:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1998:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2016:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2021:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2016:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 217,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2024:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2008:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2008:29:2"
											},
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 228,
														"src": "2047:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2063:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2047:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 226,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "2082:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 227,
												"nodeType": "Return",
												"src": "2075:8:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1585:313:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "1916:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "1927:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "1938:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1915:50:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "1989:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1988:9:2"
									},
									"scope": 351,
									"src": "1903:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2397:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2629:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2629:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 245,
												"nodeType": "IfStatement",
												"src": "2625:45:2",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "2637:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2658:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 238,
															"id": 243,
															"nodeType": "Return",
															"src": "2651:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 263,
														"src": "2680:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2692:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2696:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 253,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2715:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2719:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2715:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 256,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2724:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2715:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2707:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2707:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 261,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "2781:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 262,
												"nodeType": "Return",
												"src": "2774:8:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2096:229:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "2343:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "2354:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2342:22:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 264,
												"src": "2388:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2387:9:2"
									},
									"scope": 351,
									"src": "2330:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3311:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 275,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3332:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 276,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3335:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 274,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															281,
															309
														],
														"referencedDeclaration": 309,
														"src": "3328:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "3321:46:2"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2795:444:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3257:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3268:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3256:22:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3302:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3301:9:2"
									},
									"scope": 351,
									"src": "3244:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3984:243:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "4068:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4072:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4068:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4075:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4060:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4060:28:2"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 308,
														"src": "4098:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4110:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "4114:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4098:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 306,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "4219:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 307,
												"nodeType": "Return",
												"src": "4212:8:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3380:504:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "3902:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "3913:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "3924:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3901:50:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 309,
												"src": "3975:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3974:9:2"
									},
									"scope": 351,
									"src": "3889:338:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "4738:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 320,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4762:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4765:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 319,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															350
														],
														"referencedDeclaration": 350,
														"src": "4755:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "4748:44:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4233:433:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "4684:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "4695:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4683:22:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "4729:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4728:9:2"
									},
									"scope": 351,
									"src": "4671:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "5398:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "5416:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5416:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 342,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5424:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5408:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5408:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 345,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "5454:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 346,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "5458:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5454:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 348,
												"nodeType": "Return",
												"src": "5447:12:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "4805:493:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 350,
												"src": "5316:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 350,
												"src": "5327:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 350,
												"src": "5338:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5338:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5315:50:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 350,
												"src": "5389:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5388:9:2"
									},
									"scope": 351,
									"src": "5303:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "760:4708:2"
						}
					],
					"src": "33:5436:2"
				},
				"id": 2
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Interfaces/ILQTYToken.sol",
					"exportedSymbols": {
						"ILQTYToken": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/IERC20.sol",
							"file": "../Dependencies/IERC20.sol",
							"id": 354,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 111,
							"src": "58:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/IERC2612.sol",
							"file": "../Dependencies/IERC2612.sol",
							"id": 355,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 156,
							"src": "95:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 356,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 110,
										"src": "159:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$110",
											"typeString": "contract IERC20"
										}
									},
									"id": 357,
									"nodeType": "InheritanceSpecifier",
									"src": "159:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 358,
										"name": "IERC2612",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 155,
										"src": "167:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612_$155",
											"typeString": "contract IERC2612"
										}
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "167:8:3"
								}
							],
							"contractDependencies": [
								110,
								155
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								155,
								110
							],
							"name": "ILQTYToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 363,
									"name": "CommunityIssuanceAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "_communityIssuanceAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "248:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "247:35:3"
									},
									"src": "214:69:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 367,
									"name": "LQTYStakingAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lqtyStakingAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 367,
												"src": "316:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:29:3"
									},
									"src": "288:57:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 371,
									"name": "LockupContractFactoryAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockupContractFactoryAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "388:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:39:3"
									},
									"src": "350:77:3"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f3a2568b",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToLQTYStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "490:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "507:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:34:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:3"
									},
									"scope": 384,
									"src": "463:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3c84b7c2",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDeploymentStartTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "595:9:3"
									},
									"scope": 384,
									"src": "539:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "135:548:3"
						}
					],
					"src": "33:651:3"
				},
				"id": 3
			},
			"contracts/contracts/LQTY/LockupContract.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/LQTY/LockupContract.sol",
					"exportedSymbols": {
						"LockupContract": [
							528
						]
					},
					"id": 529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/SafeMath.sol",
							"file": "../Dependencies/SafeMath.sol",
							"id": 387,
							"nodeType": "ImportDirective",
							"scope": 529,
							"sourceUnit": 352,
							"src": "58:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Interfaces/ILQTYToken.sol",
							"file": "../Interfaces/ILQTYToken.sol",
							"id": 388,
							"nodeType": "ImportDirective",
							"scope": 529,
							"sourceUnit": 385,
							"src": "97:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 528,
							"linearizedBaseContracts": [
								528
							],
							"name": "LockupContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 391,
									"libraryName": {
										"contractScope": null,
										"id": 389,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 351,
										"src": "1002:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$351",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "996:24:4",
									"typeName": {
										"id": 390,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1015:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "a3f4df7e",
									"id": 394,
									"mutability": "constant",
									"name": "NAME",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 528,
									"src": "1046:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 392,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1046:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c6f636b7570436f6e7472616374",
										"id": 393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1076:16:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d851e93a1a24828b3f3a9b69d24d0d5e4858d9a57d1ebe7ff7099376f0e8eb60",
											"typeString": "literal_string \"LockupContract\""
										},
										"value": "LockupContract"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "98e5f3c4",
									"id": 397,
									"mutability": "constant",
									"name": "SECONDS_IN_ONE_YEAR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 528,
									"src": "1099:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1099:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3331353336303030",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1142:8:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "31536000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 399,
									"mutability": "immutable",
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 528,
									"src": "1158:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 398,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1158:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f7af3c3",
									"id": 401,
									"mutability": "mutable",
									"name": "lqtyToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 528,
									"src": "1201:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILQTYToken_$384",
										"typeString": "contract ILQTYToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 400,
										"name": "ILQTYToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "1201:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILQTYToken_$384",
											"typeString": "contract ILQTYToken"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "251c1aa3",
									"id": 403,
									"mutability": "mutable",
									"name": "unlockTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 528,
									"src": "1319:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1319:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 409,
									"name": "LockupContractCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"indexed": false,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "1399:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"indexed": false,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "1421:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1398:40:4"
									},
									"src": "1371:68:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 413,
									"name": "LockupContractEmptied",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"mutability": "mutable",
												"name": "_LQTYwithdrawal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 413,
												"src": "1472:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1471:22:4"
									},
									"src": "1444:50:4"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1663:441:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 422,
														"name": "lqtyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1673:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 424,
																"name": "_lqtyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "1696:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 423,
															"name": "ILQTYToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1685:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILQTYToken_$384_$",
																"typeString": "type(contract ILQTYToken)"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1685:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														}
													},
													"src": "1673:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$384",
														"typeString": "contract ILQTYToken"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1673:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 429,
															"name": "_unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1942:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1886:55:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1886:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 432,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1964:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 433,
														"name": "_unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "1977:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1964:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1964:24:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 436,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2007:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 437,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2022:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2007:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2007:27:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 441,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2071:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 442,
															"name": "_unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2085:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "LockupContractCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2049:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2049:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "EmitStatement",
												"src": "2044:53:4"
											}
										]
									},
									"documentation": null,
									"id": 446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "_lqtyTokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "1553:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "1589:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "1620:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1620:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1543:99:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:0:4"
									},
									"scope": 528,
									"src": "1526:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2143:316:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 449,
														"name": "_requireCallerIsBeneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2153:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2153:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 452,
														"name": "_requireLockupDurationHasPassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2192:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2192:33:4"
											},
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "lqtyTokenCached",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 480,
														"src": "2236:26:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														},
														"typeName": {
															"contractScope": null,
															"id": 455,
															"name": "ILQTYToken",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 384,
															"src": "2236:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"argumentTypes": null,
													"id": 457,
													"name": "lqtyToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "2265:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$384",
														"typeString": "contract ILQTYToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:38:4"
											},
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "LQTYBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 480,
														"src": "2284:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 459,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2284:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 465,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2337:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LockupContract_$528",
																		"typeString": "contract LockupContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LockupContract_$528",
																		"typeString": "contract LockupContract"
																	}
																],
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2329:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2329:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2329:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 461,
															"name": "lqtyTokenCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2303:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2303:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2284:59:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 472,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2378:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 473,
															"name": "LQTYBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2391:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 469,
															"name": "lqtyTokenCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2353:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "2353:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2353:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2353:50:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 477,
															"name": "LQTYBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2440:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "LockupContractEmptied",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "2418:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "EmitStatement",
												"src": "2413:39:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b9470a46",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLQTY",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:4"
									},
									"scope": 528,
									"src": "2110:349:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2554:100:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2572:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2572:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2586:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2572:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2599:47:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318",
																"typeString": "literal_string \"LockupContract: caller is not the beneficiary\""
															},
															"value": "LockupContract: caller is not the beneficiary"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318",
																"typeString": "literal_string \"LockupContract: caller is not the beneficiary\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2564:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2564:83:4"
											}
										]
									},
									"documentation": null,
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireCallerIsBeneficiary",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:2:4"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:0:4"
									},
									"scope": 528,
									"src": "2501:153:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2717:111:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 497,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2735:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2735:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 499,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2754:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2735:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d757374206861766520706173736564",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2766:54:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5",
																"typeString": "literal_string \"LockupContract: The lockup duration must have passed\""
															},
															"value": "LockupContract: The lockup duration must have passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5",
																"typeString": "literal_string \"LockupContract: The lockup duration must have passed\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2727:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2727:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2727:94:4"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireLockupDurationHasPassed",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:2:4"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2717:0:4"
									},
									"scope": 528,
									"src": "2660:168:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2931:239:4",
										"statements": [
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "systemDeploymentTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 526,
														"src": "2941:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2941:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 512,
															"name": "lqtyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2969:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getDeploymentStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "2969:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2969:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2941:62:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 517,
																"name": "_unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3021:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 520,
																		"name": "SECONDS_IN_ONE_YEAR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3061:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 518,
																		"name": "systemDeploymentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "3036:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "3036:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3036:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3021:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374206265206174206c65617374206f6e6520796561722061667465722073797374656d206465706c6f796d656e74",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3083:79:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267",
																"typeString": "literal_string \"LockupContract: unlock time must be at least one year after system deployment\""
															},
															"value": "LockupContract: unlock time must be at least one year after system deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267",
																"typeString": "literal_string \"LockupContract: unlock time must be at least one year after system deployment\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3013:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "3013:150:4"
											}
										]
									},
									"documentation": null,
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "2899:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2899:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2898:18:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:0:4"
									},
									"scope": 528,
									"src": "2834:336:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 529,
							"src": "966:2206:4"
						}
					],
					"src": "33:3140:4"
				},
				"id": 4
			}
		}
	}
}