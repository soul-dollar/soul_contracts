{
	"id": "78a8ea82cf774f0b61d1d32cecfbc2df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LQTY/LQTYVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"../Interfaces/ILQTYToken.sol\";\n\ncontract LQTYVault  {\n\n    ILQTYToken public token;\n    address public stakingContract;\n    bool public isTokenSet;\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    event TokenAddressSet (address _token);\n\n    constructor(address _stakingContract)  {\n        require(_stakingContract != address(0),\"Invalid contract address\");\n        stakingContract = _stakingContract;\n        owner = msg.sender;\n    }\n\n    function setToken(address _token) external onlyOwner {\n        require(!isTokenSet, \"Token is already set\");\n        require (_token != address(0),\"Invalid token address\");\n        token = ILQTYToken(_token);\n        isTokenSet = true;\n        // Approve the staking contract to spend an unlimited amount of tokens\n        token.approve(stakingContract, type(uint256).max);     \n        emit TokenAddressSet(_token);\n    }\n\n    function renounceOwnership() external onlyOwner {\n        require(isTokenSet,\"Token address not yet set\");\n        owner = address(0);\n    }\n}"
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"../Dependencies/IERC20.sol\";\nimport \"../Dependencies/IERC2612.sol\";\n\ninterface ILQTYToken is IERC20, IERC2612 { \n   \n    // --- Events ---\n    \n    event CommunityIssuanceAddressSet(address _communityIssuanceAddress);\n    event LQTYStakingAddressSet(address _lqtyStakingAddress);\n    event LockupContractFactoryAddressSet(address _lockupContractFactoryAddress);\n\n    // --- Functions ---\n    \n    function sendToLQTYStaking(address _sender, uint256 _amount) external;\n\n    function getDeploymentStartTime() external view returns (uint256);\n\n    // function getLpRewardsEntitlement() external view returns (uint256);\n}\n"
			},
			"contracts/Dependencies/IERC2612.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * @dev Interface of the ERC2612 standard as defined in the EIP.\n *\n * Adds the {permit} method, which can be used to change one's\n * {IERC20-allowance} without having to send a transaction, by signing a\n * message. This allows users to spend tokens without having to hold Ether.\n *\n * See https://eips.ethereum.org/EIPS/eip-2612.\n * \n * Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\n */\ninterface IERC2612 {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 amount, \n                    uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n    \n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases `owner`'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     *\n     * `owner` can limit the time a Permit is valid for by setting `deadline` to \n     * a value in the near future. The deadline argument can be set to uint(-1) to \n     * create Permits that effectively never expire.\n     */\n    function nonces(address owner) external view returns (uint256);\n    \n    function version() external view returns (string memory);\n    function permitTypeHash() external view returns (bytes32);\n    function domainSeparator() external view returns (bytes32);\n}\n"
			},
			"contracts/Dependencies/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on the OpenZeppelin IER20 interface:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n *\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    \n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/Dependencies/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
						"version": 1
					}
				}
			},
			"contracts/Dependencies/IERC2612.sol": {
				"IERC2612": {
					"abi": [
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/",
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"domainSeparator()": "f698da25",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\",\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/IERC2612.sol\":\"IERC2612\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"ILQTYToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_communityIssuanceAddress",
									"type": "address"
								}
							],
							"name": "CommunityIssuanceAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lqtyStakingAddress",
									"type": "address"
								}
							],
							"name": "LQTYStakingAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lockupContractFactoryAddress",
									"type": "address"
								}
							],
							"name": "LockupContractFactoryAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeploymentStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToLQTYStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"domainSeparator()": "f698da25",
							"getDeploymentStartTime()": "3c84b7c2",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"sendToLQTYStaking(address,uint256)": "f3a2568b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_communityIssuanceAddress\",\"type\":\"address\"}],\"name\":\"CommunityIssuanceAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lqtyStakingAddress\",\"type\":\"address\"}],\"name\":\"LQTYStakingAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lockupContractFactoryAddress\",\"type\":\"address\"}],\"name\":\"LockupContractFactoryAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToLQTYStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/ILQTYToken.sol\":\"ILQTYToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]},\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]},\"contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0xebc139c37c6f7f7d1d29f5b94221f489138342ed78742bb9a87580225cd3dac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b142680d5881bde60a20130c55476ee778a860eca2c87d9b6c15cfa7ea7b662\",\"dweb:/ipfs/QmWt1r9LGUx4daohvTogWtVH4G9RCEQTC2CGfmCn1aKZTK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LQTY/LQTYVault.sol": {
				"LQTYVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenAddressSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isTokenSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ILQTYToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LQTY/LQTYVault.sol\":98:1160  contract LQTYVault  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LQTY/LQTYVault.sol\":390:584  constructor(address _stakingContract)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LQTY/LQTYVault.sol\":447:477  _stakingContract != address(0) */\n  dup2\n  and\n    /* \"contracts/LQTY/LQTYVault.sol\":439:505  require(_stakingContract != address(0),\"Invalid contract address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"contracts/LQTY/LQTYVault.sol\":439:505  require(_stakingContract != address(0),\"Invalid contract address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x18\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:615   */\n  0x496e76616c696420636f6e747261637420616464726573730000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:616   */\n  mstore\n    /* \"#utility.yul\":633:651   */\n  0x64\n  add\n    /* \"contracts/LQTY/LQTYVault.sol\":439:505  require(_stakingContract != address(0),\"Invalid contract address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/LQTY/LQTYVault.sol\":515:530  stakingContract */\n  0x01\n    /* \"contracts/LQTY/LQTYVault.sol\":515:549  stakingContract = _stakingContract */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/LQTY/LQTYVault.sol\":559:564  owner */\n  0x02\n    /* \"contracts/LQTY/LQTYVault.sol\":559:577  owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/LQTY/LQTYVault.sol\":567:577  msg.sender */\n  caller\n    /* \"contracts/LQTY/LQTYVault.sol\":559:577  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/LQTY/LQTYVault.sol\":98:1160  contract LQTYVault  {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_12:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_13\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_13:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:657   */\ntag_10:\n    /* \"contracts/LQTY/LQTYVault.sol\":98:1160  contract LQTYVault  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LQTY/LQTYVault.sol\":98:1160  contract LQTYVault  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x144fa6d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9ee7138c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LQTY/LQTYVault.sol\":590:1012  function setToken(address _token) external onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/LQTY/LQTYVault.sol\":1018:1158  function renounceOwnership() external onlyOwner {... */\n    tag_4:\n      tag_9\n      tag_14\n      jump\t// in\n        /* \"contracts/LQTY/LQTYVault.sol\":218:238  address public owner */\n    tag_5:\n      sload(0x02)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":218:238  address public owner */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LQTY/LQTYVault.sol\":190:212  bool public isTokenSet */\n    tag_6:\n      sload(0x01)\n      tag_19\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":678:692   */\n      swap1\n      iszero\n        /* \"#utility.yul\":671:693   */\n      iszero\n        /* \"#utility.yul\":653:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":190:212  bool public isTokenSet */\n      tag_17\n        /* \"#utility.yul\":513:700   */\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":154:184  address public stakingContract */\n    tag_7:\n      sload(0x01)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":125:148  ILQTYToken public token */\n    tag_8:\n      sload(0x00)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":590:1012  function setToken(address _token) external onlyOwner {... */\n    tag_12:\n        /* \"contracts/LQTY/LQTYVault.sol\":298:303  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/LQTY/LQTYVault.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/LQTY/LQTYVault.sol\":284:303  msg.sender == owner */\n      eq\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1133:1135   */\n      0x20\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1115:1136   */\n      mstore\n        /* \"#utility.yul\":1172:1174   */\n      0x0d\n        /* \"#utility.yul\":1152:1170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1145:1175   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":1191:1209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1184:1227   */\n      mstore\n        /* \"#utility.yul\":1244:1262   */\n      0x64\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"contracts/LQTY/LQTYVault.sol\":662:672  isTokenSet */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LQTY/LQTYVault.sol\":661:672  !isTokenSet */\n      iszero\n        /* \"contracts/LQTY/LQTYVault.sol\":653:697  require(!isTokenSet, \"Token is already set\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1475:1477   */\n      0x20\n        /* \"contracts/LQTY/LQTYVault.sol\":653:697  require(!isTokenSet, \"Token is already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1457:1478   */\n      mstore\n        /* \"#utility.yul\":1514:1516   */\n      0x14\n        /* \"#utility.yul\":1494:1512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1487:1517   */\n      mstore\n      shl(0x62, 0x151bdad95b881a5cc8185b1c9958591e481cd95d)\n        /* \"#utility.yul\":1533:1551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1526:1576   */\n      mstore\n        /* \"#utility.yul\":1593:1611   */\n      0x64\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":653:697  require(!isTokenSet, \"Token is already set\") */\n      tag_32\n        /* \"#utility.yul\":1273:1617   */\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":653:697  require(!isTokenSet, \"Token is already set\") */\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LQTY/LQTYVault.sol\":716:736  _token != address(0) */\n      dup2\n      and\n        /* \"contracts/LQTY/LQTYVault.sol\":707:761  require (_token != address(0),\"Invalid token address\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1824:1826   */\n      0x20\n        /* \"contracts/LQTY/LQTYVault.sol\":707:761  require (_token != address(0),\"Invalid token address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1806:1827   */\n      mstore\n        /* \"#utility.yul\":1863:1865   */\n      0x15\n        /* \"#utility.yul\":1843:1861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1836:1866   */\n      mstore\n      shl(0x58, 0x496e76616c696420746f6b656e2061646472657373)\n        /* \"#utility.yul\":1882:1900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1875:1926   */\n      mstore\n        /* \"#utility.yul\":1943:1961   */\n      0x64\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":707:761  require (_token != address(0),\"Invalid token address\") */\n      tag_32\n        /* \"#utility.yul\":1622:1967   */\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":707:761  require (_token != address(0),\"Invalid token address\") */\n    tag_38:\n        /* \"contracts/LQTY/LQTYVault.sol\":771:776  token */\n      0x00\n        /* \"contracts/LQTY/LQTYVault.sol\":771:797  token = ILQTYToken(_token) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"contracts/LQTY/LQTYVault.sol\":807:824  isTokenSet = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/LQTY/LQTYVault.sol\":913:962  token.approve(stakingContract, type(uint256).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/LQTY/LQTYVault.sol\":927:942  stakingContract */\n      swap3\n      and\n        /* \"contracts/LQTY/LQTYVault.sol\":913:962  token.approve(stakingContract, type(uint256).max) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2146:2197   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":2213:2231   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2206:2240   */\n      mstore\n        /* \"contracts/LQTY/LQTYVault.sol\":771:797  token = ILQTYToken(_token) */\n      swap1\n        /* \"contracts/LQTY/LQTYVault.sol\":913:926  token.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":2119:2137   */\n      0x44\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":913:962  token.approve(stakingContract, type(uint256).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      pop\n        /* \"contracts/LQTY/LQTYVault.sol\":982:1005  TokenAddressSet(_token) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      dup3\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"contracts/LQTY/LQTYVault.sol\":982:1005  TokenAddressSet(_token) */\n      0xd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":982:1005  TokenAddressSet(_token) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LQTY/LQTYVault.sol\":590:1012  function setToken(address _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LQTY/LQTYVault.sol\":1018:1158  function renounceOwnership() external onlyOwner {... */\n    tag_14:\n        /* \"contracts/LQTY/LQTYVault.sol\":298:303  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/LQTY/LQTYVault.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/LQTY/LQTYVault.sol\":284:303  msg.sender == owner */\n      eq\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1133:1135   */\n      0x20\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1115:1136   */\n      mstore\n        /* \"#utility.yul\":1172:1174   */\n      0x0d\n        /* \"#utility.yul\":1152:1170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1145:1175   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":1191:1209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1184:1227   */\n      mstore\n        /* \"#utility.yul\":1244:1262   */\n      0x64\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      tag_32\n        /* \"#utility.yul\":931:1268   */\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n    tag_49:\n        /* \"contracts/LQTY/LQTYVault.sol\":1084:1094  isTokenSet */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LQTY/LQTYVault.sol\":1076:1123  require(isTokenSet,\"Token address not yet set\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2735:2737   */\n      0x20\n        /* \"contracts/LQTY/LQTYVault.sol\":1076:1123  require(isTokenSet,\"Token address not yet set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2717:2738   */\n      mstore\n        /* \"#utility.yul\":2774:2776   */\n      0x19\n        /* \"#utility.yul\":2754:2772   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2747:2777   */\n      mstore\n        /* \"#utility.yul\":2813:2840   */\n      0x546f6b656e2061646472657373206e6f74207965742073657400000000000000\n        /* \"#utility.yul\":2793:2811   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2786:2841   */\n      mstore\n        /* \"#utility.yul\":2858:2876   */\n      0x64\n      add\n        /* \"contracts/LQTY/LQTYVault.sol\":1076:1123  require(isTokenSet,\"Token address not yet set\") */\n      tag_32\n        /* \"#utility.yul\":2533:2882   */\n      jump\n        /* \"contracts/LQTY/LQTYVault.sol\":1076:1123  require(isTokenSet,\"Token address not yet set\") */\n    tag_52:\n        /* \"contracts/LQTY/LQTYVault.sol\":1133:1138  owner */\n      0x02\n        /* \"contracts/LQTY/LQTYVault.sol\":1133:1151  owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/LQTY/LQTYVault.sol\":1018:1158  function renounceOwnership() external onlyOwner {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_11:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_57:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_58:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2251:2528   */\n    tag_46:\n        /* \"#utility.yul\":2318:2324   */\n      0x00\n        /* \"#utility.yul\":2371:2373   */\n      0x20\n        /* \"#utility.yul\":2359:2368   */\n      dup3\n        /* \"#utility.yul\":2350:2357   */\n      dup5\n        /* \"#utility.yul\":2346:2369   */\n      sub\n        /* \"#utility.yul\":2342:2374   */\n      slt\n        /* \"#utility.yul\":2339:2391   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2387:2388   */\n      0x00\n        /* \"#utility.yul\":2384:2385   */\n      dup1\n        /* \"#utility.yul\":2377:2389   */\n      revert\n        /* \"#utility.yul\":2339:2391   */\n    tag_67:\n        /* \"#utility.yul\":2419:2428   */\n      dup2\n        /* \"#utility.yul\":2413:2429   */\n      mload\n        /* \"#utility.yul\":2472:2477   */\n      dup1\n        /* \"#utility.yul\":2465:2478   */\n      iszero\n        /* \"#utility.yul\":2458:2479   */\n      iszero\n        /* \"#utility.yul\":2451:2456   */\n      dup2\n        /* \"#utility.yul\":2448:2480   */\n      eq\n        /* \"#utility.yul\":2438:2498   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2494:2495   */\n      0x00\n        /* \"#utility.yul\":2491:2492   */\n      dup1\n        /* \"#utility.yul\":2484:2496   */\n      revert\n\n    auxdata: 0xa2646970667358221220e624db13e42853253812978faee9658fe780c2fdd8e630b6e8e7b2df9466d8fc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:659:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:174:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:4"
																	},
																	{
																		"hexValue": "496e76616c696420636f6e74726163742061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:26:4",
																		"type": "",
																		"value": "Invalid contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:54:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "625:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "633:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "625:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:4",
														"type": ""
													}
												],
												"src": "309:348:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid contract address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104fc3803806104fc83398101604081905261002f916100b7565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e747261637420616464726573730000000000000000604482015260640160405180910390fd5b600180546001600160a01b039092166001600160a01b031992831617905560028054909116331790556100e7565b6000602082840312156100c957600080fd5b81516001600160a01b03811681146100e057600080fd5b9392505050565b610406806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063144fa6d714610067578063715018a61461007c5780638da5cb5b146100845780639ee7138c146100b4578063ee99205c146100d8578063fc0c546a146100eb575b600080fd5b61007a61007536600461037e565b6100fe565b005b61007a6102c9565b600254610097906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100c890600160a01b900460ff1681565b60405190151581526020016100ab565b600154610097906001600160a01b031681565b600054610097906001600160a01b031681565b6002546001600160a01b0316331461014d5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064015b60405180910390fd5b600154600160a01b900460ff161561019e5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc8185b1c9958591e481cd95d60621b6044820152606401610144565b6001600160a01b0381166101ec5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610144565b600080546001600160a01b0319166001600160a01b0383811691821790925560018054600160a01b60ff60a01b1982161790915560405163095ea7b360e01b81529216600483015260001960248301529063095ea7b3906044016020604051808303816000875af1158015610265573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028991906103ae565b506040516001600160a01b03821681527fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692669060200160405180910390a150565b6002546001600160a01b031633146103135760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606401610144565b600154600160a01b900460ff1661036c5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e2061646472657373206e6f742079657420736574000000000000006044820152606401610144565b600280546001600160a01b0319169055565b60006020828403121561039057600080fd5b81356001600160a01b03811681146103a757600080fd5b9392505050565b6000602082840312156103c057600080fd5b815180151581146103a757600080fdfea2646970667358221220e624db13e42853253812978faee9658fe780c2fdd8e630b6e8e7b2df9466d8fc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4FC CODESIZE SUB DUP1 PUSH2 0x4FC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x406 DUP1 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9EE7138C EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8185B1C9958591E481CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x3AE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xD82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2061646472657373206E6F74207965742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x24 0xDB SGT 0xE4 0x28 MSTORE8 0x25 CODESIZE SLT SWAP8 DUP16 0xAE 0xE9 PUSH6 0x8FE780C2FDD8 0xE6 ADDRESS 0xB6 0xE8 0xE7 0xB2 0xDF SWAP5 PUSH7 0xD8FC64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "98:1062:3:-:0;;;390:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;447:30:3;;439:66;;;;-1:-1:-1;;;439:66:3;;511:2:4;439:66:3;;;493:21:4;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;439:66:3;;;;;;;;515:15;:34;;-1:-1:-1;;;;;515:34:3;;;-1:-1:-1;;;;;;515:34:3;;;;;;559:5;:18;;;;;567:10;559:18;;;98:1062;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;309:348::-;98:1062:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isTokenSet_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_308": {
									"entryPoint": 713,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setToken_290": {
									"entryPoint": 254,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingContract_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILQTYToken_$188__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2884:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:4",
														"type": ""
													}
												],
												"src": "305:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "678:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "577:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "588:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "599:4:4",
														"type": ""
													}
												],
												"src": "513:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "834:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "834:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "876:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "907:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "912:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "903:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "903:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "916:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "899:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILQTYToken_$188__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "804:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "815:4:4",
														"type": ""
													}
												],
												"src": "705:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1105:163:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1122:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1156:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1167:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:4",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1145:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1195:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:18:4"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1211:15:4",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1184:43:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1236:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1248:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1244:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1236:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1082:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1096:4:4",
														"type": ""
													}
												],
												"src": "931:337:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:170:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1475:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1457:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1457:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1498:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1509:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1494:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1494:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1487:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1548:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1533:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:18:4"
																	},
																	{
																		"hexValue": "546f6b656e20697320616c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1553:22:4",
																		"type": "",
																		"value": "Token is already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:50:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:50:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1585:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1585:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1424:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1438:4:4",
														"type": ""
													}
												],
												"src": "1273:344:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:171:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1886:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:18:4"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1902:23:4",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1935:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1947:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1943:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1935:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1787:4:4",
														"type": ""
													}
												],
												"src": "1622:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2119:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2111:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2153:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2168:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2184:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2189:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2180:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2180:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2193:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2164:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2146:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2217:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2228:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2213:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2213:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2233:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2062:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2073:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2081:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2092:4:4",
														"type": ""
													}
												],
												"src": "1972:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:199:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2375:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2384:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2377:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2377:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2377:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2342:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:32:4"
															},
															"nodeType": "YulIf",
															"src": "2339:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2400:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2419:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2413:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2404:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2482:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2491:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2494:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2484:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2484:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2484:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2451:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2472:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2465:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2465:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2458:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2458:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2448:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:40:4"
															},
															"nodeType": "YulIf",
															"src": "2438:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2507:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2517:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2507:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2295:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2306:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2318:6:4",
														"type": ""
													}
												],
												"src": "2251:277:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:175:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2724:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2717:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2758:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2769:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2774:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2747:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2808:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2793:18:4"
																	},
																	{
																		"hexValue": "546f6b656e2061646472657373206e6f742079657420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2813:27:4",
																		"type": "",
																		"value": "Token address not yet set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2786:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2850:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2862:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2873:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2850:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2684:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2698:4:4",
														"type": ""
													}
												],
												"src": "2533:349:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ILQTYToken_$188__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token is already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Token address not yet set\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063144fa6d714610067578063715018a61461007c5780638da5cb5b146100845780639ee7138c146100b4578063ee99205c146100d8578063fc0c546a146100eb575b600080fd5b61007a61007536600461037e565b6100fe565b005b61007a6102c9565b600254610097906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100c890600160a01b900460ff1681565b60405190151581526020016100ab565b600154610097906001600160a01b031681565b600054610097906001600160a01b031681565b6002546001600160a01b0316331461014d5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064015b60405180910390fd5b600154600160a01b900460ff161561019e5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc8185b1c9958591e481cd95d60621b6044820152606401610144565b6001600160a01b0381166101ec5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610144565b600080546001600160a01b0319166001600160a01b0383811691821790925560018054600160a01b60ff60a01b1982161790915560405163095ea7b360e01b81529216600483015260001960248301529063095ea7b3906044016020604051808303816000875af1158015610265573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028991906103ae565b506040516001600160a01b03821681527fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692669060200160405180910390a150565b6002546001600160a01b031633146103135760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606401610144565b600154600160a01b900460ff1661036c5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e2061646472657373206e6f742079657420736574000000000000006044820152606401610144565b600280546001600160a01b0319169055565b60006020828403121561039057600080fd5b81356001600160a01b03811681146103a757600080fd5b9392505050565b6000602082840312156103c057600080fd5b815180151581146103a757600080fdfea2646970667358221220e624db13e42853253812978faee9658fe780c2fdd8e630b6e8e7b2df9466d8fc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9EE7138C EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8185B1C9958591E481CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x3AE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xD82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2061646472657373206E6F74207965742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x24 0xDB SGT 0xE4 0x28 MSTORE8 0x25 CODESIZE SLT SWAP8 DUP16 0xAE 0xE9 PUSH6 0x8FE780C2FDD8 0xE6 ADDRESS 0xB6 0xE8 0xE7 0xB2 0xDF SWAP5 PUSH7 0xD8FC64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "98:1062:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:422;;;;;;:::i;:::-;;:::i;:::-;;1018:140;;;:::i;218:20::-;;;;;-1:-1:-1;;;;;218:20:3;;;;;;-1:-1:-1;;;;;469:32:4;;;451:51;;439:2;424:18;218:20:3;;;;;;;;190:22;;;;;-1:-1:-1;;;190:22:3;;;;;;;;;678:14:4;;671:22;653:41;;641:2;626:18;190:22:3;513:187:4;154:30:3;;;;;-1:-1:-1;;;;;154:30:3;;;125:23;;;;;-1:-1:-1;;;;;125:23:3;;;590:422;298:5;;-1:-1:-1;;;;;298:5:3;284:10;:19;276:45;;;;-1:-1:-1;;;276:45:3;;1133:2:4;276:45:3;;;1115:21:4;1172:2;1152:18;;;1145:30;-1:-1:-1;;;1191:18:4;;;1184:43;1244:18;;276:45:3;;;;;;;;;662:10:::1;::::0;-1:-1:-1;;;662:10:3;::::1;;;661:11;653:44;;;::::0;-1:-1:-1;;;653:44:3;;1475:2:4;653:44:3::1;::::0;::::1;1457:21:4::0;1514:2;1494:18;;;1487:30;-1:-1:-1;;;1533:18:4;;;1526:50;1593:18;;653:44:3::1;1273:344:4::0;653:44:3::1;-1:-1:-1::0;;;;;716:20:3;::::1;707:54;;;::::0;-1:-1:-1;;;707:54:3;;1824:2:4;707:54:3::1;::::0;::::1;1806:21:4::0;1863:2;1843:18;;;1836:30;-1:-1:-1;;;1882:18:4;;;1875:51;1943:18;;707:54:3::1;1622:345:4::0;707:54:3::1;771:5;:26:::0;;-1:-1:-1;;;;;;771:26:3::1;-1:-1:-1::0;;;;;771:26:3;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;807:17:3;;-1:-1:-1;;;;;;;807:17:3;::::1;;::::0;;;913:49:::1;::::0;-1:-1:-1;;;913:49:3;;927:15;;913:49:::1;::::0;::::1;2146:51:4::0;-1:-1:-1;;2213:18:4;;;2206:34;771:26:3;913:13:::1;::::0;2119:18:4;;913:49:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;982:23:3::1;::::0;-1:-1:-1;;;;;469:32:4;;451:51;;982:23:3::1;::::0;439:2:4;424:18;982:23:3::1;;;;;;;590:422:::0;:::o;1018:140::-;298:5;;-1:-1:-1;;;;;298:5:3;284:10;:19;276:45;;;;-1:-1:-1;;;276:45:3;;1133:2:4;276:45:3;;;1115:21:4;1172:2;1152:18;;;1145:30;-1:-1:-1;;;1191:18:4;;;1184:43;1244:18;;276:45:3;931:337:4;276:45:3;1084:10:::1;::::0;-1:-1:-1;;;1084:10:3;::::1;;;1076:47;;;::::0;-1:-1:-1;;;1076:47:3;;2735:2:4;1076:47:3::1;::::0;::::1;2717:21:4::0;2774:2;2754:18;;;2747:30;2813:27;2793:18;;;2786:55;2858:18;;1076:47:3::1;2533:349:4::0;1076:47:3::1;1133:5;:18:::0;;-1:-1:-1;;;;;;1133:18:3::1;::::0;;1018:140::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;2251:277::-;2318:6;2371:2;2359:9;2350:7;2346:23;2342:32;2339:52;;;2387:1;2384;2377:12;2339:52;2419:9;2413:16;2472:5;2465:13;2458:21;2451:5;2448:32;2438:60;;2494:1;2491;2484:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isTokenSet()": "2371",
								"owner()": "2348",
								"renounceOwnership()": "28654",
								"setToken(address)": "infinite",
								"stakingContract()": "2392",
								"token()": "2414"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 390,
									"end": 584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 390,
									"end": 584,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 390,
									"end": 584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 447,
									"end": 477,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 447,
									"end": 477,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 439,
									"end": 505,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 589,
									"end": 615,
									"name": "PUSH",
									"source": 4,
									"value": "496E76616C696420636F6E747261637420616464726573730000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 616,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 439,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 439,
									"end": 505,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 439,
									"end": 505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 515,
									"end": 549,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 549,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 559,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 567,
									"end": 577,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 309,
									"end": 657,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 309,
									"end": 657,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1160,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e624db13e42853253812978faee9658fe780c2fdd8e630b6e8e7b2df9466d8fc64736f6c63430008140033",
									".code": [
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "144FA6D7"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "9EE7138C"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "EE99205C"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1160,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 590,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 590,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1018,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 218,
											"end": 238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 653,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 700,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 154,
											"end": 184,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 154,
											"end": 184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 125,
											"end": 148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 276,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 662,
											"end": 672,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 662,
											"end": 672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 662,
											"end": 672,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 662,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 662,
											"end": 672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 661,
											"end": 672,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 653,
											"end": 697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881A5CC8185B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1273,
											"end": 1617,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 653,
											"end": 697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 716,
											"end": 736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 716,
											"end": 736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 707,
											"end": 761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420746F6B656E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1926,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1622,
											"end": 1967,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 707,
											"end": 761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 771,
											"end": 776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 771,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 771,
											"end": 797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 824,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 807,
											"end": 824,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 962,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 913,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 927,
											"end": 942,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 927,
											"end": 942,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 913,
											"end": 962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2206,
											"end": 2240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 913,
											"end": 926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 913,
											"end": 962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 913,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "D82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266"
										},
										{
											"begin": 982,
											"end": 1005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1005,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1018,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 931,
											"end": 1268,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 276,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1094,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1084,
											"end": 1094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2738,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2840,
											"name": "PUSH",
											"source": 4,
											"value": "546F6B656E2061646472657373206E6F74207965742073657400000000000000"
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2841,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2858,
											"end": 2876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2533,
											"end": 2882,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1076,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2528,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2251,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2374,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2391,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2339,
											"end": 2391,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2391,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2339,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2477,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2479,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2438,
											"end": 2498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/IERC2612.sol",
								"contracts/Interfaces/ILQTYToken.sol",
								"contracts/LQTY/LQTYVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isTokenSet()": "9ee7138c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setToken(address)": "144fa6d7",
							"stakingContract()": "ee99205c",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isTokenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ILQTYToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LQTY/LQTYVault.sol\":\"LQTYVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]},\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]},\"contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0xebc139c37c6f7f7d1d29f5b94221f489138342ed78742bb9a87580225cd3dac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b142680d5881bde60a20130c55476ee778a860eca2c87d9b6c15cfa7ea7b662\",\"dweb:/ipfs/QmWt1r9LGUx4daohvTogWtVH4G9RCEQTC2CGfmCn1aKZTK\"]},\"contracts/LQTY/LQTYVault.sol\":{\"keccak256\":\"0x942276b39e24d113b568a9eb17c2a979e01e0354284b664f0fdcf63a40dd1d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3723223c54b5e5eb61f5d8dc57445b26a3a47a71fb404e31d9d68e7066894ab\",\"dweb:/ipfs/QmeEmvfCcdNtJ68CMTaopjaJsbji48V46DbHAkSUSQDRvb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 194,
								"contract": "contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ILQTYToken)188"
							},
							{
								"astId": 196,
								"contract": "contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "stakingContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 198,
								"contract": "contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "isTokenSet",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 200,
								"contract": "contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ILQTYToken)188": {
								"encoding": "inplace",
								"label": "contract ILQTYToken",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Dependencies/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:222:0",
								"text": " Based on the OpenZeppelin IER20 interface:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IERC20",
							"nameLocation": "291:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "304:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "384:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:9:0"
									},
									"scope": 110,
									"src": "375:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "436:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "522:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:9:0"
									},
									"scope": 110,
									"src": "513:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "587:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "810:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "827:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "819:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "846:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:6:0"
									},
									"scope": 110,
									"src": "801:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "884:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1162:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:9:0"
									},
									"scope": 110,
									"src": "1153:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "39509351",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1250:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "1293:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:37:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 110,
									"src": "1241:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a457c2d7",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1343:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "1386:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:42:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:6:0"
									},
									"scope": 110,
									"src": "1334:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1433:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2089:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2122:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2114:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2148:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:6:0"
									},
									"scope": 110,
									"src": "2080:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2160:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2470:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2491:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2507:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2499:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:51:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:6:0"
									},
									"scope": 110,
									"src": "2461:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2573:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:15:0"
									},
									"scope": 110,
									"src": "2564:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2632:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2664:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:15:0"
									},
									"scope": 110,
									"src": "2623:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2693:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2727:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:7:0"
									},
									"scope": 110,
									"src": "2684:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2744:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 100,
									"name": "Transfer",
									"nameLocation": "2913:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2938:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2922:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2960:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2944:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:57:0"
									},
									"src": "2907:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2985:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 109,
									"name": "Approval",
									"nameLocation": "3144:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3169:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3153:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3176:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:63:0"
									},
									"src": "3138:78:0"
								}
							],
							"scope": 111,
							"src": "281:2937:0",
							"usedErrors": [],
							"usedEvents": [
								100,
								109
							]
						}
					],
					"src": "33:3185:0"
				},
				"id": 0
			},
			"contracts/Dependencies/IERC2612.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/IERC2612.sol",
					"exportedSymbols": {
						"IERC2612": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC2612",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "58:429:1",
								"text": " @dev Interface of the ERC2612 standard as defined in the EIP.\n Adds the {permit} method, which can be used to change one's\n {IERC20-allowance} without having to send a transaction, by signing a\n message. This allows users to spend tokens without having to hold Ether.\n See https://eips.ethereum.org/EIPS/eip-2612.\n \n Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/"
							},
							"fullyImplemented": false,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC2612",
							"nameLocation": "498:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "513:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1361:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1376:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1368:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1391:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1408:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1445:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1437:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1461:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1455:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 123,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1472:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1464:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1483:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1475:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:118:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:1"
									},
									"scope": 155,
									"src": "1352:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1505:526:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases `owner`'s nonce by one. This\n prevents a signature from being used multiple times.\n `owner` can limit the time a Permit is valid for by setting `deadline` to \n a value in the near future. The deadline argument can be set to uint(-1) to \n create Permits that effectively never expire."
									},
									"functionSelector": "7ecebe00",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2045:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2060:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2052:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2051:15:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2090:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:1"
									},
									"scope": 155,
									"src": "2036:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "2118:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:2:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2151:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2151:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:15:1"
									},
									"scope": 155,
									"src": "2109:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "10ce43bd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTypeHash",
									"nameLocation": "2180:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2220:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:9:1"
									},
									"scope": 155,
									"src": "2171:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f698da25",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "domainSeparator",
									"nameLocation": "2243:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:9:1"
									},
									"scope": 155,
									"src": "2234:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "488:1807:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2263:1"
				},
				"id": 1
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces/ILQTYToken.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						],
						"IERC2612": [
							155
						],
						"ILQTYToken": [
							188
						]
					},
					"id": 189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 157,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/Dependencies/IERC20.sol",
							"file": "../Dependencies/IERC20.sol",
							"id": 158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 189,
							"sourceUnit": 111,
							"src": "58:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/IERC2612.sol",
							"file": "../Dependencies/IERC2612.sol",
							"id": 159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 189,
							"sourceUnit": 156,
							"src": "95:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 160,
										"name": "IERC20",
										"nameLocations": [
											"159:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 110,
										"src": "159:6:2"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "159:6:2"
								},
								{
									"baseName": {
										"id": 162,
										"name": "IERC2612",
										"nameLocations": [
											"167:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 155,
										"src": "167:8:2"
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "167:8:2"
								}
							],
							"canonicalName": "ILQTYToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 188,
							"linearizedBaseContracts": [
								188,
								155,
								110
							],
							"name": "ILQTYToken",
							"nameLocation": "145:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "3d2d65171cd82be2a82a4c8559f66bc443ecd480dffeacc3cf52caf9963e9a6f",
									"id": 167,
									"name": "CommunityIssuanceAddressSet",
									"nameLocation": "220:27:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_communityIssuanceAddress",
												"nameLocation": "256:25:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "248:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:35:2"
									},
									"src": "214:69:2"
								},
								{
									"anonymous": false,
									"eventSelector": "c03bd56bd5702c36b067ffe5fbcb0a58301813a6be63b16b7944b8181539de45",
									"id": 171,
									"name": "LQTYStakingAddressSet",
									"nameLocation": "294:21:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lqtyStakingAddress",
												"nameLocation": "324:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "316:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:29:2"
									},
									"src": "288:57:2"
								},
								{
									"anonymous": false,
									"eventSelector": "67fc41630409887e5790bb6a910e8638e72f5f11f10d75d94a2d91178c1108b9",
									"id": 175,
									"name": "LockupContractFactoryAddressSet",
									"nameLocation": "356:31:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockupContractFactoryAddress",
												"nameLocation": "396:29:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "388:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:39:2"
									},
									"src": "350:77:2"
								},
								{
									"functionSelector": "f3a2568b",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToLQTYStaking",
									"nameLocation": "472:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "515:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "507:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:34:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:2"
									},
									"scope": 188,
									"src": "463:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3c84b7c2",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDeploymentStartTime",
									"nameLocation": "548:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:9:2"
									},
									"scope": 188,
									"src": "539:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 189,
							"src": "135:548:2",
							"usedErrors": [],
							"usedEvents": [
								100,
								109,
								167,
								171,
								175
							]
						}
					],
					"src": "33:651:2"
				},
				"id": 2
			},
			"contracts/LQTY/LQTYVault.sol": {
				"ast": {
					"absolutePath": "contracts/LQTY/LQTYVault.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						],
						"IERC2612": [
							155
						],
						"ILQTYToken": [
							188
						],
						"LQTYVault": [
							309
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 190,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/Interfaces/ILQTYToken.sol",
							"file": "../Interfaces/ILQTYToken.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 189,
							"src": "58:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LQTYVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 309,
							"linearizedBaseContracts": [
								309
							],
							"name": "LQTYVault",
							"nameLocation": "107:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 194,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "143:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "125:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILQTYToken_$188",
										"typeString": "contract ILQTYToken"
									},
									"typeName": {
										"id": 193,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 192,
											"name": "ILQTYToken",
											"nameLocations": [
												"125:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 188,
											"src": "125:10:3"
										},
										"referencedDeclaration": 188,
										"src": "125:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILQTYToken_$188",
											"typeString": "contract ILQTYToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 196,
									"mutability": "mutable",
									"name": "stakingContract",
									"nameLocation": "169:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "154:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 195,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ee7138c",
									"id": 198,
									"mutability": "mutable",
									"name": "isTokenSet",
									"nameLocation": "202:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "190:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 197,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "190:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 200,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "233:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "218:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 199,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "266:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 203,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "284:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "288:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "284:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 205,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "298:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "284:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "305:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "276:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "276:45:3"
											},
											{
												"id": 210,
												"nodeType": "PlaceholderStatement",
												"src": "331:1:3"
											}
										]
									},
									"id": 212,
									"name": "onlyOwner",
									"nameLocation": "254:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:3"
									},
									"src": "245:94:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "d82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266",
									"id": 216,
									"name": "TokenAddressSet",
									"nameLocation": "351:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "376:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "368:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:16:3"
									},
									"src": "345:39:3"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "429:155:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "_stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "447:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "475:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "467:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "467:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "467:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "447:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6e74726163742061646472657373",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															},
															"value": "Invalid contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "439:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "439:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "439:66:3"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "515:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 232,
														"name": "_stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "533:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "515:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "515:34:3"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 235,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "559:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 236,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "567:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "571:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "567:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "559:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "559:18:3"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "_stakingContract",
												"nameLocation": "410:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "402:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:26:3"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:3"
									},
									"scope": 309,
									"src": "390:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "643:369:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "661:11:3",
															"subExpression": {
																"id": 249,
																"name": "isTokenSet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "662:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20697320616c726561647920736574",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "674:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327",
																"typeString": "literal_string \"Token is already set\""
															},
															"value": "Token is already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327",
																"typeString": "literal_string \"Token is already set\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "653:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "653:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "716:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "734:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "726:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 256,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "726:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "726:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "716:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "737:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "707:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "707:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "707:54:3"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 264,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "771:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$188",
															"typeString": "contract ILQTYToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 266,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "790:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 265,
															"name": "ILQTYToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "779:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILQTYToken_$188_$",
																"typeString": "type(contract ILQTYToken)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "779:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$188",
															"typeString": "contract ILQTYToken"
														}
													},
													"src": "771:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$188",
														"typeString": "contract ILQTYToken"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "771:26:3"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 270,
														"name": "isTokenSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "807:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "820:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "807:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "807:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "927:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "949:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 279,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "949:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 278,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "944:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "944:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "958:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "944:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 274,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "913:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$188",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "919:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "913:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "913:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "913:49:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 286,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "998:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "TokenAddressSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "982:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "EmitStatement",
												"src": "977:28:3"
											}
										]
									},
									"functionSelector": "144fa6d7",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 245,
												"name": "onlyOwner",
												"nameLocations": [
													"633:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "633:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "633:9:3"
										}
									],
									"name": "setToken",
									"nameLocation": "599:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "616:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "608:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:16:3"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:3"
									},
									"scope": 309,
									"src": "590:422:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1066:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "isTokenSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1084:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2061646472657373206e6f742079657420736574",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1095:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f",
																"typeString": "literal_string \"Token address not yet set\""
															},
															"value": "Token address not yet set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f",
																"typeString": "literal_string \"Token address not yet set\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1076:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1076:47:3"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "1133:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1149:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 301,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1141:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1141:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1133:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1133:18:3"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 292,
												"name": "onlyOwner",
												"nameLocations": [
													"1056:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "1056:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1056:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1027:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1044:2:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:0:3"
									},
									"scope": 309,
									"src": "1018:140:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 310,
							"src": "98:1062:3",
							"usedErrors": [],
							"usedEvents": [
								216
							]
						}
					],
					"src": "33:1127:3"
				},
				"id": 3
			}
		}
	}
}