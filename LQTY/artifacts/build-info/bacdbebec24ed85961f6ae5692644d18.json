{
	"id": "bacdbebec24ed85961f6ae5692644d18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LQTY/LockupContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"../Dependencies/SafeMath.sol\";\nimport \"../Interfaces/ILQTYToken.sol\";\n\n/*\n* The lockup contract architecture utilizes a single LockupContract, with an unlockTime. The unlockTime is passed as an argument \n* to the LockupContract's constructor. The contract's balance can be withdrawn by the beneficiary when block.timestamp > unlockTime. \n* At construction, the contract checks that unlockTime is at least one year later than the Liquity system's deployment time. \n\n* Within the first year from deployment, the deployer of the LQTYToken (Liquity AG's address) may transfer LQTY only to valid \n* LockupContracts, and no other addresses (this is enforced in LQTYToken.sol's transfer() function).\n* \n* The above two restrictions ensure that until one year after system deployment, LQTY tokens originating from Liquity AG cannot \n* enter circulating supply and cannot be staked to earn system revenue.\n*/\ncontract LockupContract {\n    using SafeMath for uint;\n\n    // --- Data ---\n    string constant public NAME = \"LockupContract\";\n\n    uint constant public SECONDS_IN_ONE_YEAR = 31536000; \n\n    address public immutable beneficiary;\n\n    ILQTYToken public lqtyToken;\n\n    // Unlock time is the Unix point in time at which the beneficiary can withdraw.\n    uint public unlockTime;\n\n    // --- Events ---\n\n    event LockupContractCreated(address _beneficiary, uint _unlockTime);\n    event LockupContractEmptied(uint _LQTYwithdrawal);\n\n    // --- Functions ---\n\n    constructor \n    (\n        address _lqtyTokenAddress, \n        address _beneficiary, \n        uint _unlockTime\n    )\n    {\n        lqtyToken = ILQTYToken(_lqtyTokenAddress);\n\n        /*\n        * Set the unlock time to a chosen instant in the future, as long as it is at least 1 year after\n        * the system was deployed \n        */\n        _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime);\n        unlockTime = _unlockTime;\n        \n        beneficiary =  _beneficiary;\n        emit LockupContractCreated(_beneficiary, _unlockTime);\n    }\n\n    function withdrawLQTY() external {\n        _requireCallerIsBeneficiary();\n        _requireLockupDurationHasPassed();\n\n        ILQTYToken lqtyTokenCached = lqtyToken;\n        uint LQTYBalance = lqtyTokenCached.balanceOf(address(this));\n        lqtyTokenCached.transfer(beneficiary, LQTYBalance);\n        emit LockupContractEmptied(LQTYBalance);\n    }\n\n    // --- 'require' functions ---\n\n    function _requireCallerIsBeneficiary() internal view {\n        require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\");\n    }\n\n    function _requireLockupDurationHasPassed() internal view {\n        require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\");\n    }\n\n    function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {\n        uint systemDeploymentTime = lqtyToken.getDeploymentStartTime();\n        require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\");\n    }\n}\n"
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"../Dependencies/IERC20.sol\";\nimport \"../Dependencies/IERC2612.sol\";\n\ninterface ILQTYToken is IERC20, IERC2612 { \n   \n    // --- Events ---\n    \n    event CommunityIssuanceAddressSet(address _communityIssuanceAddress);\n    event LQTYStakingAddressSet(address _lqtyStakingAddress);\n    event LockupContractFactoryAddressSet(address _lockupContractFactoryAddress);\n\n    // --- Functions ---\n    \n    function sendToLQTYStaking(address _sender, uint256 _amount) external;\n\n    function getDeploymentStartTime() external view returns (uint256);\n\n    // function getLpRewardsEntitlement() external view returns (uint256);\n}\n"
			},
			"contracts/Dependencies/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on OpenZeppelin's SafeMath:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n *\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/Dependencies/IERC2612.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * @dev Interface of the ERC2612 standard as defined in the EIP.\n *\n * Adds the {permit} method, which can be used to change one's\n * {IERC20-allowance} without having to send a transaction, by signing a\n * message. This allows users to spend tokens without having to hold Ether.\n *\n * See https://eips.ethereum.org/EIPS/eip-2612.\n * \n * Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\n */\ninterface IERC2612 {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 amount, \n                    uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n    \n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases `owner`'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     *\n     * `owner` can limit the time a Permit is valid for by setting `deadline` to \n     * a value in the near future. The deadline argument can be set to uint(-1) to \n     * create Permits that effectively never expire.\n     */\n    function nonces(address owner) external view returns (uint256);\n    \n    function version() external view returns (string memory);\n    function permitTypeHash() external view returns (bytes32);\n    function domainSeparator() external view returns (bytes32);\n}\n"
			},
			"contracts/Dependencies/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on the OpenZeppelin IER20 interface:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n *\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    \n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/Dependencies/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
						"version": 1
					}
				}
			},
			"contracts/Dependencies/IERC2612.sol": {
				"IERC2612": {
					"abi": [
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/",
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"domainSeparator()": "f698da25",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\",\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/IERC2612.sol\":\"IERC2612\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dependencies/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;760:4708:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
									".code": [
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/IERC2612.sol",
								"contracts/Dependencies/SafeMath.sol",
								"contracts/Interfaces/ILQTYToken.sol",
								"contracts/LQTY/LockupContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol",
						"version": 1
					}
				}
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"ILQTYToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_communityIssuanceAddress",
									"type": "address"
								}
							],
							"name": "CommunityIssuanceAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lqtyStakingAddress",
									"type": "address"
								}
							],
							"name": "LQTYStakingAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lockupContractFactoryAddress",
									"type": "address"
								}
							],
							"name": "LockupContractFactoryAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeploymentStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToLQTYStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"domainSeparator()": "f698da25",
							"getDeploymentStartTime()": "3c84b7c2",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"sendToLQTYStaking(address,uint256)": "f3a2568b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_communityIssuanceAddress\",\"type\":\"address\"}],\"name\":\"CommunityIssuanceAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lqtyStakingAddress\",\"type\":\"address\"}],\"name\":\"LQTYStakingAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lockupContractFactoryAddress\",\"type\":\"address\"}],\"name\":\"LockupContractFactoryAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToLQTYStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/ILQTYToken.sol\":\"ILQTYToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]},\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]},\"contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0xebc139c37c6f7f7d1d29f5b94221f489138342ed78742bb9a87580225cd3dac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b142680d5881bde60a20130c55476ee778a860eca2c87d9b6c15cfa7ea7b662\",\"dweb:/ipfs/QmWt1r9LGUx4daohvTogWtVH4G9RCEQTC2CGfmCn1aKZTK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LQTY/LockupContract.sol": {
				"LockupContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lqtyTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_unlockTime",
									"type": "uint256"
								}
							],
							"name": "LockupContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_LQTYwithdrawal",
									"type": "uint256"
								}
							],
							"name": "LockupContractEmptied",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NAME",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_IN_ONE_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lqtyToken",
							"outputs": [
								{
									"internalType": "contract ILQTYToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawLQTY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LQTY/LockupContract.sol\":966:3156  contract LockupContract {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/LQTY/LockupContract.sol\":1526:2088  constructor ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LQTY/LockupContract.sol\":1657:1666  lqtyToken */\n  0x00\n    /* \"contracts/LQTY/LockupContract.sol\":1657:1698  lqtyToken = ILQTYToken(_lqtyTokenAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/LQTY/LockupContract.sol\":1870:1938  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime) */\n  tag_6\n    /* \"contracts/LQTY/LockupContract.sol\":1926:1937  _unlockTime */\n  dup2\n    /* \"contracts/LQTY/LockupContract.sol\":1870:1925  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment */\n  tag_7\n    /* \"contracts/LQTY/LockupContract.sol\":1870:1938  _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(_unlockTime) */\n  jump\t// in\ntag_6:\n    /* \"contracts/LQTY/LockupContract.sol\":1948:1958  unlockTime */\n  0x01\n    /* \"contracts/LQTY/LockupContract.sol\":1948:1972  unlockTime = _unlockTime */\n  dup2\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LQTY/LockupContract.sol\":1991:2018  beneficiary =  _beneficiary */\n  dup3\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/LQTY/LockupContract.sol\":2033:2081  LockupContractCreated(_beneficiary, _unlockTime) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":729:780   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":811:813   */\n  0x20\n    /* \"#utility.yul\":796:814   */\n  dup3\n  add\n    /* \"#utility.yul\":789:823   */\n  dup4\n  swap1\n  mstore\n    /* \"contracts/LQTY/LockupContract.sol\":2033:2081  LockupContractCreated(_beneficiary, _unlockTime) */\n  0x5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54\n  swap2\n    /* \"#utility.yul\":702:720   */\n  add\n    /* \"contracts/LQTY/LockupContract.sol\":2033:2081  LockupContractCreated(_beneficiary, _unlockTime) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/LQTY/LockupContract.sol\":1526:2088  constructor ... */\n  pop\n  pop\n  pop\n    /* \"contracts/LQTY/LockupContract.sol\":966:3156  contract LockupContract {... */\n  jump(tag_28)\n    /* \"contracts/LQTY/LockupContract.sol\":2818:3154  function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {... */\ntag_7:\n    /* \"contracts/LQTY/LockupContract.sol\":2925:2950  uint systemDeploymentTime */\n  0x00\n    /* \"contracts/LQTY/LockupContract.sol\":2953:2962  lqtyToken */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LQTY/LockupContract.sol\":2953:2985  lqtyToken.getDeploymentStartTime */\n  and\n  0x3c84b7c2\n    /* \"contracts/LQTY/LockupContract.sol\":2953:2987  lqtyToken.getDeploymentStartTime() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_13:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/LQTY/LockupContract.sol\":2925:2987  uint systemDeploymentTime = lqtyToken.getDeploymentStartTime() */\n  swap1\n  pop\n    /* \"contracts/LQTY/LockupContract.sol\":3020:3065  systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  tag_16\n    /* \"contracts/LQTY/LockupContract.sol\":2925:2987  uint systemDeploymentTime = lqtyToken.getDeploymentStartTime() */\n  dup2\n    /* \"contracts/LQTY/LockupContract.sol\":1142:1150  31536000 */\n  0x01e13380\n    /* \"contracts/LQTY/LockupContract.sol\":3020:3044  systemDeploymentTime.add */\n  tag_17\n    /* \"contracts/LQTY/LockupContract.sol\":3020:3065  systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  jump\t// in\ntag_16:\n    /* \"contracts/LQTY/LockupContract.sol\":3005:3016  _unlockTime */\n  dup3\n    /* \"contracts/LQTY/LockupContract.sol\":3005:3065  _unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR) */\n  lt\n  iszero\n    /* \"contracts/LQTY/LockupContract.sol\":2997:3147  require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1225:1227   */\n  0x20\n    /* \"contracts/LQTY/LockupContract.sol\":2997:3147  require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1207:1228   */\n  mstore\n    /* \"#utility.yul\":1264:1266   */\n  0x4d\n    /* \"#utility.yul\":1244:1262   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1237:1267   */\n  mstore\n    /* \"#utility.yul\":1303:1337   */\n  0x4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374\n    /* \"#utility.yul\":1283:1301   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1276:1338   */\n  mstore\n    /* \"#utility.yul\":1374:1408   */\n  0x206265206174206c65617374206f6e6520796561722061667465722073797374\n    /* \"#utility.yul\":1354:1372   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1347:1409   */\n  mstore\n  shl(0x9a, 0x195b4819195c1b1bde5b595b9d)\n    /* \"#utility.yul\":1425:1444   */\n  0x84\n  dup3\n  add\n    /* \"#utility.yul\":1418:1462   */\n  mstore\n    /* \"#utility.yul\":1479:1498   */\n  0xa4\n  add\n    /* \"contracts/LQTY/LockupContract.sol\":2997:3147  require(_unlockTime >= systemDeploymentTime.add(SECONDS_IN_ONE_YEAR), \"LockupContract: unlock time must be at least one year after system deployment\") */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/LQTY/LockupContract.sol\":2915:3154  {... */\n  pop\n    /* \"contracts/LQTY/LockupContract.sol\":2818:3154  function _requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint _unlockTime) internal view {... */\n  pop\n  jump\t// out\n    /* \"contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/Dependencies/SafeMath.sol\":1063:1070  uint256 */\n  0x00\n  dup1\n    /* \"contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n  tag_22\n    /* \"contracts/Dependencies/SafeMath.sol\":1098:1099  b */\n  dup4\n    /* \"contracts/Dependencies/SafeMath.sol\":1094:1095  a */\n  dup6\n    /* \"contracts/Dependencies/SafeMath.sol\":1094:1099  a + b */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/Dependencies/SafeMath.sol\":1082:1099  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/Dependencies/SafeMath.sol\":1122:1123  a */\n  dup4\n    /* \"contracts/Dependencies/SafeMath.sol\":1117:1118  c */\n  dup2\n    /* \"contracts/Dependencies/SafeMath.sol\":1117:1123  c >= a */\n  lt\n  iszero\n    /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1938:1940   */\n  0x20\n    /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1920:1941   */\n  mstore\n    /* \"#utility.yul\":1977:1979   */\n  0x1b\n    /* \"#utility.yul\":1957:1975   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1950:1980   */\n  mstore\n    /* \"#utility.yul\":2016:2045   */\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n    /* \"#utility.yul\":1996:2014   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1989:2046   */\n  mstore\n    /* \"#utility.yul\":2063:2081   */\n  0x64\n  add\n    /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_19\n    /* \"#utility.yul\":1736:2087   */\n  jump\n    /* \"contracts/Dependencies/SafeMath.sol\":1109:1155  require(c >= a, \"SafeMath: addition overflow\") */\ntag_24:\n    /* \"contracts/Dependencies/SafeMath.sol\":1173:1174  c */\n  swap1\n  pop\n    /* \"contracts/Dependencies/SafeMath.sol\":1005:1181  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_21:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_27:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_30:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:550   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_32:\n    /* \"#utility.yul\":392:432   */\n  tag_33\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_27\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_34\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_27\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":529:538   */\n  dup5\n    /* \"#utility.yul\":525:543   */\n  add\n    /* \"#utility.yul\":519:544   */\n  mload\n    /* \"#utility.yul\":509:544   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:550   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":834:1018   */\ntag_15:\n    /* \"#utility.yul\":904:910   */\n  0x00\n    /* \"#utility.yul\":957:959   */\n  0x20\n    /* \"#utility.yul\":945:954   */\n  dup3\n    /* \"#utility.yul\":936:943   */\n  dup5\n    /* \"#utility.yul\":932:955   */\n  sub\n    /* \"#utility.yul\":928:960   */\n  slt\n    /* \"#utility.yul\":925:977   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":970:971   */\n  dup1\n    /* \"#utility.yul\":963:975   */\n  revert\n    /* \"#utility.yul\":925:977   */\ntag_37:\n  pop\n    /* \"#utility.yul\":996:1012   */\n  mload\n  swap2\n    /* \"#utility.yul\":834:1018   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1731   */\ntag_23:\n    /* \"#utility.yul\":1574:1583   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1595:1605   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1592:1725   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":1647:1657   */\n  0x4e487b71\n    /* \"#utility.yul\":1642:1645   */\n  0xe0\n    /* \"#utility.yul\":1638:1658   */\n  shl\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1628:1659   */\n  mstore\n    /* \"#utility.yul\":1682:1686   */\n  0x11\n    /* \"#utility.yul\":1679:1680   */\n  0x04\n    /* \"#utility.yul\":1672:1687   */\n  mstore\n    /* \"#utility.yul\":1710:1714   */\n  0x24\n    /* \"#utility.yul\":1707:1708   */\n  0x00\n    /* \"#utility.yul\":1700:1715   */\n  revert\n    /* \"#utility.yul\":1736:2087   */\ntag_28:\n    /* \"contracts/LQTY/LockupContract.sol\":966:3156  contract LockupContract {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LQTY/LockupContract.sol\":966:3156  contract LockupContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f7af3c3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x251c1aa3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x98e5f3c4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3f4df7e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb9470a46\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LQTY/LockupContract.sol\":1201:1228  ILQTYToken public lqtyToken */\n    tag_3:\n      sload(0x00)\n      tag_9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":196:228   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":178:229   */\n      dup2\n      mstore\n        /* \"#utility.yul\":166:168   */\n      0x20\n        /* \"#utility.yul\":151:169   */\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":1201:1228  ILQTYToken public lqtyToken */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LQTY/LockupContract.sol\":1319:1341  uint public unlockTime */\n    tag_4:\n      tag_13\n      sload(0x01)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":386:411   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":374:376   */\n      0x20\n        /* \"#utility.yul\":359:377   */\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":1319:1341  uint public unlockTime */\n      tag_11\n        /* \"#utility.yul\":240:417   */\n      jump\n        /* \"contracts/LQTY/LockupContract.sol\":1158:1194  address public immutable beneficiary */\n    tag_5:\n      tag_9\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n      dup2\n      jump\n        /* \"contracts/LQTY/LockupContract.sol\":1099:1150  uint constant public SECONDS_IN_ONE_YEAR = 31536000 */\n    tag_6:\n      tag_13\n        /* \"contracts/LQTY/LockupContract.sol\":1142:1150  31536000 */\n      0x01e13380\n        /* \"contracts/LQTY/LockupContract.sol\":1099:1150  uint constant public SECONDS_IN_ONE_YEAR = 31536000 */\n      dup2\n      jump\n        /* \"contracts/LQTY/LockupContract.sol\":1046:1092  string constant public NAME = \"LockupContract\" */\n    tag_7:\n      tag_24\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x92, 0x131bd8dadd5c10dbdb9d1c9858dd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"contracts/LQTY/LockupContract.sol\":2094:2443  function withdrawLQTY() external {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n    tag_29:\n        /* \"contracts/LQTY/LockupContract.sol\":2137:2166  _requireCallerIsBeneficiary() */\n      tag_31\n        /* \"contracts/LQTY/LockupContract.sol\":2137:2164  _requireCallerIsBeneficiary */\n      tag_32\n        /* \"contracts/LQTY/LockupContract.sol\":2137:2166  _requireCallerIsBeneficiary() */\n      jump\t// in\n    tag_31:\n        /* \"contracts/LQTY/LockupContract.sol\":2176:2209  _requireLockupDurationHasPassed() */\n      tag_33\n        /* \"contracts/LQTY/LockupContract.sol\":2176:2207  _requireLockupDurationHasPassed */\n      tag_34\n        /* \"contracts/LQTY/LockupContract.sol\":2176:2209  _requireLockupDurationHasPassed() */\n      jump\t// in\n    tag_33:\n        /* \"contracts/LQTY/LockupContract.sol\":2220:2246  ILQTYToken lqtyTokenCached */\n      0x00\n        /* \"contracts/LQTY/LockupContract.sol\":2249:2258  lqtyToken */\n      dup1\n      sload\n        /* \"contracts/LQTY/LockupContract.sol\":2287:2327  lqtyTokenCached.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LQTY/LockupContract.sol\":2321:2325  this */\n      address\n        /* \"contracts/LQTY/LockupContract.sol\":2287:2327  lqtyTokenCached.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":178:229   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LQTY/LockupContract.sol\":2249:2258  lqtyToken */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/LQTY/LockupContract.sol\":2220:2246  ILQTYToken lqtyTokenCached */\n      swap1\n        /* \"contracts/LQTY/LockupContract.sol\":2249:2258  lqtyToken */\n      dup3\n      swap1\n        /* \"contracts/LQTY/LockupContract.sol\":2287:2312  lqtyTokenCached.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":151:169   */\n      0x24\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":2287:2327  lqtyTokenCached.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/LQTY/LockupContract.sol\":2337:2387  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LQTY/LockupContract.sol\":2362:2373  beneficiary */\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n        /* \"#utility.yul\":1564:1596   */\n      dup2\n      and\n        /* \"contracts/LQTY/LockupContract.sol\":2337:2387  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1546:1597   */\n      mstore\n        /* \"#utility.yul\":1613:1631   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1606:1640   */\n      dup4\n      swap1\n      mstore\n      swap2\n      swap3\n      pop\n        /* \"contracts/LQTY/LockupContract.sol\":2337:2361  lqtyTokenCached.transfer */\n      swap1\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1519:1537   */\n      0x44\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":2337:2387  lqtyTokenCached.transfer(beneficiary, LQTYBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      pop\n        /* \"contracts/LQTY/LockupContract.sol\":2402:2436  LockupContractEmptied(LQTYBalance) */\n      mload(0x40)\n        /* \"#utility.yul\":386:411   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LQTY/LockupContract.sol\":2402:2436  LockupContractEmptied(LQTYBalance) */\n      0x7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f\n      swap1\n        /* \"#utility.yul\":374:376   */\n      0x20\n        /* \"#utility.yul\":359:377   */\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":2402:2436  LockupContractEmptied(LQTYBalance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LQTY/LockupContract.sol\":2127:2443  {... */\n      pop\n      pop\n        /* \"contracts/LQTY/LockupContract.sol\":2094:2443  function withdrawLQTY() external {... */\n      jump\t// out\n        /* \"contracts/LQTY/LockupContract.sol\":2485:2638  function _requireCallerIsBeneficiary() internal view {... */\n    tag_32:\n        /* \"contracts/LQTY/LockupContract.sol\":2556:2566  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LQTY/LockupContract.sol\":2570:2581  beneficiary */\n      immutable(\"0x0a5704b831f80607deaeb221a4d2eb7efb42b57a7915894b2d2f932b0cf5a43e\")\n        /* \"contracts/LQTY/LockupContract.sol\":2556:2581  msg.sender == beneficiary */\n      and\n      eq\n        /* \"contracts/LQTY/LockupContract.sol\":2548:2631  require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2135:2137   */\n      0x20\n        /* \"contracts/LQTY/LockupContract.sol\":2548:2631  require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2117:2138   */\n      mstore\n        /* \"#utility.yul\":2174:2176   */\n      0x2d\n        /* \"#utility.yul\":2154:2172   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2147:2177   */\n      mstore\n        /* \"#utility.yul\":2213:2247   */\n      0x4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468\n        /* \"#utility.yul\":2193:2211   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2186:2248   */\n      mstore\n      shl(0x98, 0x652062656e6566696369617279)\n        /* \"#utility.yul\":2264:2282   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2257:2300   */\n      mstore\n        /* \"#utility.yul\":2317:2336   */\n      0x84\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":2548:2631  require(msg.sender == beneficiary, \"LockupContract: caller is not the beneficiary\") */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/LQTY/LockupContract.sol\":2485:2638  function _requireCallerIsBeneficiary() internal view {... */\n      jump\t// out\n        /* \"contracts/LQTY/LockupContract.sol\":2644:2812  function _requireLockupDurationHasPassed() internal view {... */\n    tag_34:\n        /* \"contracts/LQTY/LockupContract.sol\":2738:2748  unlockTime */\n      sload(0x01)\n        /* \"contracts/LQTY/LockupContract.sol\":2719:2734  block.timestamp */\n      timestamp\n        /* \"contracts/LQTY/LockupContract.sol\":2719:2748  block.timestamp >= unlockTime */\n      lt\n      iszero\n        /* \"contracts/LQTY/LockupContract.sol\":2711:2805  require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"contracts/LQTY/LockupContract.sol\":2711:2805  require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2531:2552   */\n      mstore\n        /* \"#utility.yul\":2588:2590   */\n      0x34\n        /* \"#utility.yul\":2568:2586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2561:2591   */\n      mstore\n        /* \"#utility.yul\":2627:2661   */\n      0x4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174\n        /* \"#utility.yul\":2607:2625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2600:2662   */\n      mstore\n      shl(0x62, 0x1a5bdb881b5d5cdd081a185d99481c185cdcd959)\n        /* \"#utility.yul\":2678:2696   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2671:2721   */\n      mstore\n        /* \"#utility.yul\":2738:2757   */\n      0x84\n      add\n        /* \"contracts/LQTY/LockupContract.sol\":2711:2805  require(block.timestamp >= unlockTime, \"LockupContract: The lockup duration must have passed\") */\n      tag_49\n        /* \"#utility.yul\":2347:2763   */\n      jump\n        /* \"#utility.yul\":630:1178   */\n    tag_27:\n        /* \"#utility.yul\":742:746   */\n      0x00\n        /* \"#utility.yul\":771:773   */\n      0x20\n        /* \"#utility.yul\":800:802   */\n      dup1\n        /* \"#utility.yul\":789:798   */\n      dup4\n        /* \"#utility.yul\":782:803   */\n      mstore\n        /* \"#utility.yul\":832:838   */\n      dup4\n        /* \"#utility.yul\":826:839   */\n      mload\n        /* \"#utility.yul\":875:881   */\n      dup1\n        /* \"#utility.yul\":870:872   */\n      dup3\n        /* \"#utility.yul\":859:868   */\n      dup6\n        /* \"#utility.yul\":855:873   */\n      add\n        /* \"#utility.yul\":848:882   */\n      mstore\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":910:1050   */\n    tag_60:\n        /* \"#utility.yul\":924:930   */\n      dup2\n        /* \"#utility.yul\":921:922   */\n      dup2\n        /* \"#utility.yul\":918:931   */\n      lt\n        /* \"#utility.yul\":910:1050   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1019:1033   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1015:1038   */\n      dup4\n      add\n        /* \"#utility.yul\":1009:1039   */\n      mload\n        /* \"#utility.yul\":985:1002   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1004:1006   */\n      0x40\n        /* \"#utility.yul\":981:1007   */\n      add\n        /* \"#utility.yul\":974:1040   */\n      mstore\n        /* \"#utility.yul\":939:949   */\n      dup3\n      add\n        /* \"#utility.yul\":910:1050   */\n      jump(tag_60)\n    tag_62:\n        /* \"#utility.yul\":914:917   */\n      pop\n        /* \"#utility.yul\":1099:1100   */\n      0x00\n        /* \"#utility.yul\":1094:1096   */\n      0x40\n        /* \"#utility.yul\":1085:1091   */\n      dup3\n        /* \"#utility.yul\":1074:1083   */\n      dup7\n        /* \"#utility.yul\":1070:1092   */\n      add\n        /* \"#utility.yul\":1066:1097   */\n      add\n        /* \"#utility.yul\":1059:1101   */\n      mstore\n        /* \"#utility.yul\":1169:1171   */\n      0x40\n        /* \"#utility.yul\":1162:1164   */\n      0x1f\n        /* \"#utility.yul\":1158:1165   */\n      not\n        /* \"#utility.yul\":1153:1155   */\n      0x1f\n        /* \"#utility.yul\":1145:1151   */\n      dup4\n        /* \"#utility.yul\":1141:1156   */\n      add\n        /* \"#utility.yul\":1137:1166   */\n      and\n        /* \"#utility.yul\":1126:1135   */\n      dup6\n        /* \"#utility.yul\":1122:1167   */\n      add\n        /* \"#utility.yul\":1118:1172   */\n      add\n        /* \"#utility.yul\":1110:1172   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":630:1178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1183:1367   */\n    tag_39:\n        /* \"#utility.yul\":1253:1259   */\n      0x00\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1294:1303   */\n      dup3\n        /* \"#utility.yul\":1285:1292   */\n      dup5\n        /* \"#utility.yul\":1281:1304   */\n      sub\n        /* \"#utility.yul\":1277:1309   */\n      slt\n        /* \"#utility.yul\":1274:1326   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1322:1323   */\n      0x00\n        /* \"#utility.yul\":1319:1320   */\n      dup1\n        /* \"#utility.yul\":1312:1324   */\n      revert\n        /* \"#utility.yul\":1274:1326   */\n    tag_64:\n      pop\n        /* \"#utility.yul\":1345:1361   */\n      mload\n      swap2\n        /* \"#utility.yul\":1183:1367   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1651:1928   */\n    tag_45:\n        /* \"#utility.yul\":1718:1724   */\n      0x00\n        /* \"#utility.yul\":1771:1773   */\n      0x20\n        /* \"#utility.yul\":1759:1768   */\n      dup3\n        /* \"#utility.yul\":1750:1757   */\n      dup5\n        /* \"#utility.yul\":1746:1769   */\n      sub\n        /* \"#utility.yul\":1742:1774   */\n      slt\n        /* \"#utility.yul\":1739:1791   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1787:1788   */\n      0x00\n        /* \"#utility.yul\":1784:1785   */\n      dup1\n        /* \"#utility.yul\":1777:1789   */\n      revert\n        /* \"#utility.yul\":1739:1791   */\n    tag_67:\n        /* \"#utility.yul\":1819:1828   */\n      dup2\n        /* \"#utility.yul\":1813:1829   */\n      mload\n        /* \"#utility.yul\":1872:1877   */\n      dup1\n        /* \"#utility.yul\":1865:1878   */\n      iszero\n        /* \"#utility.yul\":1858:1879   */\n      iszero\n        /* \"#utility.yul\":1851:1856   */\n      dup2\n        /* \"#utility.yul\":1848:1880   */\n      eq\n        /* \"#utility.yul\":1838:1898   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      dup1\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1838:1898   */\n    tag_68:\n        /* \"#utility.yul\":1917:1922   */\n      swap4\n        /* \"#utility.yul\":1651:1928   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220891d0360991374b9dc9342ea3300de49b8db76d663668ee7f938f229a5571f0664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment_529": {
									"entryPoint": 168,
									"id": 529,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_184": {
									"entryPoint": 452,
									"id": 184,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2089:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:239:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:32:5"
															},
															"nodeType": "YulIf",
															"src": "321:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "441:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "509:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "519:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "261:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "272:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "292:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "300:6:5",
														"type": ""
													}
												],
												"src": "196:354:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "736:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "767:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "772:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "763:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "763:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "776:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "759:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "759:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "729:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "800:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "811:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "796:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "789:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "656:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "664:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "675:4:5",
														"type": ""
													}
												],
												"src": "555:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "915:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "961:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "970:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "973:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "963:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "963:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "945:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "957:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:32:5"
															},
															"nodeType": "YulIf",
															"src": "925:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "986:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1002:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "996:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "881:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "892:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "904:6:5",
														"type": ""
													}
												],
												"src": "834:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1197:307:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1214:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1225:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1248:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1259:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1244:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1264:2:5",
																		"type": "",
																		"value": "77"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1287:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1298:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:5"
																	},
																	{
																		"hexValue": "4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1303:34:5",
																		"type": "",
																		"value": "LockupContract: unlock time must"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1276:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:18:5"
																	},
																	{
																		"hexValue": "206265206174206c65617374206f6e6520796561722061667465722073797374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1374:34:5",
																		"type": "",
																		"value": " be at least one year after syst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1347:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1429:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1440:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:19:5"
																	},
																	{
																		"hexValue": "656d206465706c6f796d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1446:15:5",
																		"type": "",
																		"value": "em deployment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:44:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1418:44:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1471:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1483:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1494:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1471:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1174:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1188:4:5",
														"type": ""
													}
												],
												"src": "1023:481:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1557:174:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1567:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1578:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1581:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1574:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1567:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1614:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1642:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1647:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1628:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1628:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1679:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1682:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1672:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1672:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1672:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1707:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1700:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1700:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1598:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1601:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1595:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:10:5"
															},
															"nodeType": "YulIf",
															"src": "1592:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1540:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1543:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1549:3:5",
														"type": ""
													}
												],
												"src": "1509:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:177:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1927:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1920:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1972:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1950:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1950:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2011:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:18:5"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2016:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:57:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2055:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2067:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2078:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2055:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1887:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1901:4:5",
														"type": ""
													}
												],
												"src": "1736:351:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"LockupContract: unlock time must\")\n        mstore(add(headStart, 96), \" be at least one year after syst\")\n        mstore(add(headStart, 128), \"em deployment\")\n        tail := add(headStart, 160)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161072338038061072383398101604081905261002f91610248565b600080546001600160a01b0319166001600160a01b038516179055610053816100a8565b60018190556001600160a01b038216608081905260408051918252602082018390527f5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54910160405180910390a15050506102be565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633c84b7c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101209190610284565b9050610130816301e133806101c4565b8210156101c05760405162461bcd60e51b815260206004820152604d60248201527f4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d75737460448201527f206265206174206c65617374206f6e652079656172206166746572207379737460648201526c195b4819195c1b1bde5b595b9d609a1b608482015260a4015b60405180910390fd5b5050565b6000806101d1838561029d565b9050838110156102235760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016101b7565b90505b92915050565b80516001600160a01b038116811461024357600080fd5b919050565b60008060006060848603121561025d57600080fd5b6102668461022c565b92506102746020850161022c565b9150604084015190509250925092565b60006020828403121561029657600080fd5b5051919050565b8082018082111561022657634e487b7160e01b600052601160045260246000fd5b60805161043d6102e66000396000818160b3015281816101bb015261027e015261043d6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631f7af3c314610067578063251c1aa31461009757806338af3eed146100ae57806398e5f3c4146100d5578063a3f4df7e146100e0578063b9470a461461011a575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a060015481565b60405190815260200161008e565b61007a7f000000000000000000000000000000000000000000000000000000000000000081565b6100a06301e1338081565b61010d6040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b60405161008e9190610377565b610122610124565b005b61012c610273565b610134610308565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116919082906370a0823190602401602060405180830381865afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a491906103c5565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b91906103de565b506040518181527f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103065760405162461bcd60e51b815260206004820152602d60248201527f4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f7420746860448201526c652062656e656669636961727960981b60648201526084015b60405180910390fd5b565b6001544210156103065760405162461bcd60e51b815260206004820152603460248201527f4c6f636b7570436f6e74726163743a20546865206c6f636b75702064757261746044820152731a5bdb881b5d5cdd081a185d99481c185cdcd95960621b60648201526084016102fd565b600060208083528351808285015260005b818110156103a457858101830151858201604001528201610388565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103d757600080fd5b5051919050565b6000602082840312156103f057600080fd5b8151801515811461040057600080fd5b939250505056fea2646970667358221220891d0360991374b9dc9342ea3300de49b8db76d663668ee7f938f229a5571f0664736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x723 CODESIZE SUB DUP1 PUSH2 0x723 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x248 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x53 DUP2 PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x5FAEE922186516BF77266643C1FDA130ACEFC439D571400E8697106C6AED9B54 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3C84B7C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP PUSH2 0x130 DUP2 PUSH4 0x1E13380 PUSH2 0x1C4 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B7570436F6E74726163743A20756E6C6F636B2074696D65206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206265206174206C65617374206F6E6520796561722061667465722073797374 PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x195B4819195C1B1BDE5B595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D1 DUP4 DUP6 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1B7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x266 DUP5 PUSH2 0x22C JUMP JUMPDEST SWAP3 POP PUSH2 0x274 PUSH1 0x20 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x226 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x43D PUSH2 0x2E6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xB3 ADD MSTORE DUP2 DUP2 PUSH2 0x1BB ADD MSTORE PUSH2 0x27E ADD MSTORE PUSH2 0x43D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7AF3C3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x98E5F3C4 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xB9470A46 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x7A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x131BD8DADD5C10DBDB9D1C9858DD PUSH1 0x92 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x273 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B7570436F6E74726163743A2063616C6C6572206973206E6F74207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x652062656E6566696369617279 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B7570436F6E74726163743A20546865206C6F636B7570206475726174 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1A5BDB881B5D5CDD081A185D99481C185CDCD959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x388 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SAR SUB PUSH1 0x99 SGT PUSH21 0xB9DC9342EA3300DE49B8DB76D663668EE7F938F229 0xA5 JUMPI 0x1F MOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "966:2190:4:-:0;;;1526:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1657:9;:41;;-1:-1:-1;;;;;;1657:41:4;-1:-1:-1;;;;;1657:41:4;;;;;1870:68;1926:11;1870:55;:68::i;:::-;1948:10;:24;;;-1:-1:-1;;;;;1991:27:4;;;;;;2033:48;;;729:51:5;;;811:2;796:18;;789:34;;;2033:48:4;;702:18:5;2033:48:4;;;;;;;1526:562;;;966:2190;;2818:336;2925:25;2953:9;;;;;;;;;-1:-1:-1;;;;;2953:9:4;-1:-1:-1;;;;;2953:32:4;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2925:62;-1:-1:-1;3020:45:4;2925:62;1142:8;3020:24;:45::i;:::-;3005:11;:60;;2997:150;;;;-1:-1:-1;;;2997:150:4;;1225:2:5;2997:150:4;;;1207:21:5;1264:2;1244:18;;;1237:30;1303:34;1283:18;;;1276:62;1374:34;1354:18;;;1347:62;-1:-1:-1;;;1425:19:5;;;1418:44;1479:19;;2997:150:4;;;;;;;;;2915:239;2818:336;:::o;1005:176:2:-;1063:7;;1094:5;1098:1;1094;:5;:::i;:::-;1082:17;;1122:1;1117;:6;;1109:46;;;;-1:-1:-1;;;1109:46:2;;1938:2:5;1109:46:2;;;1920:21:5;1977:2;1957:18;;;1950:30;2016:29;1996:18;;;1989:57;2063:18;;1109:46:2;1736:351:5;1109:46:2;1173:1;-1:-1:-1;1005:176:2;;;;;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;834:184::-;904:6;957:2;945:9;936:7;932:23;928:32;925:52;;;973:1;970;963:12;925:52;-1:-1:-1;996:16:5;;834:184;-1:-1:-1;834:184:5:o;1509:222::-;1574:9;;;1595:10;;;1592:133;;;1647:10;1642:3;1638:20;1635:1;1628:31;1682:4;1679:1;1672:15;1710:4;1707:1;1700:15;1736:351;966:2190:4;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NAME_394": {
									"entryPoint": null,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SECONDS_IN_ONE_YEAR_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireCallerIsBeneficiary_495": {
									"entryPoint": 627,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireLockupDurationHasPassed_507": {
									"entryPoint": 776,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@beneficiary_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lqtyToken_402": {
									"entryPoint": null,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlockTime_404": {
									"entryPoint": null,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawLQTY_483": {
									"entryPoint": 292,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILQTYToken_$384__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2765:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "143:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "155:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "166:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "151:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "151:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "143:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "200:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "216:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "221:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "212:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "212:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "225:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "208:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "208:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "196:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "178:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "178:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILQTYToken_$384__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "102:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "113:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "124:4:5",
														"type": ""
													}
												],
												"src": "14:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "341:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "351:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "374:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "359:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "351:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "393:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "386:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "386:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "321:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "332:4:5",
														"type": ""
													}
												],
												"src": "240:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "533:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "545:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "541:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "533:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "575:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "606:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "611:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "602:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "602:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "615:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "598:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "598:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "568:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "568:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "492:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "503:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "514:4:5",
														"type": ""
													}
												],
												"src": "422:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "751:427:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "761:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "771:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "765:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "800:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "782:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "812:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "832:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "816:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "859:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "870:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "875:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "848:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "891:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "900:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "895:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "960:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "989:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1000:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "985:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "985:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "981:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "981:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1023:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1031:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1019:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1019:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1035:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1015:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1015:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1009:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1009:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "974:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "974:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "974:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "921:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "924:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "918:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "932:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "934:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "943:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "946:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "939:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "939:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "934:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "914:3:5",
																"statements": []
															},
															"src": "910:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1085:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:22:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1094:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:31:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1059:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1110:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1126:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1145:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1153:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1141:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1141:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1162:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1158:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1158:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1137:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1118:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1110:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "720:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "731:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "742:4:5",
														"type": ""
													}
												],
												"src": "630:548:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1264:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1310:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1322:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1312:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1312:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1312:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1285:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1294:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:32:5"
															},
															"nodeType": "YulIf",
															"src": "1274:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1335:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1345:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1230:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1241:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1253:6:5",
														"type": ""
													}
												],
												"src": "1183:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1511:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1511:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1584:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1589:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1580:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1580:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1593:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1576:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1628:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1633:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1606:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1462:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1473:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1481:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1492:4:5",
														"type": ""
													}
												],
												"src": "1372:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1729:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1775:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1787:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1777:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1777:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1777:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1750:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:32:5"
															},
															"nodeType": "YulIf",
															"src": "1739:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1800:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1819:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1813:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1804:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1882:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1872:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1865:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1865:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1858:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:40:5"
															},
															"nodeType": "YulIf",
															"src": "1838:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1907:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1917:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1907:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1695:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1706:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1718:6:5",
														"type": ""
													}
												],
												"src": "1651:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2107:235:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2124:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2117:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2158:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2169:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2174:2:5",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2147:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2197:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2208:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2193:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:18:5"
																	},
																	{
																		"hexValue": "4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2213:34:5",
																		"type": "",
																		"value": "LockupContract: caller is not th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2268:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2279:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2264:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2264:18:5"
																	},
																	{
																		"hexValue": "652062656e6566696369617279",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2284:15:5",
																		"type": "",
																		"value": "e beneficiary"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2257:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2309:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2321:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2309:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2084:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2098:4:5",
														"type": ""
													}
												],
												"src": "1933:409:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:242:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2538:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2568:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:5",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2561:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:5"
																	},
																	{
																		"hexValue": "4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2627:34:5",
																		"type": "",
																		"value": "LockupContract: The lockup durat"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2600:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2682:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2693:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2678:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2678:18:5"
																	},
																	{
																		"hexValue": "696f6e206d757374206861766520706173736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2698:22:5",
																		"type": "",
																		"value": "ion must have passed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2730:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2742:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2730:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2498:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2512:4:5",
														"type": ""
													}
												],
												"src": "2347:416:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ILQTYToken_$384__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"LockupContract: caller is not th\")\n        mstore(add(headStart, 96), \"e beneficiary\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"LockupContract: The lockup durat\")\n        mstore(add(headStart, 96), \"ion must have passed\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"399": [
									{
										"length": 32,
										"start": 179
									},
									{
										"length": 32,
										"start": 443
									},
									{
										"length": 32,
										"start": 638
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631f7af3c314610067578063251c1aa31461009757806338af3eed146100ae57806398e5f3c4146100d5578063a3f4df7e146100e0578063b9470a461461011a575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a060015481565b60405190815260200161008e565b61007a7f000000000000000000000000000000000000000000000000000000000000000081565b6100a06301e1338081565b61010d6040518060400160405280600e81526020016d131bd8dadd5c10dbdb9d1c9858dd60921b81525081565b60405161008e9190610377565b610122610124565b005b61012c610273565b610134610308565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116919082906370a0823190602401602060405180830381865afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a491906103c5565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b91906103de565b506040518181527f7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f9060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103065760405162461bcd60e51b815260206004820152602d60248201527f4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f7420746860448201526c652062656e656669636961727960981b60648201526084015b60405180910390fd5b565b6001544210156103065760405162461bcd60e51b815260206004820152603460248201527f4c6f636b7570436f6e74726163743a20546865206c6f636b75702064757261746044820152731a5bdb881b5d5cdd081a185d99481c185cdcd95960621b60648201526084016102fd565b600060208083528351808285015260005b818110156103a457858101830151858201604001528201610388565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103d757600080fd5b5051919050565b6000602082840312156103f057600080fd5b8151801515811461040057600080fd5b939250505056fea2646970667358221220891d0360991374b9dc9342ea3300de49b8db76d663668ee7f938f229a5571f0664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7AF3C3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x98E5F3C4 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xB9470A46 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x7A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x131BD8DADD5C10DBDB9D1C9858DD PUSH1 0x92 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x273 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B7570436F6E74726163743A2063616C6C6572206973206E6F74207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x652062656E6566696369617279 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B7570436F6E74726163743A20546865206C6F636B7570206475726174 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1A5BDB881B5D5CDD081A185D99481C185CDCD959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x388 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SAR SUB PUSH1 0x99 SGT PUSH21 0xB9DC9342EA3300DE49B8DB76D663668EE7F938F229 0xA5 JUMPI 0x1F MOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "966:2190:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:27;;;;;-1:-1:-1;;;;;1201:27:4;;;;;;-1:-1:-1;;;;;196:32:5;;;178:51;;166:2;151:18;1201:27:4;;;;;;;;1319:22;;;;;;;;;386:25:5;;;374:2;359:18;1319:22:4;240:177:5;1158:36:4;;;;;1099:51;;1142:8;1099:51;;1046:46;;;;;;;;;;;;;;;-1:-1:-1;;;1046:46:4;;;;;;;;;;;;:::i;2094:349::-;;;:::i;:::-;;;2137:29;:27;:29::i;:::-;2176:33;:31;:33::i;:::-;2220:26;2249:9;;2287:40;;-1:-1:-1;;;2287:40:4;;2321:4;2287:40;;;178:51:5;-1:-1:-1;;;;;2249:9:4;;;;2220:26;2249:9;;2287:25;;151:18:5;;2287:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2337:50;;-1:-1:-1;;;2337:50:4;;-1:-1:-1;;;;;2362:11:4;1564:32:5;;2337:50:4;;;1546:51:5;1613:18;;;1606:34;;;;;-1:-1:-1;2337:24:4;;;;;;1519:18:5;;2337:50:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2402:34:4;;386:25:5;;;2402:34:4;;374:2:5;359:18;2402:34:4;;;;;;;2127:316;;2094:349::o;2485:153::-;2556:10;-1:-1:-1;;;;;2570:11:4;2556:25;;2548:83;;;;-1:-1:-1;;;2548:83:4;;2135:2:5;2548:83:4;;;2117:21:5;2174:2;2154:18;;;2147:30;2213:34;2193:18;;;2186:62;-1:-1:-1;;;2264:18:5;;;2257:43;2317:19;;2548:83:4;;;;;;;;;2485:153::o;2644:168::-;2738:10;;2719:15;:29;;2711:94;;;;-1:-1:-1;;;2711:94:4;;2549:2:5;2711:94:4;;;2531:21:5;2588:2;2568:18;;;2561:30;2627:34;2607:18;;;2600:62;-1:-1:-1;;;2678:18:5;;;2671:50;2738:19;;2711:94:4;2347:416:5;630:548;742:4;771:2;800;789:9;782:21;832:6;826:13;875:6;870:2;859:9;855:18;848:34;900:1;910:140;924:6;921:1;918:13;910:140;;;1019:14;;;1015:23;;1009:30;985:17;;;1004:2;981:26;974:66;939:10;;910:140;;;914:3;1099:1;1094:2;1085:6;1074:9;1070:22;1066:31;1059:42;1169:2;1162;1158:7;1153:2;1145:6;1141:15;1137:29;1126:9;1122:45;1118:54;1110:62;;;;630:548;;;;:::o;1183:184::-;1253:6;1306:2;1294:9;1285:7;1281:23;1277:32;1274:52;;;1322:1;1319;1312:12;1274:52;-1:-1:-1;1345:16:5;;1183:184;-1:-1:-1;1183:184:5:o;1651:277::-;1718:6;1771:2;1759:9;1750:7;1746:23;1742:32;1739:52;;;1787:1;1784;1777:12;1739:52;1819:9;1813:16;1872:5;1865:13;1858:21;1851:5;1848:32;1838:60;;1894:1;1891;1884:12;1838:60;1917:5;1651:277;-1:-1:-1;;;1651:277:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "217000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NAME()": "infinite",
								"SECONDS_IN_ONE_YEAR()": "239",
								"beneficiary()": "infinite",
								"lqtyToken()": "2304",
								"unlockTime()": "2295",
								"withdrawLQTY()": "infinite"
							},
							"internal": {
								"_requireCallerIsBeneficiary()": "infinite",
								"_requireLockupDurationHasPassed()": "infinite",
								"_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1526,
									"end": 2088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1666,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1657,
									"end": 1698,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1870,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1870,
									"end": 1925,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1870,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1870,
									"end": 1938,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1870,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1948,
									"end": 1958,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 2018,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 729,
									"end": 780,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 729,
									"end": 780,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 729,
									"end": 780,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 811,
									"end": 813,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 796,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 789,
									"end": 823,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 789,
									"end": 823,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 789,
									"end": 823,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "PUSH",
									"source": 4,
									"value": "5FAEE922186516BF77266643C1FDA130ACEFC439D571400E8697106C6AED9B54"
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 702,
									"end": 720,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2081,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 2088,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2818,
									"end": 3154,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2818,
									"end": 3154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2925,
									"end": 2950,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2953,
									"end": 2962,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2953,
									"end": 2985,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2985,
									"name": "PUSH",
									"source": 4,
									"value": "3C84B7C2"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "STATICCALL",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2953,
									"end": 2987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2953,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2925,
									"end": 2987,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2925,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1150,
									"name": "PUSH",
									"source": 4,
									"value": "1E13380"
								},
								{
									"begin": 3020,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 3020,
									"end": 3065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3065,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 3020,
									"end": 3065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3005,
									"end": 3016,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3005,
									"end": 3065,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3005,
									"end": 3065,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1227,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 1228,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1266,
									"name": "PUSH",
									"source": 5,
									"value": "4D"
								},
								{
									"begin": 1244,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1244,
									"end": 1262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1244,
									"end": 1262,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1237,
									"end": 1267,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1337,
									"name": "PUSH",
									"source": 5,
									"value": "4C6F636B7570436F6E74726163743A20756E6C6F636B2074696D65206D757374"
								},
								{
									"begin": 1283,
									"end": 1301,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1283,
									"end": 1301,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1301,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1338,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1408,
									"name": "PUSH",
									"source": 5,
									"value": "206265206174206C65617374206F6E6520796561722061667465722073797374"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1409,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "195B4819195C1B1BDE5B595B9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1425,
									"end": 1444,
									"name": "PUSH",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 1425,
									"end": 1444,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1425,
									"end": 1444,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1418,
									"end": 1462,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1479,
									"end": 1498,
									"name": "PUSH",
									"source": 5,
									"value": "A4"
								},
								{
									"begin": 1479,
									"end": 1498,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2997,
									"end": 3147,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2915,
									"end": 3154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2818,
									"end": 3154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2818,
									"end": 3154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1063,
									"end": 1070,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1070,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1098,
									"end": 1099,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1095,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1094,
									"end": 1099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1094,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1082,
									"end": 1099,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1082,
									"end": 1099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1118,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1938,
									"end": 1940,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1920,
									"end": 1941,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1977,
									"end": 1979,
									"name": "PUSH",
									"source": 5,
									"value": "1B"
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1980,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2016,
									"end": 2045,
									"name": "PUSH",
									"source": 5,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1996,
									"end": 2014,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1996,
									"end": 2014,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1996,
									"end": 2014,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1989,
									"end": 2046,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1736,
									"end": 2087,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1109,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1173,
									"end": 1174,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1005,
									"end": 1181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 550,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 525,
									"end": 543,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 519,
									"end": 544,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 509,
									"end": 544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 509,
									"end": 544,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 834,
									"end": 1018,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 834,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 904,
									"end": 910,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 957,
									"end": 959,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 945,
									"end": 954,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 936,
									"end": 943,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 932,
									"end": 955,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 928,
									"end": 960,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 925,
									"end": 977,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 925,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 925,
									"end": 977,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 971,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 963,
									"end": 975,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 925,
									"end": 977,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 925,
									"end": 977,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1012,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1012,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 834,
									"end": 1018,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 834,
									"end": 1018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1731,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1509,
									"end": 1731,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1583,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1583,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1583,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1595,
									"end": 1605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1595,
									"end": 1605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1595,
									"end": 1605,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1592,
									"end": 1725,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1592,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1592,
									"end": 1725,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1657,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1642,
									"end": 1645,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1638,
									"end": 1658,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1628,
									"end": 1659,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1679,
									"end": 1680,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1672,
									"end": 1687,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1707,
									"end": 1708,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1715,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1736,
									"end": 2087,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1736,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "399"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 3156,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220891d0360991374b9dc9342ea3300de49b8db76d663668ee7f938f229a5571f0664736f6c63430008140033",
									".code": [
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "1F7AF3C3"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "251C1AA3"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "38AF3EED"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "98E5F3C4"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "A3F4DF7E"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "B9470A46"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 3156,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 196,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 196,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 196,
											"end": 228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 178,
											"end": 229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 178,
											"end": 229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 166,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 151,
											"end": 169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 386,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 374,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 240,
											"end": 417,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1194,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD8DADD5C10DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1046,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2094,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2094,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2137,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2137,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2166,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2137,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2176,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2176,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 178,
											"end": 229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2287,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 151,
											"end": 169,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 151,
											"end": 169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2287,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1640,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2337,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2337,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 386,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "7D17CBC0F78CCFED33842DD29DAB2872E8347BF3981293AB2CFE35CA16371A2F"
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 374,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2638,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2485,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2566,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2581,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2176,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "4C6F636B7570436F6E74726163743A2063616C6C6572206973206E6F74207468"
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "652062656E6566696369617279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2548,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2812,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2644,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2748,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2738,
											"end": 2748,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2734,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2748,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2552,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "4C6F636B7570436F6E74726163743A20546865206C6F636B7570206475726174"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2600,
											"end": 2662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5BDB881B5D5CDD081A185D99481C185CDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2347,
											"end": 2763,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 789,
											"end": 798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 782,
											"end": 803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 839,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 870,
											"end": 872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 848,
											"end": 882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 921,
											"end": 922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 918,
											"end": 931,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1033,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1039,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1040,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 939,
											"end": 949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 939,
											"end": 949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 910,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1145,
											"end": 1151,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 1178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1183,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1309,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1651,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1774,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1789,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1878,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1879,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1838,
											"end": 1898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1898,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1838,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1928,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/Dependencies/IERC20.sol",
								"contracts/Dependencies/IERC2612.sol",
								"contracts/Dependencies/SafeMath.sol",
								"contracts/Interfaces/ILQTYToken.sol",
								"contracts/LQTY/LockupContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NAME()": "a3f4df7e",
							"SECONDS_IN_ONE_YEAR()": "98e5f3c4",
							"beneficiary()": "38af3eed",
							"lqtyToken()": "1f7af3c3",
							"unlockTime()": "251c1aa3",
							"withdrawLQTY()": "b9470a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lqtyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"LockupContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_LQTYwithdrawal\",\"type\":\"uint256\"}],\"name\":\"LockupContractEmptied\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_IN_ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lqtyToken\",\"outputs\":[{\"internalType\":\"contract ILQTYToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLQTY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LQTY/LockupContract.sol\":\"LockupContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0x433e8e8aca0a70595ce4224d990c1435588088b95be442e7f12c5d3e16c44bd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8843062f1095f996b90e7623b28d3fa1b0696e1f7e288b2f2092e33f4ce3315\",\"dweb:/ipfs/Qmdm1ZCR9CGihpzxEc9UCa54HsgvLMbrfW7GFzcoTCQHp4\"]},\"contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0x13199a3a79c62fcf7e0259ec3913278f942f03146412e30906b8c7e23bb63119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b06dc5eb820d01735126b50ab8eb1a2d768d5127e4bc4b7e8a86900d47af285\",\"dweb:/ipfs/QmVSKStcPe5ViWDY1BmAdMRHDGkMZLrEoCq2H3HsbswdKr\"]},\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]},\"contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0xebc139c37c6f7f7d1d29f5b94221f489138342ed78742bb9a87580225cd3dac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b142680d5881bde60a20130c55476ee778a860eca2c87d9b6c15cfa7ea7b662\",\"dweb:/ipfs/QmWt1r9LGUx4daohvTogWtVH4G9RCEQTC2CGfmCn1aKZTK\"]},\"contracts/LQTY/LockupContract.sol\":{\"keccak256\":\"0x9edc95be067b8c5a2d0f3dfe269b7a3707fa8f1b90bcf95a04d68e6643112c39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8713fbe779f382d01b7d65cd26b845bb219d43ae305a62fb419ade0ccc5cbcf2\",\"dweb:/ipfs/QmbWo1kSZqZv2vNBiJ7ZuiCLmxLxtc9MDHETxsaGWY2Lef\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "contracts/LQTY/LockupContract.sol:LockupContract",
								"label": "lqtyToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ILQTYToken)384"
							},
							{
								"astId": 404,
								"contract": "contracts/LQTY/LockupContract.sol:LockupContract",
								"label": "unlockTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(ILQTYToken)384": {
								"encoding": "inplace",
								"label": "contract ILQTYToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Dependencies/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:222:0",
								"text": " Based on the OpenZeppelin IER20 interface:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IERC20",
							"nameLocation": "291:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "304:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "384:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:9:0"
									},
									"scope": 110,
									"src": "375:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "436:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "522:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:9:0"
									},
									"scope": 110,
									"src": "513:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "587:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "810:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "827:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "819:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "846:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:6:0"
									},
									"scope": 110,
									"src": "801:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "884:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1162:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:9:0"
									},
									"scope": 110,
									"src": "1153:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "39509351",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1250:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "1293:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:37:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 110,
									"src": "1241:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a457c2d7",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1343:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "1386:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:42:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:6:0"
									},
									"scope": 110,
									"src": "1334:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1433:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2089:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2122:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2114:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2148:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:6:0"
									},
									"scope": 110,
									"src": "2080:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2160:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2470:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2491:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2507:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2499:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:51:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:6:0"
									},
									"scope": 110,
									"src": "2461:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2573:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:15:0"
									},
									"scope": 110,
									"src": "2564:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2632:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2664:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:15:0"
									},
									"scope": 110,
									"src": "2623:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2693:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2727:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:7:0"
									},
									"scope": 110,
									"src": "2684:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2744:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 100,
									"name": "Transfer",
									"nameLocation": "2913:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2938:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2922:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2960:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2944:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:57:0"
									},
									"src": "2907:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2985:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 109,
									"name": "Approval",
									"nameLocation": "3144:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3169:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3153:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3176:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:63:0"
									},
									"src": "3138:78:0"
								}
							],
							"scope": 111,
							"src": "281:2937:0",
							"usedErrors": [],
							"usedEvents": [
								100,
								109
							]
						}
					],
					"src": "33:3185:0"
				},
				"id": 0
			},
			"contracts/Dependencies/IERC2612.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/IERC2612.sol",
					"exportedSymbols": {
						"IERC2612": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC2612",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "58:429:1",
								"text": " @dev Interface of the ERC2612 standard as defined in the EIP.\n Adds the {permit} method, which can be used to change one's\n {IERC20-allowance} without having to send a transaction, by signing a\n message. This allows users to spend tokens without having to hold Ether.\n See https://eips.ethereum.org/EIPS/eip-2612.\n \n Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/"
							},
							"fullyImplemented": false,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC2612",
							"nameLocation": "498:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "513:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1361:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1376:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1368:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1391:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1408:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1445:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1437:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1461:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1455:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 123,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1472:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1464:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1483:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1475:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:118:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:1"
									},
									"scope": 155,
									"src": "1352:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1505:526:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases `owner`'s nonce by one. This\n prevents a signature from being used multiple times.\n `owner` can limit the time a Permit is valid for by setting `deadline` to \n a value in the near future. The deadline argument can be set to uint(-1) to \n create Permits that effectively never expire."
									},
									"functionSelector": "7ecebe00",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2045:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2060:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2052:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2051:15:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2090:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:1"
									},
									"scope": 155,
									"src": "2036:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "2118:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:2:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2151:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2151:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:15:1"
									},
									"scope": 155,
									"src": "2109:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "10ce43bd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTypeHash",
									"nameLocation": "2180:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2220:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:9:1"
									},
									"scope": 155,
									"src": "2171:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f698da25",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "domainSeparator",
									"nameLocation": "2243:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:9:1"
									},
									"scope": 155,
									"src": "2234:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "488:1807:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2263:1"
				},
				"id": 1
			},
			"contracts/Dependencies/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 157,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "58:701:2",
								"text": " Based on OpenZeppelin's SafeMath:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "SafeMath",
							"nameLocation": "768:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1072:109:2",
										"statements": [
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1090:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "1082:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1094:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1098:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1094:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1082:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "1117:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 176,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1122:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1109:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1109:46:2"
											},
											{
												"expression": {
													"id": 181,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1173:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 182,
												"nodeType": "Return",
												"src": "1166:8:2"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "783:217:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1014:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1063:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:9:2"
									},
									"scope": 351,
									"src": "1005:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "1512:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1533:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1536:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 194,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															201,
															229
														],
														"referencedDeclaration": 229,
														"src": "1529:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 199,
												"nodeType": "Return",
												"src": "1522:50:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1187:253:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1454:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1466:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1458:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1477:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1469:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:22:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1503:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:2"
									},
									"scope": 351,
									"src": "1445:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1998:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2016:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 215,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2021:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2016:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 217,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2024:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2008:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2008:29:2"
											},
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2055:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "2047:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2063:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2047:17:2"
											},
											{
												"expression": {
													"id": 226,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "2082:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 227,
												"nodeType": "Return",
												"src": "2075:8:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1585:313:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1912:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1924:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1916:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1935:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1927:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1952:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1938:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:50:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1989:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:9:2"
									},
									"scope": 351,
									"src": "1903:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2397:392:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2629:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2629:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "2625:45:2",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "2637:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 238,
															"id": 243,
															"nodeType": "Return",
															"src": "2651:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2688:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "2680:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2692:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2696:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 253,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2715:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 254,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2719:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2715:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 256,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2724:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2715:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2707:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2707:56:2"
											},
											{
												"expression": {
													"id": 261,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "2781:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 262,
												"nodeType": "Return",
												"src": "2774:8:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2096:229:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2339:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2351:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2343:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2362:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2354:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2388:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:9:2"
									},
									"scope": 351,
									"src": "2330:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3311:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3332:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 276,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3335:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 274,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															281,
															309
														],
														"referencedDeclaration": 309,
														"src": "3328:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "3321:46:2"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2795:444:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3253:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3265:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3257:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3276:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3268:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:22:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3302:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:9:2"
									},
									"scope": 351,
									"src": "3244:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3984:243:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "4068:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4072:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4068:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4075:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4060:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4060:28:2"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4106:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "4098:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4110:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "4114:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4098:17:2"
											},
											{
												"expression": {
													"id": 306,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "4219:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 307,
												"nodeType": "Return",
												"src": "4212:8:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3380:504:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3898:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3910:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3902:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3921:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3913:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3938:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3924:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:50:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3975:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:2"
									},
									"scope": 351,
									"src": "3889:338:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "4738:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 321,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4762:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4765:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 319,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															350
														],
														"referencedDeclaration": 350,
														"src": "4755:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "4748:44:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4233:433:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4680:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4692:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4684:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4703:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4695:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:22:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4729:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4728:9:2"
									},
									"scope": 351,
									"src": "4671:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "5398:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "5416:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5416:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 342,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5424:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5408:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5408:29:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 345,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "5454:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 346,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "5458:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5454:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 348,
												"nodeType": "Return",
												"src": "5447:12:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "4805:493:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5312:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5324:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5316:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5335:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5327:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5352:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5338:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5338:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:50:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5389:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:9:2"
									},
									"scope": 351,
									"src": "5303:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "760:4708:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5436:2"
				},
				"id": 2
			},
			"contracts/Interfaces/ILQTYToken.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces/ILQTYToken.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						],
						"IERC2612": [
							155
						],
						"ILQTYToken": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/Dependencies/IERC20.sol",
							"file": "../Dependencies/IERC20.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 111,
							"src": "58:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/IERC2612.sol",
							"file": "../Dependencies/IERC2612.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 156,
							"src": "95:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 356,
										"name": "IERC20",
										"nameLocations": [
											"159:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 110,
										"src": "159:6:3"
									},
									"id": 357,
									"nodeType": "InheritanceSpecifier",
									"src": "159:6:3"
								},
								{
									"baseName": {
										"id": 358,
										"name": "IERC2612",
										"nameLocations": [
											"167:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 155,
										"src": "167:8:3"
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "167:8:3"
								}
							],
							"canonicalName": "ILQTYToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								155,
								110
							],
							"name": "ILQTYToken",
							"nameLocation": "145:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "3d2d65171cd82be2a82a4c8559f66bc443ecd480dffeacc3cf52caf9963e9a6f",
									"id": 363,
									"name": "CommunityIssuanceAddressSet",
									"nameLocation": "220:27:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "_communityIssuanceAddress",
												"nameLocation": "256:25:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "248:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:35:3"
									},
									"src": "214:69:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c03bd56bd5702c36b067ffe5fbcb0a58301813a6be63b16b7944b8181539de45",
									"id": 367,
									"name": "LQTYStakingAddressSet",
									"nameLocation": "294:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lqtyStakingAddress",
												"nameLocation": "324:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "316:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:29:3"
									},
									"src": "288:57:3"
								},
								{
									"anonymous": false,
									"eventSelector": "67fc41630409887e5790bb6a910e8638e72f5f11f10d75d94a2d91178c1108b9",
									"id": 371,
									"name": "LockupContractFactoryAddressSet",
									"nameLocation": "356:31:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockupContractFactoryAddress",
												"nameLocation": "396:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "388:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:39:3"
									},
									"src": "350:77:3"
								},
								{
									"functionSelector": "f3a2568b",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToLQTYStaking",
									"nameLocation": "472:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "498:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "490:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "515:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "507:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:34:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:3"
									},
									"scope": 384,
									"src": "463:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3c84b7c2",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDeploymentStartTime",
									"nameLocation": "548:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:9:3"
									},
									"scope": 384,
									"src": "539:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "135:548:3",
							"usedErrors": [],
							"usedEvents": [
								100,
								109,
								363,
								367,
								371
							]
						}
					],
					"src": "33:651:3"
				},
				"id": 3
			},
			"contracts/LQTY/LockupContract.sol": {
				"ast": {
					"absolutePath": "contracts/LQTY/LockupContract.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						],
						"IERC2612": [
							155
						],
						"ILQTYToken": [
							384
						],
						"LockupContract": [
							530
						],
						"SafeMath": [
							351
						]
					},
					"id": 531,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/Dependencies/SafeMath.sol",
							"file": "../Dependencies/SafeMath.sol",
							"id": 387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 531,
							"sourceUnit": 352,
							"src": "58:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces/ILQTYToken.sol",
							"file": "../Interfaces/ILQTYToken.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 531,
							"sourceUnit": 385,
							"src": "97:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LockupContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 530,
							"linearizedBaseContracts": [
								530
							],
							"name": "LockupContract",
							"nameLocation": "975:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 391,
									"libraryName": {
										"id": 389,
										"name": "SafeMath",
										"nameLocations": [
											"1002:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "1002:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "996:24:4",
									"typeName": {
										"id": 390,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1015:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "a3f4df7e",
									"id": 394,
									"mutability": "constant",
									"name": "NAME",
									"nameLocation": "1069:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 530,
									"src": "1046:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 392,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1046:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4c6f636b7570436f6e7472616374",
										"id": 393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1076:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d851e93a1a24828b3f3a9b69d24d0d5e4858d9a57d1ebe7ff7099376f0e8eb60",
											"typeString": "literal_string \"LockupContract\""
										},
										"value": "LockupContract"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "98e5f3c4",
									"id": 397,
									"mutability": "constant",
									"name": "SECONDS_IN_ONE_YEAR",
									"nameLocation": "1120:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 530,
									"src": "1099:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1099:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3331353336303030",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1142:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "31536000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 399,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "1183:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 530,
									"src": "1158:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 398,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1158:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f7af3c3",
									"id": 402,
									"mutability": "mutable",
									"name": "lqtyToken",
									"nameLocation": "1219:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 530,
									"src": "1201:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILQTYToken_$384",
										"typeString": "contract ILQTYToken"
									},
									"typeName": {
										"id": 401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 400,
											"name": "ILQTYToken",
											"nameLocations": [
												"1201:10:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 384,
											"src": "1201:10:4"
										},
										"referencedDeclaration": 384,
										"src": "1201:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILQTYToken_$384",
											"typeString": "contract ILQTYToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "251c1aa3",
									"id": 404,
									"mutability": "mutable",
									"name": "unlockTime",
									"nameLocation": "1331:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 530,
									"src": "1319:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1319:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5faee922186516bf77266643c1fda130acefc439d571400e8697106c6aed9b54",
									"id": 410,
									"name": "LockupContractCreated",
									"nameLocation": "1377:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1407:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1399:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": false,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nameLocation": "1426:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1421:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:40:4"
									},
									"src": "1371:68:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7d17cbc0f78ccfed33842dd29dab2872e8347bf3981293ab2cfe35ca16371a2f",
									"id": 414,
									"name": "LockupContractEmptied",
									"nameLocation": "1450:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"indexed": false,
												"mutability": "mutable",
												"name": "_LQTYwithdrawal",
												"nameLocation": "1477:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1472:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:22:4"
									},
									"src": "1444:50:4"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1647:441:4",
										"statements": [
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "lqtyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1657:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 425,
																"name": "_lqtyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1680:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 424,
															"name": "ILQTYToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1669:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILQTYToken_$384_$",
																"typeString": "type(contract ILQTYToken)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1669:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														}
													},
													"src": "1657:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$384",
														"typeString": "contract ILQTYToken"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1657:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "_unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "1926:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1870:55:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1870:68:4"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1948:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 434,
														"name": "_unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1961:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1948:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1948:24:4"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1991:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2006:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1991:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1991:27:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 442,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "2055:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "_unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "2069:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "LockupContractCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "2033:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2033:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "2028:53:4"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_lqtyTokenAddress",
												"nameLocation": "1561:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1553:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1597:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1589:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nameLocation": "1625:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1620:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1620:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:99:4"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:0:4"
									},
									"scope": 530,
									"src": "1526:562:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2127:316:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 450,
														"name": "_requireCallerIsBeneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2137:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2137:29:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_requireLockupDurationHasPassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2176:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2176:33:4"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "lqtyTokenCached",
														"nameLocation": "2231:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2220:26:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$384",
															"typeString": "contract ILQTYToken"
														},
														"typeName": {
															"id": 457,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 456,
																"name": "ILQTYToken",
																"nameLocations": [
																	"2220:10:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 384,
																"src": "2220:10:4"
															},
															"referencedDeclaration": 384,
															"src": "2220:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"id": 459,
													"name": "lqtyToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 402,
													"src": "2249:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$384",
														"typeString": "contract ILQTYToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2220:38:4"
											},
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "LQTYBalance",
														"nameLocation": "2273:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2268:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 461,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2268:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 467,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2321:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LockupContract_$530",
																		"typeString": "contract LockupContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LockupContract_$530",
																		"typeString": "contract LockupContract"
																	}
																],
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2313:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2313:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2313:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 463,
															"name": "lqtyTokenCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2287:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2303:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2287:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2268:59:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2362:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "LQTYBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2375:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 471,
															"name": "lqtyTokenCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2337:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2353:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "2337:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2337:50:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 479,
															"name": "LQTYBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2424:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 478,
														"name": "LockupContractEmptied",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2402:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2402:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "2397:39:4"
											}
										]
									},
									"functionSelector": "b9470a46",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLQTY",
									"nameLocation": "2103:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:2:4"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:4"
									},
									"scope": 530,
									"src": "2094:349:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "2538:100:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 487,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2556:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2560:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2556:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 489,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2570:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2556:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b7570436f6e74726163743a2063616c6c6572206973206e6f74207468652062656e6566696369617279",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2583:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318",
																"typeString": "literal_string \"LockupContract: caller is not the beneficiary\""
															},
															"value": "LockupContract: caller is not the beneficiary"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f5fe979492a2f2b3c19a6f112e727f4f83bf91814c82ad68c2db485f3e9d318",
																"typeString": "literal_string \"LockupContract: caller is not the beneficiary\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2548:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2548:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2548:83:4"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireCallerIsBeneficiary",
									"nameLocation": "2494:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2521:2:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2538:0:4"
									},
									"scope": 530,
									"src": "2485:153:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2701:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 499,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2719:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2725:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2719:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 501,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2738:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2719:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b7570436f6e74726163743a20546865206c6f636b7570206475726174696f6e206d757374206861766520706173736564",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2750:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5",
																"typeString": "literal_string \"LockupContract: The lockup duration must have passed\""
															},
															"value": "LockupContract: The lockup duration must have passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_167fa4388ff18b329f1218be189e73142e4068aca57040f1c4871fc96244dff5",
																"typeString": "literal_string \"LockupContract: The lockup duration must have passed\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2711:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "2711:94:4"
											}
										]
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireLockupDurationHasPassed",
									"nameLocation": "2653:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:0:4"
									},
									"scope": 530,
									"src": "2644:168:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "2915:239:4",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "systemDeploymentTime",
														"nameLocation": "2930:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "2925:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2925:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 514,
															"name": "lqtyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2953:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$384",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2963:22:4",
														"memberName": "getDeploymentStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "2953:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2953:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2925:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "_unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "3005:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 522,
																		"name": "SECONDS_IN_ONE_YEAR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3045:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 520,
																		"name": "systemDeploymentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "3020:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3041:3:4",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "3020:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3020:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3005:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b7570436f6e74726163743a20756e6c6f636b2074696d65206d757374206265206174206c65617374206f6e6520796561722061667465722073797374656d206465706c6f796d656e74",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3067:79:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267",
																"typeString": "literal_string \"LockupContract: unlock time must be at least one year after system deployment\""
															},
															"value": "LockupContract: unlock time must be at least one year after system deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7d35d8ba3cb9477f8d2991ae59b8bd5517f50c9caee3c407d66859f000d267",
																"typeString": "literal_string \"LockupContract: unlock time must be at least one year after system deployment\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2997:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "2997:150:4"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireUnlockTimeIsAtLeastOneYearAfterSystemDeployment",
									"nameLocation": "2827:55:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "_unlockTime",
												"nameLocation": "2888:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "2883:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2883:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2882:18:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:0:4"
									},
									"scope": 530,
									"src": "2818:336:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 531,
							"src": "966:2190:4",
							"usedErrors": [],
							"usedEvents": [
								410,
								414
							]
						}
					],
					"src": "33:3124:4"
				},
				"id": 4
			}
		}
	}
}