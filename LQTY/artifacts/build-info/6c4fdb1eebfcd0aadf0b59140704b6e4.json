{
	"id": "6c4fdb1eebfcd0aadf0b59140704b6e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.11",
	"solcLongVersion": "0.6.11+commit.5ef660b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/LQTY/LQTYVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\nimport \"../Interfaces/ILQTYToken.sol\";\n\ncontract LQTYVault  {\n\n    ILQTYToken public token;\n    address public stakingContract;\n    bool public isTokenSet;\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    event TokenAddressSet (address _token);\n\n    constructor(address _stakingContract) public {\n        require(_stakingContract != address(0),\"Invalid contract address\");\n        stakingContract = _stakingContract;\n        owner = msg.sender;\n    }\n\n    function setToken(address _token) external onlyOwner {\n        require(!isTokenSet, \"Token is already set\");\n        require (_token != address(0),\"Invalid token address\");\n        token = ILQTYToken(_token);\n        isTokenSet = true;\n        // Approve the staking contract to spend an unlimited amount of tokens\n        token.approve(stakingContract, type(uint256).max);     \n        emit TokenAddressSet(_token);\n    }\n\n    function renounceOwnership() external onlyOwner {\n        require(isTokenSet,\"Token address not yet set\");\n        owner = address(0);\n    }\n}"
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\nimport \"../Dependencies/IERC20.sol\";\nimport \"../Dependencies/IERC2612.sol\";\n\ninterface ILQTYToken is IERC20, IERC2612 { \n   \n    // --- Events ---\n    \n    event CommunityIssuanceAddressSet(address _communityIssuanceAddress);\n    event LQTYStakingAddressSet(address _lqtyStakingAddress);\n    event LockupContractFactoryAddressSet(address _lockupContractFactoryAddress);\n\n    // --- Functions ---\n    \n    function sendToLQTYStaking(address _sender, uint256 _amount) external;\n\n    function getDeploymentStartTime() external view returns (uint256);\n\n    // function getLpRewardsEntitlement() external view returns (uint256);\n}\n"
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * @dev Interface of the ERC2612 standard as defined in the EIP.\n *\n * Adds the {permit} method, which can be used to change one's\n * {IERC20-allowance} without having to send a transaction, by signing a\n * message. This allows users to spend tokens without having to hold Ether.\n *\n * See https://eips.ethereum.org/EIPS/eip-2612.\n * \n * Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\n */\ninterface IERC2612 {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 amount, \n                    uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n    \n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases `owner`'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     *\n     * `owner` can limit the time a Permit is valid for by setting `deadline` to \n     * a value in the near future. The deadline argument can be set to uint(-1) to \n     * create Permits that effectively never expire.\n     */\n    function nonces(address owner) external view returns (uint256);\n    \n    function version() external view returns (string memory);\n    function permitTypeHash() external view returns (bytes32);\n    function domainSeparator() external view returns (bytes32);\n}\n"
			},
			"contracts/contracts/Dependencies/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.11;\n\n/**\n * Based on the OpenZeppelin IER20 interface:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n *\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    \n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/Dependencies/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on the OpenZeppelin IER20 interface: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
						"version": 1
					}
				}
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"IERC2612": {
					"abi": [
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/",
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"domainSeparator()": "f698da25",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC2612 standard as defined in the EIP. Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. See https://eips.ethereum.org/EIPS/eip-2612.  Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/\",\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/IERC2612.sol\":\"IERC2612\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"ILQTYToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_communityIssuanceAddress",
									"type": "address"
								}
							],
							"name": "CommunityIssuanceAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lqtyStakingAddress",
									"type": "address"
								}
							],
							"name": "LQTYStakingAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_lockupContractFactoryAddress",
									"type": "address"
								}
							],
							"name": "LockupContractFactoryAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeploymentStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permitTypeHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToLQTYStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"domainSeparator()": "f698da25",
							"getDeploymentStartTime()": "3c84b7c2",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"permitTypeHash()": "10ce43bd",
							"sendToLQTYStaking(address,uint256)": "f3a2568b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_communityIssuanceAddress\",\"type\":\"address\"}],\"name\":\"CommunityIssuanceAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lqtyStakingAddress\",\"type\":\"address\"}],\"name\":\"LQTYStakingAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_lockupContractFactoryAddress\",\"type\":\"address\"}],\"name\":\"LockupContractFactoryAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permitTypeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToLQTYStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times. `owner` can limit the time a Permit is valid for by setting `deadline` to  a value in the near future. The deadline argument can be set to uint(-1) to  create Permits that effectively never expire.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Interfaces/ILQTYToken.sol\":\"ILQTYToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]},\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]},\"contracts/contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0x5e4ffb34b4f3fa77718061a40858722b3811be1ea99ca498c637e97237a4a83a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c729af77d7c08cb4ac0b0886dbda817afd5b83a235797b82b0ce9b3a251faf7\",\"dweb:/ipfs/QmbWf5HVLs1v7vrfuLzgXhddUvyPW76YXLYMRqH96o5Bpx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/LQTY/LQTYVault.sol": {
				"LQTYVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenAddressSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isTokenSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ILQTYToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/LQTY/LQTYVault.sol\":98:1166  contract LQTYVault  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":390:590  constructor(address _stakingContract) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":453:483  _stakingContract != address(0) */\n  dup2\n  and\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":445:511  require(_stakingContract != address(0),\"Invalid contract address\") */\n  tag_5\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x18\n  0x24\n  dup3\n  add\n  mstore\n  0x496e76616c696420636f6e747261637420616464726573730000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_5:\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":521:536  stakingContract */\n  0x01\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":521:555  stakingContract = _stakingContract */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":565:570  owner */\n  0x02\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":565:583  owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":573:583  msg.sender */\n  caller\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":565:583  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/LQTY/LQTYVault.sol\":98:1166  contract LQTYVault  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":98:1166  contract LQTYVault  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x144fa6d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9ee7138c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":596:1018  function setToken(address _token) external onlyOwner {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1024:1164  function renounceOwnership() external onlyOwner {... */\n    tag_4:\n      tag_9\n      tag_13\n      jump\t// in\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":218:238  address public owner */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":190:212  bool public isTokenSet */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":154:184  address public stakingContract */\n    tag_7:\n      tag_14\n      tag_19\n      jump\t// in\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":125:148  ILQTYToken public token */\n    tag_8:\n      tag_14\n      tag_21\n      jump\t// in\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":596:1018  function setToken(address _token) external onlyOwner {... */\n    tag_11:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":298:303  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":284:303  msg.sender == owner */\n      eq\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      tag_23\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":668:678  isTokenSet */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":667:678  !isTokenSet */\n      iszero\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":659:703  require(!isTokenSet, \"Token is already set\") */\n      tag_25\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x151bdad95b881a5cc8185b1c9958591e481cd95d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":722:742  _token != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":713:767  require (_token != address(0),\"Invalid token address\") */\n      tag_26\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x496e76616c696420746f6b656e2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":777:782  token */\n      0x00\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":777:803  token = ILQTYToken(_token) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup1\n      dup4\n      sstore\n      0x01\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":813:830  isTokenSet = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:968  token.approve(stakingContract, type(uint256).max) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":933:948  stakingContract */\n      swap2\n      dup5\n      and\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:968  token.approve(stakingContract, type(uint256).max) */\n      0x04\n      dup4\n      add\n      mstore\n      not(0x00)\n      0x24\n      dup4\n      add\n      mstore\n      mload\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:924  token */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:932  token.approve */\n      0x095ea7b3\n      swap3\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:968  token.approve(stakingContract, type(uint256).max) */\n      0x44\n      dup1\n      dup3\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      swap3\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:924  token */\n      dup8\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:968  token.approve(stakingContract, type(uint256).max) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      pop\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":988:1011  TokenAddressSet(_token) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup2\n      mstore\n      swap1\n      mload\n      0xd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":919:968  token.approve(stakingContract, type(uint256).max) */\n      0x20\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":988:1011  TokenAddressSet(_token) */\n      add\n      swap1\n      log1\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":596:1018  function setToken(address _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1024:1164  function renounceOwnership() external onlyOwner {... */\n    tag_13:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":298:303  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":284:303  msg.sender == owner */\n      eq\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":276:321  require(msg.sender == owner, \"Not the owner\") */\n      tag_32\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_32:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1090:1100  isTokenSet */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1082:1129  require(isTokenSet,\"Token address not yet set\") */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6b656e2061646472657373206e6f74207965742073657400000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1139:1144  owner */\n      0x02\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1139:1157  owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":1024:1164  function renounceOwnership() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":218:238  address public owner */\n    tag_15:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":190:212  bool public isTokenSet */\n    tag_17:\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":154:184  address public stakingContract */\n    tag_19:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/LQTY/LQTYVault.sol\":125:148  ILQTYToken public token */\n    tag_21:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208598b7156be62f346d624aa94aa416f5e5a77870d13126fcb409e7eec333f61164736f6c634300060b0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104c83803806104c88339818101604052602081101561003357600080fd5b50516001600160a01b038116610090576040805162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e747261637420616464726573730000000000000000604482015290519081900360640190fd5b600180546001600160a01b039092166001600160a01b03199283161790556002805490911633179055610400806100c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063144fa6d714610067578063715018a61461008f5780638da5cb5b146100975780639ee7138c146100bb578063ee99205c146100d7578063fc0c546a146100df575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b03166100e7565b005b61008d6102ce565b61009f61038d565b604080516001600160a01b039092168252519081900360200190f35b6100c361039c565b604080519115158252519081900360200190f35b61009f6103ac565b61009f6103bb565b6002546001600160a01b03163314610136576040805162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b604482015290519081900360640190fd5b600154600160a01b900460ff161561018c576040805162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc8185b1c9958591e481cd95d60621b604482015290519081900360640190fd5b6001600160a01b0381166101df576040805162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b604482015290519081900360640190fd5b600080546001600160a01b038084166001600160a01b0319909216919091178083556001805460ff60a01b1916600160a01b17908190556040805163095ea7b360e01b81529184166004830152600019602483015251919092169263095ea7b392604480820193602093909283900390910190829087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050506040513d602081101561028d57600080fd5b5050604080516001600160a01b038316815290517fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692669181900360200190a150565b6002546001600160a01b0316331461031d576040805162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b604482015290519081900360640190fd5b600154600160a01b900460ff1661037b576040805162461bcd60e51b815260206004820152601960248201527f546f6b656e2061646472657373206e6f74207965742073657400000000000000604482015290519081900360640190fd5b600280546001600160a01b0319169055565b6002546001600160a01b031681565b600154600160a01b900460ff1681565b6001546001600160a01b031681565b6000546001600160a01b03168156fea26469706673582212208598b7156be62f346d624aa94aa416f5e5a77870d13126fcb409e7eec333f61164736f6c634300060b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4C8 CODESIZE SUB DUP1 PUSH2 0x4C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH2 0x400 DUP1 PUSH2 0xC8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x9EE7138C EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x9F PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x9F PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x136 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8185B1C9958591E481CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP1 DUP4 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xD82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x31D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x37B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2061646472657373206E6F74207965742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 SWAP9 0xB7 ISZERO PUSH12 0xE62F346D624AA94AA416F5E5 0xA7 PUSH25 0x70D13126FCB409E7EEC333F61164736F6C634300060B003300 ",
							"sourceMap": "98:1068:3:-:0;;;390:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:200:3;-1:-1:-1;;;;;453:30:3;;445:66;;;;;-1:-1:-1;;;445:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:15;:34;;-1:-1:-1;;;;;521:34:3;;;-1:-1:-1;;;;;;521:34:3;;;;;;565:5;:18;;;;;573:10;565:18;;;98:1068;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063144fa6d714610067578063715018a61461008f5780638da5cb5b146100975780639ee7138c146100bb578063ee99205c146100d7578063fc0c546a146100df575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b03166100e7565b005b61008d6102ce565b61009f61038d565b604080516001600160a01b039092168252519081900360200190f35b6100c361039c565b604080519115158252519081900360200190f35b61009f6103ac565b61009f6103bb565b6002546001600160a01b03163314610136576040805162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b604482015290519081900360640190fd5b600154600160a01b900460ff161561018c576040805162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc8185b1c9958591e481cd95d60621b604482015290519081900360640190fd5b6001600160a01b0381166101df576040805162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b604482015290519081900360640190fd5b600080546001600160a01b038084166001600160a01b0319909216919091178083556001805460ff60a01b1916600160a01b17908190556040805163095ea7b360e01b81529184166004830152600019602483015251919092169263095ea7b392604480820193602093909283900390910190829087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050506040513d602081101561028d57600080fd5b5050604080516001600160a01b038316815290517fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692669181900360200190a150565b6002546001600160a01b0316331461031d576040805162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b604482015290519081900360640190fd5b600154600160a01b900460ff1661037b576040805162461bcd60e51b815260206004820152601960248201527f546f6b656e2061646472657373206e6f74207965742073657400000000000000604482015290519081900360640190fd5b600280546001600160a01b0319169055565b6002546001600160a01b031681565b600154600160a01b900460ff1681565b6001546001600160a01b031681565b6000546001600160a01b03168156fea26469706673582212208598b7156be62f346d624aa94aa416f5e5a77870d13126fcb409e7eec333f61164736f6c634300060b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x9EE7138C EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x9F PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x9F PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x136 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8185B1C9958591E481CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP1 DUP4 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xD82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x31D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x37B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2061646472657373206E6F74207965742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 SWAP9 0xB7 ISZERO PUSH12 0xE62F346D624AA94AA416F5E5 0xA7 PUSH25 0x70D13126FCB409E7EEC333F61164736F6C634300060B003300 ",
							"sourceMap": "98:1068:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:422;;;;;;;;;;;;;;;;-1:-1:-1;596:422:3;-1:-1:-1;;;;;596:422:3;;:::i;:::-;;1024:140;;;:::i;218:20::-;;;:::i;:::-;;;;-1:-1:-1;;;;;218:20:3;;;;;;;;;;;;;;190:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;154:30;;;:::i;125:23::-;;;:::i;596:422::-;298:5;;-1:-1:-1;;;;;298:5:3;284:10;:19;276:45;;;;;-1:-1:-1;;;276:45:3;;;;;;;;;;;;-1:-1:-1;;;276:45:3;;;;;;;;;;;;;;;668:10:::1;::::0;-1:-1:-1;;;668:10:3;::::1;;;667:11;659:44;;;::::0;;-1:-1:-1;;;659:44:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;659:44:3;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;722:20:3;::::1;713:54;;;::::0;;-1:-1:-1;;;713:54:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;713:54:3;;;;;;;;;;;;;::::1;;777:5;:26:::0;;-1:-1:-1;;;;;777:26:3;;::::1;-1:-1:-1::0;;;;;;777:26:3;;::::1;::::0;;;::::1;::::0;;;;813:17;;-1:-1:-1;;;;813:17:3::1;-1:-1:-1::0;;;813:17:3::1;::::0;;;;919:49:::1;::::0;;-1:-1:-1;;;919:49:3;;933:15;;::::1;919:49;::::0;::::1;::::0;-1:-1:-1;;919:49:3;;;;;:5;;;::::1;::::0;:13:::1;::::0;:49;;;;;::::1;::::0;;;;;;;;;;;;:5;:49;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;988:23:3::1;::::0;;-1:-1:-1;;;;;988:23:3;::::1;::::0;;;;::::1;::::0;;;;919:49:::1;988:23:::0;;::::1;596:422:::0;:::o;1024:140::-;298:5;;-1:-1:-1;;;;;298:5:3;284:10;:19;276:45;;;;;-1:-1:-1;;;276:45:3;;;;;;;;;;;;-1:-1:-1;;;276:45:3;;;;;;;;;;;;;;;1090:10:::1;::::0;-1:-1:-1;;;1090:10:3;::::1;;;1082:47;;;::::0;;-1:-1:-1;;;1082:47:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1139:5;:18:::0;;-1:-1:-1;;;;;;1139:18:3::1;::::0;;1024:140::o;218:20::-;;;-1:-1:-1;;;;;218:20:3;;:::o;190:22::-;;;-1:-1:-1;;;190:22:3;;;;;:::o;154:30::-;;;-1:-1:-1;;;;;154:30:3;;:::o;125:23::-;;;-1:-1:-1;;;;;125:23:3;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "204800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isTokenSet()": "1071",
								"owner()": "1059",
								"renounceOwnership()": "22654",
								"setToken(address)": "infinite",
								"stakingContract()": "1103",
								"token()": "1125"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 390,
									"end": 590,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 390,
									"end": 590,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 390,
									"end": 590,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 453,
									"end": 483,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 453,
									"end": 483,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "496E76616C696420636F6E747261637420616464726573730000000000000000"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 445,
									"end": 511,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 445,
									"end": 511,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 536,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 555,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 555,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 565,
									"end": 570,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 573,
									"end": 583,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1166,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208598b7156be62f346d624aa94aa416f5e5a77870d13126fcb409e7eec333f61164736f6c634300060b0033",
									".code": [
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "144FA6D7"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "9EE7138C"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "EE99205C"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 1166,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 668,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 668,
											"end": 678,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 668,
											"end": 678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 668,
											"end": 678,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 668,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 668,
											"end": 678,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 667,
											"end": 678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881A5CC8185B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 659,
											"end": 703,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 659,
											"end": 703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 722,
											"end": 742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 722,
											"end": 742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420746F6B656E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 713,
											"end": 767,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 713,
											"end": 767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 777,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 813,
											"end": 830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 830,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 933,
											"end": 948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 948,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 933,
											"end": 948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 932,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 919,
											"end": 932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 924,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 919,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "D82CAD5FDC98633445B90F806F2E1A61A5409F92187EE9CD87F1DA18C9069266"
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1018,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 321,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "546F6B656E2061646472657373206E6F74207965742073657400000000000000"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1082,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1139,
											"end": 1157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1157,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1157,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1157,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 218,
											"end": 238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 190,
											"end": 212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 190,
											"end": 212,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 190,
											"end": 212,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 154,
											"end": 184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 154,
											"end": 184,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 125,
											"end": 148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 125,
											"end": 148,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isTokenSet()": "9ee7138c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setToken(address)": "144fa6d7",
							"stakingContract()": "ee99205c",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isTokenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ILQTYToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/LQTY/LQTYVault.sol\":\"LQTYVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/IERC20.sol\":{\"keccak256\":\"0xe0b2473eba89df8d27d7cea2a99fce788c212f3fd393c9508e449e51a3f220fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8522c2a1abbac5136e3b0d76f458e2ecc9d380687444517a11db341634e9c146\",\"dweb:/ipfs/QmXuyq8uopmrPruJvhXX9q5X2xqmrYmTauhEPQhoKjmaV9\"]},\"contracts/contracts/Dependencies/IERC2612.sol\":{\"keccak256\":\"0xd376458452f8b480bfea549637bd71d3f9eb1f12e9d59d1beff373417462d67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0750f6f0a3624aa6cc128d5e666f78b5edf7e394a08c4c06b7ef536278d34af\",\"dweb:/ipfs/QmRTv2MnvAAbuBDtDNWN4Jyv5dAsCdLAzGpJPSnforPLqv\"]},\"contracts/contracts/Interfaces/ILQTYToken.sol\":{\"keccak256\":\"0x5e4ffb34b4f3fa77718061a40858722b3811be1ea99ca498c637e97237a4a83a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c729af77d7c08cb4ac0b0886dbda817afd5b83a235797b82b0ce9b3a251faf7\",\"dweb:/ipfs/QmbWf5HVLs1v7vrfuLzgXhddUvyPW76YXLYMRqH96o5Bpx\"]},\"contracts/contracts/LQTY/LQTYVault.sol\":{\"keccak256\":\"0x0132a7980dd9fb2d6c6280bf0d52f5f077b129dd06cc7a6446ac0893a046235b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e61e20b709c0772c01806a1bd0cf0c7d8c17898a39ba01117d33e176cc6d3880\",\"dweb:/ipfs/QmSB71dwvjUxHiLtCRjoZFUAs9koRuawjHXBRKT2k3eXY6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 193,
								"contract": "contracts/contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ILQTYToken)188"
							},
							{
								"astId": 195,
								"contract": "contracts/contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "stakingContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 197,
								"contract": "contracts/contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "isTokenSet",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 199,
								"contract": "contracts/contracts/LQTY/LQTYVault.sol:LQTYVault",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ILQTYToken)188": {
								"encoding": "inplace",
								"label": "contract ILQTYToken",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/Dependencies/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:222:0",
								"text": " Based on the OpenZeppelin IER20 interface:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "304:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "420:9:0"
									},
									"scope": 110,
									"src": "375:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "436:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "571:9:0"
									},
									"scope": 110,
									"src": "513:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "587:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "819:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "818:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "871:6:0"
									},
									"scope": 110,
									"src": "801:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "884:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1171:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1226:9:0"
									},
									"scope": 110,
									"src": "1153:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "39509351",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:37:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 110,
									"src": "1241:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a457c2d7",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1360:42:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1420:6:0"
									},
									"scope": 110,
									"src": "1334:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1433:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2114:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2096:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2148:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:6:0"
									},
									"scope": 110,
									"src": "2080:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2160:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2499:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2482:51:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2551:6:0"
									},
									"scope": 110,
									"src": "2461:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2602:15:0"
									},
									"scope": 110,
									"src": "2564:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "2664:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:15:0"
									},
									"scope": 110,
									"src": "2623:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "2727:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2726:7:0"
									},
									"scope": 110,
									"src": "2684:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2744:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 100,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2922:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2944:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2921:57:0"
									},
									"src": "2907:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2985:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 109,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3153:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3176:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3152:63:0"
									},
									"src": "3138:78:0"
								}
							],
							"scope": 111,
							"src": "281:2937:0"
						}
					],
					"src": "33:3185:0"
				},
				"id": 0
			},
			"contracts/contracts/Dependencies/IERC2612.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/IERC2612.sol",
					"exportedSymbols": {
						"IERC2612": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "58:429:1",
								"text": " @dev Interface of the ERC2612 standard as defined in the EIP.\n Adds the {permit} method, which can be used to change one's\n {IERC20-allowance} without having to send a transaction, by signing a\n message. This allows users to spend tokens without having to hold Ether.\n See https://eips.ethereum.org/EIPS/eip-2612.\n \n Code adapted from https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2237/"
							},
							"fullyImplemented": false,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC2612",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "513:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1368:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1437:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1455:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 123,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1464:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1475:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1367:118:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:1"
									},
									"scope": 155,
									"src": "1352:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1505:526:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases `owner`'s nonce by one. This\n prevents a signature from being used multiple times.\n `owner` can limit the time a Permit is valid for by setting `deadline` to \n a value in the near future. The deadline argument can be set to uint(-1) to \n create Permits that effectively never expire."
									},
									"functionSelector": "7ecebe00",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "2052:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2051:15:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "2090:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2089:9:1"
									},
									"scope": 155,
									"src": "2036:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:2:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "2151:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2151:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2150:15:1"
									},
									"scope": 155,
									"src": "2109:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "10ce43bd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTypeHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2220:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:9:1"
									},
									"scope": 155,
									"src": "2171:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f698da25",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "domainSeparator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "2284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2283:9:1"
									},
									"scope": 155,
									"src": "2234:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "488:1807:1"
						}
					],
					"src": "33:2263:1"
				},
				"id": 1
			},
			"contracts/contracts/Interfaces/ILQTYToken.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Interfaces/ILQTYToken.sol",
					"exportedSymbols": {
						"ILQTYToken": [
							188
						]
					},
					"id": 189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 157,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/IERC20.sol",
							"file": "../Dependencies/IERC20.sol",
							"id": 158,
							"nodeType": "ImportDirective",
							"scope": 189,
							"sourceUnit": 111,
							"src": "58:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/Dependencies/IERC2612.sol",
							"file": "../Dependencies/IERC2612.sol",
							"id": 159,
							"nodeType": "ImportDirective",
							"scope": 189,
							"sourceUnit": 156,
							"src": "95:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 160,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 110,
										"src": "159:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$110",
											"typeString": "contract IERC20"
										}
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "159:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 162,
										"name": "IERC2612",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 155,
										"src": "167:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612_$155",
											"typeString": "contract IERC2612"
										}
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "167:8:2"
								}
							],
							"contractDependencies": [
								110,
								155
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 188,
							"linearizedBaseContracts": [
								188,
								155,
								110
							],
							"name": "ILQTYToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 167,
									"name": "CommunityIssuanceAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_communityIssuanceAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "248:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "247:35:2"
									},
									"src": "214:69:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 171,
									"name": "LQTYStakingAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lqtyStakingAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "316:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:29:2"
									},
									"src": "288:57:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 175,
									"name": "LockupContractFactoryAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockupContractFactoryAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "388:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:39:2"
									},
									"src": "350:77:2"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f3a2568b",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToLQTYStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "507:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:34:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:2"
									},
									"scope": 188,
									"src": "463:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3c84b7c2",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDeploymentStartTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "595:9:2"
									},
									"scope": 188,
									"src": "539:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 189,
							"src": "135:548:2"
						}
					],
					"src": "33:651:2"
				},
				"id": 2
			},
			"contracts/contracts/LQTY/LQTYVault.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/LQTY/LQTYVault.sol",
					"exportedSymbols": {
						"LQTYVault": [
							308
						]
					},
					"id": 309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 190,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/contracts/Interfaces/ILQTYToken.sol",
							"file": "../Interfaces/ILQTYToken.sol",
							"id": 191,
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 189,
							"src": "58:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "LQTYVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 193,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 308,
									"src": "125:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILQTYToken_$188",
										"typeString": "contract ILQTYToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 192,
										"name": "ILQTYToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 188,
										"src": "125:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILQTYToken_$188",
											"typeString": "contract ILQTYToken"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 195,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 308,
									"src": "154:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 194,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ee7138c",
									"id": 197,
									"mutability": "mutable",
									"name": "isTokenSet",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 308,
									"src": "190:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 196,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "190:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 199,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 308,
									"src": "218:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "266:73:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "284:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "284:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "298:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "284:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "305:15:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "276:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "276:45:3"
											},
											{
												"id": 209,
												"nodeType": "PlaceholderStatement",
												"src": "331:1:3"
											}
										]
									},
									"documentation": null,
									"id": 211,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:3"
									},
									"src": "245:94:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 215,
									"name": "TokenAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "368:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:16:3"
									},
									"src": "345:39:3"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "435:155:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 221,
																"name": "_stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "453:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "473:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 222,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "473:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "473:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "453:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c696420636f6e74726163742061646472657373",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "484:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															},
															"value": "Invalid contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "445:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "445:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "445:66:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 230,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "521:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 231,
														"name": "_stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "539:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "521:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "521:34:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 234,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "565:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 235,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "573:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "573:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "565:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "565:18:3"
											}
										]
									},
									"documentation": null,
									"id": 240,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_stakingContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "402:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "401:26:3"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:3"
									},
									"scope": 308,
									"src": "390:200:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "649:369:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "667:11:3",
															"subExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "isTokenSet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "668:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e20697320616c726561647920736574",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "680:22:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327",
																"typeString": "literal_string \"Token is already set\""
															},
															"value": "Token is already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a54bca33a63e211314d3b9affc33a5b696b06265de7ed206b09bc4f2ea849327",
																"typeString": "literal_string \"Token is already set\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "659:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "659:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 254,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "722:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "740:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "732:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 255,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "732:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "732:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "722:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:23:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "713:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "713:54:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 263,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "777:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$188",
															"typeString": "contract ILQTYToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 265,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "796:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 264,
															"name": "ILQTYToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "785:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILQTYToken_$188_$",
																"typeString": "type(contract ILQTYToken)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "785:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILQTYToken_$188",
															"typeString": "contract ILQTYToken"
														}
													},
													"src": "777:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILQTYToken_$188",
														"typeString": "contract ILQTYToken"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "777:26:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 269,
														"name": "isTokenSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "813:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "826:4:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "813:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "813:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "933:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "955:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 278,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "955:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 277,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -27,
																	"src": "950:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "950:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "950:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 273,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "919:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILQTYToken_$188",
																"typeString": "contract ILQTYToken"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "919:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "919:49:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1004:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 284,
														"name": "TokenAddressSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "988:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "EmitStatement",
												"src": "983:28:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "144fa6d7",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 245,
											"modifierName": {
												"argumentTypes": null,
												"id": 244,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 211,
												"src": "639:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "639:9:3"
										}
									],
									"name": "setToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "614:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "613:16:3"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:0:3"
									},
									"scope": 308,
									"src": "596:422:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1072:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 295,
															"name": "isTokenSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1090:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e2061646472657373206e6f742079657420736574",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1101:27:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f",
																"typeString": "literal_string \"Token address not yet set\""
															},
															"value": "Token address not yet set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48800e383ccabeeb7c3f3a9b8d5c15515a210125ad5779f399c950bfe846a35f",
																"typeString": "literal_string \"Token address not yet set\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1082:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1082:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "1082:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 299,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1139:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1155:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1147:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 300,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1147:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1147:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1139:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1139:18:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "715018a6",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 292,
											"modifierName": {
												"argumentTypes": null,
												"id": 291,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 211,
												"src": "1062:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1062:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:3"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:0:3"
									},
									"scope": 308,
									"src": "1024:140:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 309,
							"src": "98:1068:3"
						}
					],
					"src": "33:1133:3"
				},
				"id": 3
			}
		}
	}
}