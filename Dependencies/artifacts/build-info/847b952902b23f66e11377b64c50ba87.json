{
	"id": "847b952902b23f66e11377b64c50ba87",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.11",
	"solcLongVersion": "0.6.11+commit.5ef660b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/Dependencies/ITellor.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.11;\n\ninterface ITellor {\n    /**\n     * @dev Helps initialize a dispute by assigning it a disputeId\n     * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\n     * invalidated value information to POS voting\n     * @param _requestId being disputed\n     * @param _timestamp being disputed\n     * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\n     * requires 5 miners to submit a value.\n     */\n    function beginDispute(\n        uint256 _requestId,\n        uint256 _timestamp,\n        uint256 _minerIndex\n    ) external;\n\n    /**\n     * @dev Allows token holders to vote\n     * @param _disputeId is the dispute id\n     * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\n     */\n    function vote(uint256 _disputeId, bool _supportsDispute) external;\n\n    /**\n     * @dev tallies the votes.\n     * @param _disputeId is the dispute id\n     */\n    function tallyVotes(uint256 _disputeId) external;\n\n    /**\n     * @dev Allows for a fork to be proposed\n     * @param _propNewTellorAddress address for new proposed Tellor\n     */\n    function proposeFork(address _propNewTellorAddress) external;\n\n    /**\n     * @dev Add tip to Request value from oracle\n     * @param _requestId being requested to be mined\n     * @param _tip amount the requester is willing to pay to be get on queue. Miners\n     * mine the onDeckQueryHash, or the api with the highest payout pool\n     */\n    function addTip(uint256 _requestId, uint256 _tip) external;\n\n    /**\n     * @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n     * @param _nonce uint submitted by miner\n     * @param _requestId the apiId being mined\n     * @param _value of api query\n     *\n     */\n    function submitMiningSolution(\n        string calldata _nonce,\n        uint256 _requestId,\n        uint256 _value\n    ) external;\n\n    /**\n     * @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n     * @param _nonce uint submitted by miner\n     * @param _requestId is the array of the 5 PSR's being mined\n     * @param _value is an array of 5 values\n     */\n    function submitMiningSolution(\n        string calldata _nonce,\n        uint256[5] calldata _requestId,\n        uint256[5] calldata _value\n    ) external;\n\n    /**\n     * @dev Allows the current owner to propose transfer control of the contract to a\n     * newOwner and the ownership is pending until the new owner calls the claimOwnership\n     * function\n     * @param _pendingOwner The address to transfer ownership to.\n     */\n    function proposeOwnership(address payable _pendingOwner) external;\n\n    /**\n     * @dev Allows the new owner to claim control of the contract\n     */\n    function claimOwnership() external;\n\n    /**\n     * @dev This function allows miners to deposit their stake.\n     */\n    function depositStake() external;\n\n    /**\n     * @dev This function allows stakers to request to withdraw their stake (no longer stake)\n     * once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\n     * can withdraw the stake\n     */\n    function requestStakingWithdraw() external;\n\n    /**\n     * @dev This function allows users to withdraw their stake after a 7 day waiting period from request\n     */\n    function withdrawStake() external;\n\n    /**\n     * @dev This function approves a _spender an _amount of tokens to use\n     * @param _spender address\n     * @param _amount amount the spender is being approved for\n     * @return true if spender appproved successfully\n     */\n    function approve(address _spender, uint256 _amount) external returns (bool);\n\n    /**\n     * @dev Allows for a transfer of tokens to _to\n     * @param _to The address to send tokens to\n     * @param _amount The amount of tokens to send\n     * @return true if transfer is successful\n     */\n    function transfer(address _to, uint256 _amount) external returns (bool);\n\n    /**\n     * @dev Sends _amount tokens to _to from _from on the condition it\n     * is approved by _from\n     * @param _from The address holding the tokens being transferred\n     * @param _to The address of the recipient\n     * @param _amount The amount of tokens to be transferred\n     * @return True if the transfer was successful\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external returns (bool);\n\n    /**\n     * @dev Allows users to access the token's name\n     */\n    function name() external pure returns (string memory);\n\n    /**\n     * @dev Allows users to access the token's symbol\n     */\n    function symbol() external pure returns (string memory);\n\n    /**\n     * @dev Allows users to access the number of decimals\n     */\n    function decimals() external pure returns (uint8);\n\n    /**\n     * @dev Getter for the current variables that include the 5 requests Id's\n     * @return _challenge _requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip\n     */\n    function getNewCurrentVariables()\n        external\n        view\n        returns (\n            bytes32 _challenge,\n            uint256[5] memory _requestIds,\n            uint256 _difficutly,\n            uint256 _tip\n        );\n\n    /**\n     * @dev Getter for the top tipped 5 requests Id's\n     * @return _requestIds the 5 requestsId\n     */\n    function getTopRequestIDs()\n        external\n        view\n        returns (uint256[5] memory _requestIds);\n\n    /**\n     * @dev Getter for the 5 requests Id's next in line to get mined\n     * @return idsOnDeck tipsOnDeck  the 5 requestsId\n     */\n    function getNewVariablesOnDeck()\n        external\n        view\n        returns (uint256[5] memory idsOnDeck, uint256[5] memory tipsOnDeck);\n\n    /**\n     * @dev Updates the Tellor address after a proposed fork has\n     * passed the vote and day has gone by without a dispute\n     * @param _disputeId the disputeId for the proposed fork\n     */\n    function updateTellor(uint256 _disputeId) external;\n\n    /**\n     * @dev Allows disputer to unlock the dispute fee\n     * @param _disputeId to unlock fee from\n     */\n    function unlockDisputeFee(uint256 _disputeId) external;\n\n    /**\n     * @param _user address\n     * @param _spender address\n     * @return Returns the remaining allowance of tokens granted to the _spender from the _user\n     */\n    function allowance(address _user, address _spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev This function returns whether or not a given user is allowed to trade a given amount\n     * @param _user address\n     * @param _amount uint of amount\n     * @return true if the user is alloed to trade the amount specified\n     */\n    function allowedToTrade(address _user, uint256 _amount)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Gets balance of owner specified\n     * @param _user is the owner address used to look up the balance\n     * @return Returns the balance associated with the passed in _user\n     */\n    function balanceOf(address _user) external view returns (uint256);\n\n    /**\n     * @dev Queries the balance of _user at a specific _blockNumber\n     * @param _user The address from which the balance will be retrieved\n     * @param _blockNumber The block number when the balance is queried\n     * @return The balance at _blockNumber\n     */\n    function balanceOfAt(address _user, uint256 _blockNumber)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev This function tells you if a given challenge has been completed by a given miner\n     * @param _challenge the challenge to search for\n     * @param _miner address that you want to know if they solved the challenge\n     * @return true if the _miner address provided solved the\n     */\n    function didMine(bytes32 _challenge, address _miner)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Checks if an address voted in a given dispute\n     * @param _disputeId to look up\n     * @param _address to look up\n     * @return bool of whether or not party voted\n     */\n    function didVote(uint256 _disputeId, address _address)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev allows Tellor to read data from the addressVars mapping\n     * @param _data is the keccak256(\"variable_name\") of the variable that is being accessed.\n     * These are examples of how the variables are saved within other functions:\n     * addressVars[keccak256(\"_owner\")]\n     * addressVars[keccak256(\"tellorContract\")]\n     * return address\n     */\n    function getAddressVars(bytes32 _data) external view returns (address);\n\n    /**\n     * @dev Gets all dispute variables\n     * @param _disputeId to look up\n     * @return bytes32 hash of dispute\n     * @return bool executed where true if it has been voted on\n     * @return bool disputeVotePassed\n     * @return bool isPropFork true if the dispute is a proposed fork\n     * @return address of reportedMiner\n     * @return address of reportingParty\n     * @return address of proposedForkAddress\n     *    uint of requestId\n     *    uint of timestamp\n     *    uint of value\n     *    uint of minExecutionDate\n     *    uint of numberOfVotes\n     *    uint of blocknumber\n     *    uint of minerSlot\n     *    uint of quorum\n     *    uint of fee\n     * @return int count of the current tally\n     */\n    function getAllDisputeVars(uint256 _disputeId)\n        external\n        view\n        returns (\n            bytes32,\n            bool,\n            bool,\n            bool,\n            address,\n            address,\n            address,\n            uint256[9] memory,\n            int256\n        );\n\n    /**\n     * @dev Getter function for variables for the requestId being currently mined(currentRequestId)\n     * @return current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\n     */\n    function getCurrentVariables()\n        external\n        view\n        returns (\n            bytes32,\n            uint256,\n            uint256,\n            string memory,\n            uint256,\n            uint256\n        );\n\n    /**\n     * @dev Checks if a given hash of miner,requestId has been disputed\n     * @param _hash is the sha256(abi.encodePacked(_miners[2],_requestId));\n     * @return uint disputeId\n     */\n    function getDisputeIdByDisputeHash(bytes32 _hash)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Checks for uint variables in the disputeUintVars mapping based on the disuputeId\n     * @param _disputeId is the dispute id;\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the disputeUintVars under the Dispute struct\n     * @return uint value for the bytes32 data submitted\n     */\n    function getDisputeUintVars(uint256 _disputeId, bytes32 _data)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the a value for the latest timestamp available\n     * @return value for timestamp of last proof of work submited\n     * @return true if the is a timestamp for the lastNewValue\n     */\n    function getLastNewValue() external view returns (uint256, bool);\n\n    /**\n     * @dev Gets the a value for the latest timestamp available\n     * @param _requestId being requested\n     * @return value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\n     */\n    function getLastNewValueById(uint256 _requestId)\n        external\n        view\n        returns (uint256, bool);\n\n    /**\n     * @dev Gets blocknumber for mined timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up blocknumber\n     * @return uint of the blocknumber which the dispute was mined\n     */\n    function getMinedBlockNum(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up miners for\n     * @return the 5 miners' addresses\n     */\n    function getMinersByRequestIdAndTimestamp(\n        uint256 _requestId,\n        uint256 _timestamp\n    ) external view returns (address[5] memory);\n\n    /**\n     * @dev Counts the number of values that have been submited for the request\n     * if called for the currentRequest being mined it can tell you how many miners have submitted a value for that\n     * request so far\n     * @param _requestId the requestId to look up\n     * @return uint count of the number of values received for the requestId\n     */\n    function getNewValueCountbyRequestId(uint256 _requestId)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for the specified requestQ index\n     * @param _index to look up in the requestQ array\n     * @return uint of reqeuestId\n     */\n    function getRequestIdByRequestQIndex(uint256 _index)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for requestId based on timestamp\n     * @param _timestamp to check requestId\n     * @return uint of reqeuestId\n     */\n    function getRequestIdByTimestamp(uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for requestId based on the queryHash\n     * @param _request is the hash(of string api and granularity) to check if a request already exists\n     * @return uint requestId\n     */\n    function getRequestIdByQueryHash(bytes32 _request)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for the requestQ array\n     * @return the requestQ arrray\n     */\n    function getRequestQ() external view returns (uint256[51] memory);\n\n    /**\n     * @dev Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct\n     * for the requestId specified\n     * @param _requestId to look up\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the apiUintVars under the requestDetails struct\n     * @return uint value of the apiUintVars specified in _data for the requestId specified\n     */\n    function getRequestUintVars(uint256 _requestId, bytes32 _data)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the API struct variables that are not mappings\n     * @param _requestId to look up\n     * @return string of api to query\n     * @return string of symbol of api to query\n     * @return bytes32 hash of string\n     * @return bytes32 of the granularity(decimal places) requested\n     * @return uint of index in requestQ array\n     * @return uint of current payout/tip for this requestId\n     */\n    function getRequestVars(uint256 _requestId)\n        external\n        view\n        returns (\n            string memory,\n            string memory,\n            bytes32,\n            uint256,\n            uint256,\n            uint256\n        );\n\n    /**\n     * @dev This function allows users to retireve all information about a staker\n     * @param _staker address of staker inquiring about\n     * @return uint current state of staker\n     * @return uint startDate of staking\n     */\n    function getStakerInfo(address _staker)\n        external\n        view\n        returns (uint256, uint256);\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestampt to look up miners for\n     * @return address[5] array of 5 addresses ofminers that mined the requestId\n     */\n    function getSubmissionsByTimestamp(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256[5] memory);\n\n    /**\n     * @dev Gets the timestamp for the value based on their index\n     * @param _requestID is the requestId to look up\n     * @param _index is the value index to look up\n     * @return uint timestamp\n     */\n    function getTimestampbyRequestIDandIndex(uint256 _requestID, uint256 _index)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter for the variables saved under the TellorStorageStruct uintVars variable\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the uintVars under the TellorStorageStruct struct\n     * This is an example of how data is saved into the mapping within other functions:\n     * self.uintVars[keccak256(\"stakerCount\")]\n     * @return uint of specified variable\n     */\n    function getUintVar(bytes32 _data) external view returns (uint256);\n\n    /**\n     * @dev Getter function for next requestId on queue/request with highest payout at time the function is called\n     * @return onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\n     */\n    function getVariablesOnDeck()\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            string memory\n        );\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up miners for\n     * @return bool true if requestId/timestamp is under dispute\n     */\n    function isInDispute(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Retreive value from oracle based on timestamp\n     * @param _requestId being requested\n     * @param _timestamp to retreive data/value from\n     * @return value for timestamp submitted\n     */\n    function retrieveData(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter for the total_supply of oracle tokens\n     * @return uint total supply\n     */\n    function totalSupply() external view returns (uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/Dependencies/ITellor.sol": {
				"ITellor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tip",
									"type": "uint256"
								}
							],
							"name": "addTip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "allowedToTrade",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minerIndex",
									"type": "uint256"
								}
							],
							"name": "beginDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_challenge",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_miner",
									"type": "address"
								}
							],
							"name": "didMine",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "didVote",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getAddressVars",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "getAllDisputeVars",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "",
									"type": "uint256[9]"
								},
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentVariables",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "getDisputeIdByDisputeHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getDisputeUintVars",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLastNewValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getLastNewValueById",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getMinedBlockNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getMinersByRequestIdAndTimestamp",
							"outputs": [
								{
									"internalType": "address[5]",
									"name": "",
									"type": "address[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNewCurrentVariables",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_challenge",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[5]",
									"name": "_requestIds",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256",
									"name": "_difficutly",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tip",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getNewValueCountbyRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNewVariablesOnDeck",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "idsOnDeck",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256[5]",
									"name": "tipsOnDeck",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_request",
									"type": "bytes32"
								}
							],
							"name": "getRequestIdByQueryHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getRequestIdByRequestQIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getRequestIdByTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestQ",
							"outputs": [
								{
									"internalType": "uint256[51]",
									"name": "",
									"type": "uint256[51]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getRequestUintVars",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getRequestVars",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "getStakerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getSubmissionsByTimestamp",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getTimestampbyRequestIDandIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTopRequestIDs",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "_requestIds",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getUintVar",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVariablesOnDeck",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "isInDispute",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_propNewTellorAddress",
									"type": "address"
								}
							],
							"name": "proposeFork",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_pendingOwner",
									"type": "address"
								}
							],
							"name": "proposeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestStakingWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "retrieveData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nonce",
									"type": "string"
								},
								{
									"internalType": "uint256[5]",
									"name": "_requestId",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256[5]",
									"name": "_value",
									"type": "uint256[5]"
								}
							],
							"name": "submitMiningSolution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nonce",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "submitMiningSolution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "tallyVotes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "unlockDisputeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "updateTellor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_supportsDispute",
									"type": "bool"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTip(uint256,uint256)": {
								"details": "Add tip to Request value from oracle",
								"params": {
									"_requestId": "being requested to be mined",
									"_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
								}
							},
							"allowance(address,address)": {
								"params": {
									"_spender": "address",
									"_user": "address"
								},
								"returns": {
									"_0": "Returns the remaining allowance of tokens granted to the _spender from the _user"
								}
							},
							"allowedToTrade(address,uint256)": {
								"details": "This function returns whether or not a given user is allowed to trade a given amount",
								"params": {
									"_amount": "uint of amount",
									"_user": "address"
								},
								"returns": {
									"_0": "true if the user is alloed to trade the amount specified"
								}
							},
							"approve(address,uint256)": {
								"details": "This function approves a _spender an _amount of tokens to use",
								"params": {
									"_amount": "amount the spender is being approved for",
									"_spender": "address"
								},
								"returns": {
									"_0": "true if spender appproved successfully"
								}
							},
							"balanceOf(address)": {
								"details": "Gets balance of owner specified",
								"params": {
									"_user": "is the owner address used to look up the balance"
								},
								"returns": {
									"_0": "Returns the balance associated with the passed in _user"
								}
							},
							"balanceOfAt(address,uint256)": {
								"details": "Queries the balance of _user at a specific _blockNumber",
								"params": {
									"_blockNumber": "The block number when the balance is queried",
									"_user": "The address from which the balance will be retrieved"
								},
								"returns": {
									"_0": "The balance at _blockNumber"
								}
							},
							"beginDispute(uint256,uint256,uint256)": {
								"details": "Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting",
								"params": {
									"_minerIndex": "the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.",
									"_requestId": "being disputed",
									"_timestamp": "being disputed"
								}
							},
							"claimOwnership()": {
								"details": "Allows the new owner to claim control of the contract"
							},
							"decimals()": {
								"details": "Allows users to access the number of decimals"
							},
							"depositStake()": {
								"details": "This function allows miners to deposit their stake."
							},
							"didMine(bytes32,address)": {
								"details": "This function tells you if a given challenge has been completed by a given miner",
								"params": {
									"_challenge": "the challenge to search for",
									"_miner": "address that you want to know if they solved the challenge"
								},
								"returns": {
									"_0": "true if the _miner address provided solved the"
								}
							},
							"didVote(uint256,address)": {
								"details": "Checks if an address voted in a given dispute",
								"params": {
									"_address": "to look up",
									"_disputeId": "to look up"
								},
								"returns": {
									"_0": "bool of whether or not party voted"
								}
							},
							"getAddressVars(bytes32)": {
								"details": "allows Tellor to read data from the addressVars mapping",
								"params": {
									"_data": "is the keccak256(\"variable_name\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\"_owner\")] addressVars[keccak256(\"tellorContract\")] return address"
								}
							},
							"getAllDisputeVars(uint256)": {
								"details": "Gets all dispute variables",
								"params": {
									"_disputeId": "to look up"
								},
								"returns": {
									"_0": "bytes32 hash of dispute",
									"_1": "bool executed where true if it has been voted on",
									"_2": "bool disputeVotePassed",
									"_3": "bool isPropFork true if the dispute is a proposed fork",
									"_4": "address of reportedMiner",
									"_5": "address of reportingParty",
									"_6": "address of proposedForkAddress    uint of requestId    uint of timestamp    uint of value    uint of minExecutionDate    uint of numberOfVotes    uint of blocknumber    uint of minerSlot    uint of quorum    uint of fee",
									"_7": "int count of the current tally"
								}
							},
							"getCurrentVariables()": {
								"details": "Getter function for variables for the requestId being currently mined(currentRequestId)",
								"returns": {
									"_0": "current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
								}
							},
							"getDisputeIdByDisputeHash(bytes32)": {
								"details": "Checks if a given hash of miner,requestId has been disputed",
								"params": {
									"_hash": "is the sha256(abi.encodePacked(_miners[2],_requestId));"
								},
								"returns": {
									"_0": "uint disputeId"
								}
							},
							"getDisputeUintVars(uint256,bytes32)": {
								"details": "Checks for uint variables in the disputeUintVars mapping based on the disuputeId",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct",
									"_disputeId": "is the dispute id;"
								},
								"returns": {
									"_0": "uint value for the bytes32 data submitted"
								}
							},
							"getLastNewValue()": {
								"details": "Gets the a value for the latest timestamp available",
								"returns": {
									"_0": "value for timestamp of last proof of work submited",
									"_1": "true if the is a timestamp for the lastNewValue"
								}
							},
							"getLastNewValueById(uint256)": {
								"details": "Gets the a value for the latest timestamp available",
								"params": {
									"_requestId": "being requested"
								},
								"returns": {
									"_0": "value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
								}
							},
							"getMinedBlockNum(uint256,uint256)": {
								"details": "Gets blocknumber for mined timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up blocknumber"
								},
								"returns": {
									"_0": "uint of the blocknumber which the dispute was mined"
								}
							},
							"getMinersByRequestIdAndTimestamp(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up miners for"
								},
								"returns": {
									"_0": "the 5 miners' addresses"
								}
							},
							"getNewCurrentVariables()": {
								"details": "Getter for the current variables that include the 5 requests Id's",
								"returns": {
									"_challenge": "_requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip"
								}
							},
							"getNewValueCountbyRequestId(uint256)": {
								"details": "Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far",
								"params": {
									"_requestId": "the requestId to look up"
								},
								"returns": {
									"_0": "uint count of the number of values received for the requestId"
								}
							},
							"getNewVariablesOnDeck()": {
								"details": "Getter for the 5 requests Id's next in line to get mined",
								"returns": {
									"idsOnDeck": "tipsOnDeck  the 5 requestsId"
								}
							},
							"getRequestIdByQueryHash(bytes32)": {
								"details": "Getter function for requestId based on the queryHash",
								"params": {
									"_request": "is the hash(of string api and granularity) to check if a request already exists"
								},
								"returns": {
									"_0": "uint requestId"
								}
							},
							"getRequestIdByRequestQIndex(uint256)": {
								"details": "Getter function for the specified requestQ index",
								"params": {
									"_index": "to look up in the requestQ array"
								},
								"returns": {
									"_0": "uint of reqeuestId"
								}
							},
							"getRequestIdByTimestamp(uint256)": {
								"details": "Getter function for requestId based on timestamp",
								"params": {
									"_timestamp": "to check requestId"
								},
								"returns": {
									"_0": "uint of reqeuestId"
								}
							},
							"getRequestQ()": {
								"details": "Getter function for the requestQ array",
								"returns": {
									"_0": "the requestQ arrray"
								}
							},
							"getRequestUintVars(uint256,bytes32)": {
								"details": "Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct",
									"_requestId": "to look up"
								},
								"returns": {
									"_0": "uint value of the apiUintVars specified in _data for the requestId specified"
								}
							},
							"getRequestVars(uint256)": {
								"details": "Gets the API struct variables that are not mappings",
								"params": {
									"_requestId": "to look up"
								},
								"returns": {
									"_0": "string of api to query",
									"_1": "string of symbol of api to query",
									"_2": "bytes32 hash of string",
									"_3": "bytes32 of the granularity(decimal places) requested",
									"_4": "uint of index in requestQ array",
									"_5": "uint of current payout/tip for this requestId"
								}
							},
							"getStakerInfo(address)": {
								"details": "This function allows users to retireve all information about a staker",
								"params": {
									"_staker": "address of staker inquiring about"
								},
								"returns": {
									"_0": "uint current state of staker",
									"_1": "uint startDate of staking"
								}
							},
							"getSubmissionsByTimestamp(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestampt to look up miners for"
								},
								"returns": {
									"_0": "address[5] array of 5 addresses ofminers that mined the requestId"
								}
							},
							"getTimestampbyRequestIDandIndex(uint256,uint256)": {
								"details": "Gets the timestamp for the value based on their index",
								"params": {
									"_index": "is the value index to look up",
									"_requestID": "is the requestId to look up"
								},
								"returns": {
									"_0": "uint timestamp"
								}
							},
							"getTopRequestIDs()": {
								"details": "Getter for the top tipped 5 requests Id's",
								"returns": {
									"_requestIds": "the 5 requestsId"
								}
							},
							"getUintVar(bytes32)": {
								"details": "Getter for the variables saved under the TellorStorageStruct uintVars variable",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\"stakerCount\")]"
								},
								"returns": {
									"_0": "uint of specified variable"
								}
							},
							"getVariablesOnDeck()": {
								"details": "Getter function for next requestId on queue/request with highest payout at time the function is called",
								"returns": {
									"_0": "onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
								}
							},
							"isInDispute(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up miners for"
								},
								"returns": {
									"_0": "bool true if requestId/timestamp is under dispute"
								}
							},
							"name()": {
								"details": "Allows users to access the token's name"
							},
							"proposeFork(address)": {
								"details": "Allows for a fork to be proposed",
								"params": {
									"_propNewTellorAddress": "address for new proposed Tellor"
								}
							},
							"proposeOwnership(address)": {
								"details": "Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function",
								"params": {
									"_pendingOwner": "The address to transfer ownership to."
								}
							},
							"requestStakingWithdraw()": {
								"details": "This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake"
							},
							"retrieveData(uint256,uint256)": {
								"details": "Retreive value from oracle based on timestamp",
								"params": {
									"_requestId": "being requested",
									"_timestamp": "to retreive data/value from"
								},
								"returns": {
									"_0": "value for timestamp submitted"
								}
							},
							"submitMiningSolution(string,uint256,uint256)": {
								"details": "This is called by the miner when they submit the PoW solution (proof of work and value)",
								"params": {
									"_nonce": "uint submitted by miner",
									"_requestId": "the apiId being mined",
									"_value": "of api query"
								}
							},
							"submitMiningSolution(string,uint256[5],uint256[5])": {
								"details": "This is called by the miner when they submit the PoW solution (proof of work and value)",
								"params": {
									"_nonce": "uint submitted by miner",
									"_requestId": "is the array of the 5 PSR's being mined",
									"_value": "is an array of 5 values"
								}
							},
							"symbol()": {
								"details": "Allows users to access the token's symbol"
							},
							"tallyVotes(uint256)": {
								"details": "tallies the votes.",
								"params": {
									"_disputeId": "is the dispute id"
								}
							},
							"totalSupply()": {
								"details": "Getter for the total_supply of oracle tokens",
								"returns": {
									"_0": "uint total supply"
								}
							},
							"transfer(address,uint256)": {
								"details": "Allows for a transfer of tokens to _to",
								"params": {
									"_amount": "The amount of tokens to send",
									"_to": "The address to send tokens to"
								},
								"returns": {
									"_0": "true if transfer is successful"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Sends _amount tokens to _to from _from on the condition it is approved by _from",
								"params": {
									"_amount": "The amount of tokens to be transferred",
									"_from": "The address holding the tokens being transferred",
									"_to": "The address of the recipient"
								},
								"returns": {
									"_0": "True if the transfer was successful"
								}
							},
							"unlockDisputeFee(uint256)": {
								"details": "Allows disputer to unlock the dispute fee",
								"params": {
									"_disputeId": "to unlock fee from"
								}
							},
							"updateTellor(uint256)": {
								"details": "Updates the Tellor address after a proposed fork has passed the vote and day has gone by without a dispute",
								"params": {
									"_disputeId": "the disputeId for the proposed fork"
								}
							},
							"vote(uint256,bool)": {
								"details": "Allows token holders to vote",
								"params": {
									"_disputeId": "is the dispute id",
									"_supportsDispute": "is the vote (true=the dispute has basis false = vote against dispute)"
								}
							},
							"withdrawStake()": {
								"details": "This function allows users to withdraw their stake after a 7 day waiting period from request"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTip(uint256,uint256)": "752d49a1",
							"allowance(address,address)": "dd62ed3e",
							"allowedToTrade(address,uint256)": "999cf26c",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"beginDispute(uint256,uint256,uint256)": "8581af19",
							"claimOwnership()": "4e71e0c8",
							"decimals()": "313ce567",
							"depositStake()": "0d2d76a2",
							"didMine(bytes32,address)": "63bb82ad",
							"didVote(uint256,address)": "a7c438bc",
							"getAddressVars(bytes32)": "133bee5e",
							"getAllDisputeVars(uint256)": "af0b1327",
							"getCurrentVariables()": "a22e407a",
							"getDisputeIdByDisputeHash(bytes32)": "da379941",
							"getDisputeUintVars(uint256,bytes32)": "7f6fd5d9",
							"getLastNewValue()": "fc7cf0a0",
							"getLastNewValueById(uint256)": "3180f8df",
							"getMinedBlockNum(uint256,uint256)": "c775b542",
							"getMinersByRequestIdAndTimestamp(uint256,uint256)": "69026d63",
							"getNewCurrentVariables()": "4049f198",
							"getNewValueCountbyRequestId(uint256)": "46eee1c4",
							"getNewVariablesOnDeck()": "9a7077ab",
							"getRequestIdByQueryHash(bytes32)": "1db842f0",
							"getRequestIdByRequestQIndex(uint256)": "6173c0b8",
							"getRequestIdByTimestamp(uint256)": "0f0b424d",
							"getRequestQ()": "b5413029",
							"getRequestUintVars(uint256,bytes32)": "e0ae93c1",
							"getRequestVars(uint256)": "e1eee6d6",
							"getStakerInfo(address)": "733bdef0",
							"getSubmissionsByTimestamp(uint256,uint256)": "11c98512",
							"getTimestampbyRequestIDandIndex(uint256,uint256)": "77fbb663",
							"getTopRequestIDs()": "fe1cd15d",
							"getUintVar(bytes32)": "612c8f7f",
							"getVariablesOnDeck()": "19e8e03b",
							"isInDispute(uint256,uint256)": "3df0777b",
							"name()": "06fdde03",
							"proposeFork(address)": "26b7d9f6",
							"proposeOwnership(address)": "710bf322",
							"requestStakingWithdraw()": "28449c3a",
							"retrieveData(uint256,uint256)": "93fa4915",
							"submitMiningSolution(string,uint256,uint256)": "68c180d5",
							"submitMiningSolution(string,uint256[5],uint256[5])": "4350283e",
							"symbol()": "95d89b41",
							"tallyVotes(uint256)": "4d318b0e",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockDisputeFee(uint256)": "9a01ca13",
							"updateTellor(uint256)": "f458ab98",
							"vote(uint256,bool)": "c9d27afe",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minerIndex\",\"type\":\"uint256\"}],\"name\":\"beginDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"\",\"type\":\"uint256[9]\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getDisputeUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getLastNewValueById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"internalType\":\"address[5]\",\"name\":\"\",\"type\":\"address[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[5]\",\"name\":\"_requestIds\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256\",\"name\":\"_difficutly\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"idsOnDeck\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[5]\",\"name\":\"tipsOnDeck\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"\",\"type\":\"uint256[51]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getRequestUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopRequestIDs\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_requestIds\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_propNewTellorAddress\",\"type\":\"address\"}],\"name\":\"proposeFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nonce\",\"type\":\"string\"},{\"internalType\":\"uint256[5]\",\"name\":\"_requestId\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[5]\",\"name\":\"_value\",\"type\":\"uint256[5]\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nonce\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"tallyVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"unlockDisputeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"updateTellor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_supportsDispute\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Add tip to Request value from oracle\",\"params\":{\"_requestId\":\"being requested to be mined\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"returns\":{\"_0\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"}},\"allowedToTrade(address,uint256)\":{\"details\":\"This function returns whether or not a given user is allowed to trade a given amount\",\"params\":{\"_amount\":\"uint of amount\",\"_user\":\"address\"},\"returns\":{\"_0\":\"true if the user is alloed to trade the amount specified\"}},\"approve(address,uint256)\":{\"details\":\"This function approves a _spender an _amount of tokens to use\",\"params\":{\"_amount\":\"amount the spender is being approved for\",\"_spender\":\"address\"},\"returns\":{\"_0\":\"true if spender appproved successfully\"}},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"returns\":{\"_0\":\"Returns the balance associated with the passed in _user\"}},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"returns\":{\"_0\":\"The balance at _blockNumber\"}},\"beginDispute(uint256,uint256,uint256)\":{\"details\":\"Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting\",\"params\":{\"_minerIndex\":\"the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.\",\"_requestId\":\"being disputed\",\"_timestamp\":\"being disputed\"}},\"claimOwnership()\":{\"details\":\"Allows the new owner to claim control of the contract\"},\"decimals()\":{\"details\":\"Allows users to access the number of decimals\"},\"depositStake()\":{\"details\":\"This function allows miners to deposit their stake.\"},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"returns\":{\"_0\":\"true if the _miner address provided solved the\"}},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a given dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"returns\":{\"_0\":\"bool of whether or not party voted\"}},\"getAddressVars(bytes32)\":{\"details\":\"allows Tellor to read data from the addressVars mapping\",\"params\":{\"_data\":\"is the keccak256(\\\"variable_name\\\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\\\"_owner\\\")] addressVars[keccak256(\\\"tellorContract\\\")] return address\"}},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"returns\":{\"_0\":\"bytes32 hash of dispute\",\"_1\":\"bool executed where true if it has been voted on\",\"_2\":\"bool disputeVotePassed\",\"_3\":\"bool isPropFork true if the dispute is a proposed fork\",\"_4\":\"address of reportedMiner\",\"_5\":\"address of reportingParty\",\"_6\":\"address of proposedForkAddress    uint of requestId    uint of timestamp    uint of value    uint of minExecutionDate    uint of numberOfVotes    uint of blocknumber    uint of minerSlot    uint of quorum    uint of fee\",\"_7\":\"int count of the current tally\"}},\"getCurrentVariables()\":{\"details\":\"Getter function for variables for the requestId being currently mined(currentRequestId)\",\"returns\":{\"_0\":\"current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\"}},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,requestId has been disputed\",\"params\":{\"_hash\":\"is the sha256(abi.encodePacked(_miners[2],_requestId));\"},\"returns\":{\"_0\":\"uint disputeId\"}},\"getDisputeUintVars(uint256,bytes32)\":{\"details\":\"Checks for uint variables in the disputeUintVars mapping based on the disuputeId\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct\",\"_disputeId\":\"is the dispute id;\"},\"returns\":{\"_0\":\"uint value for the bytes32 data submitted\"}},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"returns\":{\"_0\":\"value for timestamp of last proof of work submited\",\"_1\":\"true if the is a timestamp for the lastNewValue\"}},\"getLastNewValueById(uint256)\":{\"details\":\"Gets the a value for the latest timestamp available\",\"params\":{\"_requestId\":\"being requested\"},\"returns\":{\"_0\":\"value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\"}},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"returns\":{\"_0\":\"uint of the blocknumber which the dispute was mined\"}},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"returns\":{\"_0\":\"the 5 miners' addresses\"}},\"getNewCurrentVariables()\":{\"details\":\"Getter for the current variables that include the 5 requests Id's\",\"returns\":{\"_challenge\":\"_requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip\"}},\"getNewValueCountbyRequestId(uint256)\":{\"details\":\"Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far\",\"params\":{\"_requestId\":\"the requestId to look up\"},\"returns\":{\"_0\":\"uint count of the number of values received for the requestId\"}},\"getNewVariablesOnDeck()\":{\"details\":\"Getter for the 5 requests Id's next in line to get mined\",\"returns\":{\"idsOnDeck\":\"tipsOnDeck  the 5 requestsId\"}},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for requestId based on the queryHash\",\"params\":{\"_request\":\"is the hash(of string api and granularity) to check if a request already exists\"},\"returns\":{\"_0\":\"uint requestId\"}},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the specified requestQ index\",\"params\":{\"_index\":\"to look up in the requestQ array\"},\"returns\":{\"_0\":\"uint of reqeuestId\"}},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for requestId based on timestamp\",\"params\":{\"_timestamp\":\"to check requestId\"},\"returns\":{\"_0\":\"uint of reqeuestId\"}},\"getRequestQ()\":{\"details\":\"Getter function for the requestQ array\",\"returns\":{\"_0\":\"the requestQ arrray\"}},\"getRequestUintVars(uint256,bytes32)\":{\"details\":\"Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct\",\"_requestId\":\"to look up\"},\"returns\":{\"_0\":\"uint value of the apiUintVars specified in _data for the requestId specified\"}},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"returns\":{\"_0\":\"string of api to query\",\"_1\":\"string of symbol of api to query\",\"_2\":\"bytes32 hash of string\",\"_3\":\"bytes32 of the granularity(decimal places) requested\",\"_4\":\"uint of index in requestQ array\",\"_5\":\"uint of current payout/tip for this requestId\"}},\"getStakerInfo(address)\":{\"details\":\"This function allows users to retireve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"returns\":{\"_0\":\"uint current state of staker\",\"_1\":\"uint startDate of staking\"}},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"},\"returns\":{\"_0\":\"address[5] array of 5 addresses ofminers that mined the requestId\"}},\"getTimestampbyRequestIDandIndex(uint256,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_requestID\":\"is the requestId to look up\"},\"returns\":{\"_0\":\"uint timestamp\"}},\"getTopRequestIDs()\":{\"details\":\"Getter for the top tipped 5 requests Id's\",\"returns\":{\"_requestIds\":\"the 5 requestsId\"}},\"getUintVar(bytes32)\":{\"details\":\"Getter for the variables saved under the TellorStorageStruct uintVars variable\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\\\"stakerCount\\\")]\"},\"returns\":{\"_0\":\"uint of specified variable\"}},\"getVariablesOnDeck()\":{\"details\":\"Getter function for next requestId on queue/request with highest payout at time the function is called\",\"returns\":{\"_0\":\"onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\"}},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"returns\":{\"_0\":\"bool true if requestId/timestamp is under dispute\"}},\"name()\":{\"details\":\"Allows users to access the token's name\"},\"proposeFork(address)\":{\"details\":\"Allows for a fork to be proposed\",\"params\":{\"_propNewTellorAddress\":\"address for new proposed Tellor\"}},\"proposeOwnership(address)\":{\"details\":\"Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function\",\"params\":{\"_pendingOwner\":\"The address to transfer ownership to.\"}},\"requestStakingWithdraw()\":{\"details\":\"This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake\"},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"returns\":{\"_0\":\"value for timestamp submitted\"}},\"submitMiningSolution(string,uint256,uint256)\":{\"details\":\"This is called by the miner when they submit the PoW solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"the apiId being mined\",\"_value\":\"of api query\"}},\"submitMiningSolution(string,uint256[5],uint256[5])\":{\"details\":\"This is called by the miner when they submit the PoW solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"is the array of the 5 PSR's being mined\",\"_value\":\"is an array of 5 values\"}},\"symbol()\":{\"details\":\"Allows users to access the token's symbol\"},\"tallyVotes(uint256)\":{\"details\":\"tallies the votes.\",\"params\":{\"_disputeId\":\"is the dispute id\"}},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"returns\":{\"_0\":\"uint total supply\"}},\"transfer(address,uint256)\":{\"details\":\"Allows for a transfer of tokens to _to\",\"params\":{\"_amount\":\"The amount of tokens to send\",\"_to\":\"The address to send tokens to\"},\"returns\":{\"_0\":\"true if transfer is successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Sends _amount tokens to _to from _from on the condition it is approved by _from\",\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"returns\":{\"_0\":\"True if the transfer was successful\"}},\"unlockDisputeFee(uint256)\":{\"details\":\"Allows disputer to unlock the dispute fee\",\"params\":{\"_disputeId\":\"to unlock fee from\"}},\"updateTellor(uint256)\":{\"details\":\"Updates the Tellor address after a proposed fork has passed the vote and day has gone by without a dispute\",\"params\":{\"_disputeId\":\"the disputeId for the proposed fork\"}},\"vote(uint256,bool)\":{\"details\":\"Allows token holders to vote\",\"params\":{\"_disputeId\":\"is the dispute id\",\"_supportsDispute\":\"is the vote (true=the dispute has basis false = vote against dispute)\"}},\"withdrawStake()\":{\"details\":\"This function allows users to withdraw their stake after a 7 day waiting period from request\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Dependencies/ITellor.sol\":\"ITellor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/Dependencies/ITellor.sol\":{\"keccak256\":\"0x9f2984a17b9afddcc5bbac4c07714e6b1f6edb1cc54714ddd40fb4409fe259eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351276482be04a139a59e46e14899c733477ba1ce366e68ef44214bc2240bdba\",\"dweb:/ipfs/QmeX9xc56bJFKpeLqznajpzS8zs5z8iiNaVmfNbPeVgcP6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/Dependencies/ITellor.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/Dependencies/ITellor.sol",
					"exportedSymbols": {
						"ITellor": [
							492
						]
					},
					"id": 493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492
							],
							"name": "ITellor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "81:463:0",
										"text": " @dev Helps initialize a dispute by assigning it a disputeId\n when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\n invalidated value information to POS voting\n @param _requestId being disputed\n @param _timestamp being disputed\n @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\n requires 5 miners to submit a value."
									},
									"functionSelector": "8581af19",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beginDispute",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "580:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "608:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_minerIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "636:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "570:91:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:0:0"
									},
									"scope": 492,
									"src": "549:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "677:196:0",
										"text": " @dev Allows token holders to vote\n @param _disputeId is the dispute id\n @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)"
									},
									"functionSelector": "c9d27afe",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "892:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_supportsDispute",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "912:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:43:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:0"
									},
									"scope": 492,
									"src": "878:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "950:85:0",
										"text": " @dev tallies the votes.\n @param _disputeId is the dispute id"
									},
									"functionSelector": "4d318b0e",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tallyVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "1060:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1059:20:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 492,
									"src": "1040:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1095:124:0",
										"text": " @dev Allows for a fork to be proposed\n @param _propNewTellorAddress address for new proposed Tellor"
									},
									"functionSelector": "26b7d9f6",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposeFork",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_propNewTellorAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "1245:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1244:31:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:0"
									},
									"scope": 492,
									"src": "1224:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1291:271:0",
										"text": " @dev Add tip to Request value from oracle\n @param _requestId being requested to be mined\n @param _tip amount the requester is willing to pay to be get on queue. Miners\n mine the onDeckQueryHash, or the api with the highest payout pool"
									},
									"functionSelector": "752d49a1",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "1583:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_tip",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "1603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1582:34:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1625:0:0"
									},
									"scope": 492,
									"src": "1567:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1632:244:0",
										"text": " @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n @param _nonce uint submitted by miner\n @param _requestId the apiId being mined\n @param _value of api query"
									},
									"functionSelector": "68c180d5",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitMiningSolution",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1920:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1952:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1980:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:90:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:0:0"
									},
									"scope": 492,
									"src": "1881:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "2016:266:0",
										"text": " @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n @param _nonce uint submitted by miner\n @param _requestId is the array of the 5 PSR's being mined\n @param _value is an array of 5 values"
									},
									"functionSelector": "4350283e",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitMiningSolution",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2326:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2358:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_calldata_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 53,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 55,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2366:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2358:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "2398:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_calldata_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 57,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 59,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2406:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2398:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2316:114:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2439:0:0"
									},
									"scope": 492,
									"src": "2287:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2446:269:0",
										"text": " @dev Allows the current owner to propose transfer control of the contract to a\n newOwner and the ownership is pending until the new owner calls the claimOwnership\n function\n @param _pendingOwner The address to transfer ownership to."
									},
									"functionSelector": "710bf322",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposeOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_pendingOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2746:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2745:31:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2785:0:0"
									},
									"scope": 492,
									"src": "2720:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2792:77:0",
										"text": " @dev Allows the new owner to claim control of the contract"
									},
									"functionSelector": "4e71e0c8",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2908:0:0"
									},
									"scope": 492,
									"src": "2874:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2915:75:0",
										"text": " @dev This function allows miners to deposit their stake."
									},
									"functionSelector": "0d2d76a2",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:0:0"
									},
									"scope": 492,
									"src": "2995:33:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3034:235:0",
										"text": " @dev This function allows stakers to request to withdraw their stake (no longer stake)\n once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\n can withdraw the stake"
									},
									"functionSelector": "28449c3a",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestStakingWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3316:0:0"
									},
									"scope": 492,
									"src": "3274:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3323:116:0",
										"text": " @dev This function allows users to withdraw their stake after a 7 day waiting period from request"
									},
									"functionSelector": "bed9d861",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3466:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3477:0:0"
									},
									"scope": 492,
									"src": "3444:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3484:233:0",
										"text": " @dev This function approves a _spender an _amount of tokens to use\n @param _spender address\n @param _amount amount the spender is being approved for\n @return true if spender appproved successfully"
									},
									"functionSelector": "095ea7b3",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "3739:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "3757:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3738:35:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "3792:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3791:6:0"
									},
									"scope": 492,
									"src": "3722:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3804:207:0",
										"text": " @dev Allows for a transfer of tokens to _to\n @param _to The address to send tokens to\n @param _amount The amount of tokens to send\n @return true if transfer is successful"
									},
									"functionSelector": "a9059cbb",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "4034:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "4047:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4033:30:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "4082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4081:6:0"
									},
									"scope": 492,
									"src": "4016:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4094:338:0",
										"text": " @dev Sends _amount tokens to _to from _from on the condition it\n is approved by _from\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful"
									},
									"functionSelector": "23b872dd",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "4468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "4491:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "4512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4458:75:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "4552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4551:6:0"
									},
									"scope": 492,
									"src": "4437:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "4564:63:0",
										"text": " @dev Allows users to access the token's name"
									},
									"functionSelector": "06fdde03",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4645:2:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "4671:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:15:0"
									},
									"scope": 492,
									"src": "4632:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4692:65:0",
										"text": " @dev Allows users to access the token's symbol"
									},
									"functionSelector": "95d89b41",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4777:2:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "4803:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4802:15:0"
									},
									"scope": 492,
									"src": "4762:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4824:69:0",
										"text": " @dev Allows users to access the number of decimals"
									},
									"functionSelector": "313ce567",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4915:2:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "4941:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 132,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4941:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4940:7:0"
									},
									"scope": 492,
									"src": "4898:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4954:193:0",
										"text": " @dev Getter for the current variables that include the 5 requests Id's\n @return _challenge _requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip"
									},
									"functionSelector": "4049f198",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewCurrentVariables",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5183:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_challenge",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "5246:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_requestIds",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "5278:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 140,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 142,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5286:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5278:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_difficutly",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "5321:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_tip",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "5354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5232:144:0"
									},
									"scope": 492,
									"src": "5152:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "5383:109:0",
										"text": " @dev Getter for the top tipped 5 requests Id's\n @return _requestIds the 5 requestsId"
									},
									"functionSelector": "fe1cd15d",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTopRequestIDs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5522:2:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_requestIds",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "5572:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 154,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5580:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5572:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5571:31:0"
									},
									"scope": 492,
									"src": "5497:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5609:134:0",
										"text": " @dev Getter for the 5 requests Id's next in line to get mined\n @return idsOnDeck tipsOnDeck  the 5 requestsId"
									},
									"functionSelector": "9a7077ab",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewVariablesOnDeck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5778:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsOnDeck",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "5828:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5836:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5828:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "tipsOnDeck",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "5857:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 166,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5865:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5857:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5827:59:0"
									},
									"scope": 492,
									"src": "5748:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5893:198:0",
										"text": " @dev Updates the Tellor address after a proposed fork has\n passed the vote and day has gone by without a dispute\n @param _disputeId the disputeId for the proposed fork"
									},
									"functionSelector": "f458ab98",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTellor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "6118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6117:20:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6146:0:0"
									},
									"scope": 492,
									"src": "6096:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "6153:109:0",
										"text": " @dev Allows disputer to unlock the dispute fee\n @param _disputeId to unlock fee from"
									},
									"functionSelector": "9a01ca13",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockDisputeFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "6293:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6292:20:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6321:0:0"
									},
									"scope": 492,
									"src": "6267:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "6328:166:0",
										"text": " @param _user address\n @param _spender address\n @return Returns the remaining allowance of tokens granted to the _spender from the _user"
									},
									"functionSelector": "dd62ed3e",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "6518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "6533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6517:33:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "6598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6597:9:0"
									},
									"scope": 492,
									"src": "6499:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "6613:245:0",
										"text": " @dev This function returns whether or not a given user is allowed to trade a given amount\n @param _user address\n @param _amount uint of amount\n @return true if the user is alloed to trade the amount specified"
									},
									"functionSelector": "999cf26c",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowedToTrade",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "6887:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "6902:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6886:32:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "6966:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6965:6:0"
									},
									"scope": 492,
									"src": "6863:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "6978:195:0",
										"text": " @dev Gets balance of owner specified\n @param _user is the owner address used to look up the balance\n @return Returns the balance associated with the passed in _user"
									},
									"functionSelector": "70a08231",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "7197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7196:15:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "7235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7234:9:0"
									},
									"scope": 492,
									"src": "7178:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "7250:267:0",
										"text": " @dev Queries the balance of _user at a specific _blockNumber\n @param _user The address from which the balance will be retrieved\n @param _blockNumber The block number when the balance is queried\n @return The balance at _blockNumber"
									},
									"functionSelector": "4ee2cd7e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "7543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "7558:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7542:37:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "7627:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7626:9:0"
									},
									"scope": 492,
									"src": "7522:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "7642:299:0",
										"text": " @dev This function tells you if a given challenge has been completed by a given miner\n @param _challenge the challenge to search for\n @param _miner address that you want to know if they solved the challenge\n @return true if the _miner address provided solved the"
									},
									"functionSelector": "63bb82ad",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "didMine",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_challenge",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "7963:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_miner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "7983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7962:36:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "8046:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8045:6:0"
									},
									"scope": 492,
									"src": "7946:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8058:189:0",
										"text": " @dev Checks if an address voted in a given dispute\n @param _disputeId to look up\n @param _address to look up\n @return bool of whether or not party voted"
									},
									"functionSelector": "a7c438bc",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "didVote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "8269:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "8289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8268:38:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "8354:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8353:6:0"
									},
									"scope": 492,
									"src": "8252:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "8366:364:0",
										"text": " @dev allows Tellor to read data from the addressVars mapping\n @param _data is the keccak256(\"variable_name\") of the variable that is being accessed.\n These are examples of how the variables are saved within other functions:\n addressVars[keccak256(\"_owner\")]\n addressVars[keccak256(\"tellorContract\")]\n return address"
									},
									"functionSelector": "133bee5e",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressVars",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "8759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8758:15:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "8797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8796:9:0"
									},
									"scope": 492,
									"src": "8735:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "8812:722:0",
										"text": " @dev Gets all dispute variables\n @param _disputeId to look up\n @return bytes32 hash of dispute\n @return bool executed where true if it has been voted on\n @return bool disputeVotePassed\n @return bool isPropFork true if the dispute is a proposed fork\n @return address of reportedMiner\n @return address of reportingParty\n @return address of proposedForkAddress\n    uint of requestId\n    uint of timestamp\n    uint of value\n    uint of minExecutionDate\n    uint of numberOfVotes\n    uint of blocknumber\n    uint of minerSlot\n    uint of quorum\n    uint of fee\n @return int count of the current tally"
									},
									"functionSelector": "af0b1327",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllDisputeVars",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9565:20:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9667:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9784:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 266,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 268,
													"length": {
														"argumentTypes": null,
														"hexValue": "39",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9792:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "9784:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "9815:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 270,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9632:199:0"
									},
									"scope": 492,
									"src": "9539:293:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "9838:275:0",
										"text": " @dev Getter function for variables for the requestId being currently mined(currentRequestId)\n @return current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
									},
									"functionSelector": "a22e407a",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVariables",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10146:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10272:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10299:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "10320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10195:142:0"
									},
									"scope": 492,
									"src": "10118:220:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "10344:189:0",
										"text": " @dev Checks if a given hash of miner,requestId has been disputed\n @param _hash is the sha256(abi.encodePacked(_miners[2],_requestId));\n @return uint disputeId"
									},
									"functionSelector": "da379941",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDisputeIdByDisputeHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_hash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "10573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10572:15:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "10635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10634:9:0"
									},
									"scope": 492,
									"src": "10538:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10650:485:0",
										"text": " @dev Checks for uint variables in the disputeUintVars mapping based on the disuputeId\n @param _disputeId is the dispute id;\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the disputeUintVars under the Dispute struct\n @return uint value for the bytes32 data submitted"
									},
									"functionSelector": "7f6fd5d9",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDisputeUintVars",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "_disputeId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 307,
												"src": "11168:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 307,
												"src": "11188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11167:35:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 307,
												"src": "11250:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11249:9:0"
									},
									"scope": 492,
									"src": "11140:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "11265:204:0",
										"text": " @dev Gets the a value for the latest timestamp available\n @return value for timestamp of last proof of work submited\n @return true if the is a timestamp for the lastNewValue"
									},
									"functionSelector": "fc7cf0a0",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLastNewValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11498:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 315,
												"src": "11524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 315,
												"src": "11533:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11523:15:0"
									},
									"scope": 492,
									"src": "11474:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "11545:235:0",
										"text": " @dev Gets the a value for the latest timestamp available\n @param _requestId being requested\n @return value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
									},
									"functionSelector": "3180f8df",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLastNewValueById",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "11814:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11813:20:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "11881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "11890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11880:15:0"
									},
									"scope": 492,
									"src": "11785:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "11902:228:0",
										"text": " @dev Gets blocknumber for mined timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up blocknumber\n @return uint of the blocknumber which the dispute was mined"
									},
									"functionSelector": "c775b542",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinedBlockNum",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "12161:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "12181:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12160:40:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 335,
												"src": "12248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12247:9:0"
									},
									"scope": 492,
									"src": "12135:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "12263:239:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up miners for\n @return the 5 miners' addresses"
									},
									"functionSelector": "69026d63",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinersByRequestIdAndTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "12558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "12586:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12548:62:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "12634:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$5_memory_ptr",
													"typeString": "address[5]"
												},
												"typeName": {
													"baseType": {
														"id": 342,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12634:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 344,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12642:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "12634:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$5_storage_ptr",
														"typeString": "address[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12633:19:0"
									},
									"scope": 492,
									"src": "12507:146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "12659:356:0",
										"text": " @dev Counts the number of values that have been submited for the request\n if called for the currentRequest being mined it can tell you how many miners have submitted a value for that\n request so far\n @param _requestId the requestId to look up\n @return uint count of the number of values received for the requestId"
									},
									"functionSelector": "46eee1c4",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewValueCountbyRequestId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 355,
												"src": "13057:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13056:20:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 355,
												"src": "13124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13123:9:0"
									},
									"scope": 492,
									"src": "13020:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "13139:160:0",
										"text": " @dev Getter function for the specified requestQ index\n @param _index to look up in the requestQ array\n @return uint of reqeuestId"
									},
									"functionSelector": "6173c0b8",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByRequestQIndex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "13341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13340:16:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "13404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13403:9:0"
									},
									"scope": 492,
									"src": "13304:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "13419:150:0",
										"text": " @dev Getter function for requestId based on timestamp\n @param _timestamp to check requestId\n @return uint of reqeuestId"
									},
									"functionSelector": "0f0b424d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "13607:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13606:20:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "13674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13673:9:0"
									},
									"scope": 492,
									"src": "13574:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "13689:209:0",
										"text": " @dev Getter function for requestId based on the queryHash\n @param _request is the hash(of string api and granularity) to check if a request already exists\n @return uint requestId"
									},
									"functionSelector": "1db842f0",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByQueryHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_request",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "13936:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13935:18:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "14001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14000:9:0"
									},
									"scope": 492,
									"src": "13903:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "14016:97:0",
										"text": " @dev Getter function for the requestQ array\n @return the requestQ arrray"
									},
									"functionSelector": "b5413029",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestQ",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14138:2:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "14164:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 384,
													"length": {
														"argumentTypes": null,
														"hexValue": "3531",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14172:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "14164:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14163:20:0"
									},
									"scope": 492,
									"src": "14118:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "14190:563:0",
										"text": " @dev Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct\n for the requestId specified\n @param _requestId to look up\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the apiUintVars under the requestDetails struct\n @return uint value of the apiUintVars specified in _data for the requestId specified"
									},
									"functionSelector": "e0ae93c1",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestUintVars",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "14786:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "14806:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 391,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14785:35:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "14868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14867:9:0"
									},
									"scope": 492,
									"src": "14758:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "14883:411:0",
										"text": " @dev Gets the API struct variables that are not mappings\n @param _requestId to look up\n @return string of api to query\n @return string of symbol of api to query\n @return bytes32 hash of string\n @return bytes32 of the granularity(decimal places) requested\n @return uint of index in requestQ array\n @return uint of current payout/tip for this requestId"
									},
									"functionSelector": "e1eee6d6",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestVars",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15323:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15322:20:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15403:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "15520:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15389:148:0"
									},
									"scope": 492,
									"src": "15299:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "15544:234:0",
										"text": " @dev This function allows users to retireve all information about a staker\n @param _staker address of staker inquiring about\n @return uint current state of staker\n @return uint startDate of staking"
									},
									"functionSelector": "733bdef0",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerInfo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_staker",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "15806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15805:17:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "15870:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 425,
												"src": "15879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15869:18:0"
									},
									"scope": 492,
									"src": "15783:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "15894:282:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestampt to look up miners for\n @return address[5] array of 5 addresses ofminers that mined the requestId"
									},
									"functionSelector": "11c98512",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubmissionsByTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "16216:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "16236:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16215:40:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "16303:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 434,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16311:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "16303:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16302:19:0"
									},
									"scope": 492,
									"src": "16181:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "16328:211:0",
										"text": " @dev Gets the timestamp for the value based on their index\n @param _requestID is the requestId to look up\n @param _index is the value index to look up\n @return uint timestamp"
									},
									"functionSelector": "77fbb663",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestampbyRequestIDandIndex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_requestID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "16585:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "16605:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16584:36:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "16668:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16667:9:0"
									},
									"scope": 492,
									"src": "16544:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "16683:564:0",
										"text": " @dev Getter for the variables saved under the TellorStorageStruct uintVars variable\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the uintVars under the TellorStorageStruct struct\n This is an example of how data is saved into the mapping within other functions:\n self.uintVars[keccak256(\"stakerCount\")]\n @return uint of specified variable"
									},
									"functionSelector": "612c8f7f",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUintVar",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "17272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17271:15:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "17310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17309:9:0"
									},
									"scope": 492,
									"src": "17252:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "17325:229:0",
										"text": " @dev Getter function for next requestId on queue/request with highest payout at time the function is called\n @return onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
									},
									"functionSelector": "19e8e03b",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVariablesOnDeck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17586:2:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "17649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "17670:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "17691:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17635:79:0"
									},
									"scope": 492,
									"src": "17559:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "17721:265:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up miners for\n @return bool true if requestId/timestamp is under dispute"
									},
									"functionSelector": "3df0777b",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInDispute",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "18012:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "18032:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18011:40:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "18099:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18098:6:0"
									},
									"scope": 492,
									"src": "17991:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "18111:208:0",
										"text": " @dev Retreive value from oracle based on timestamp\n @param _requestId being requested\n @param _timestamp to retreive data/value from\n @return value for timestamp submitted"
									},
									"functionSelector": "93fa4915",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "retrieveData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "18346:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "18366:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18345:40:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "18433:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18432:9:0"
									},
									"scope": 492,
									"src": "18324:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "18448:101:0",
										"text": " @dev Getter for the total_supply of oracle tokens\n @return uint total supply"
									},
									"functionSelector": "18160ddd",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18574:2:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "18600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18599:9:0"
									},
									"scope": 492,
									"src": "18554:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "57:18554:0"
						}
					],
					"src": "32:18579:0"
				},
				"id": 0
			}
		}
	}
}