{
	"id": "7e41a9741c22552873e8552f9f7e6ed8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dependencies/TellorCaller.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"../Interfaces/ITellorCaller.sol\";\nimport \"./ITellor.sol\";\nimport \"./SafeMath.sol\";\n/*\n* This contract has a single external function that calls Tellor: getTellorCurrentValue(). \n*\n* The function is called by the Liquity contract PriceFeed.sol. If any of its inner calls to Tellor revert, \n* this function will revert, and PriceFeed will catch the failure and handle it accordingly.\n*\n* The function comes from Tellor's own wrapper contract, 'UsingTellor.sol':\n* https://github.com/tellor-io/usingtellor/blob/master/contracts/UsingTellor.sol\n*\n*/\ncontract TellorCaller is ITellorCaller {\n    using SafeMath for uint256;\n\n    ITellor public tellor;\n\n    constructor (address _tellorMasterAddress) public {\n        tellor = ITellor(_tellorMasterAddress);\n    }\n\n    /*\n    * getTellorCurrentValue(): identical to getCurrentValue() in UsingTellor.sol\n    *\n    * @dev Allows the user to get the latest value for the requestId specified\n    * @param _requestId is the requestId to look up the value for\n    * @return ifRetrieve bool true if it is able to retrieve a value, the value, and the value's timestamp\n    * @return value the value retrieved\n    * @return _timestampRetrieved the value's timestamp\n    */\n    function getTellorCurrentValue(uint256 _requestId)\n        external\n        view\n        override\n        returns (\n            bool ifRetrieve,\n            uint256 value,\n            uint256 _timestampRetrieved\n        )\n    {\n        uint256 _count = tellor.getNewValueCountbyRequestId(_requestId);\n        uint256 _time =\n            tellor.getTimestampbyRequestIDandIndex(_requestId, _count.sub(1));\n        uint256 _value = tellor.retrieveData(_requestId, _time);\n        if (_value > 0) return (true, _value, _time);\n        return (false, 0, _time);\n    }\n}\n"
			},
			"contracts/Dependencies/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n/**\n * Based on OpenZeppelin's SafeMath:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n *\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/Dependencies/ITellor.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\ninterface ITellor {\n    /**\n     * @dev Helps initialize a dispute by assigning it a disputeId\n     * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\n     * invalidated value information to POS voting\n     * @param _requestId being disputed\n     * @param _timestamp being disputed\n     * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\n     * requires 5 miners to submit a value.\n     */\n    function beginDispute(\n        uint256 _requestId,\n        uint256 _timestamp,\n        uint256 _minerIndex\n    ) external;\n\n    /**\n     * @dev Allows token holders to vote\n     * @param _disputeId is the dispute id\n     * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\n     */\n    function vote(uint256 _disputeId, bool _supportsDispute) external;\n\n    /**\n     * @dev tallies the votes.\n     * @param _disputeId is the dispute id\n     */\n    function tallyVotes(uint256 _disputeId) external;\n\n    /**\n     * @dev Allows for a fork to be proposed\n     * @param _propNewTellorAddress address for new proposed Tellor\n     */\n    function proposeFork(address _propNewTellorAddress) external;\n\n    /**\n     * @dev Add tip to Request value from oracle\n     * @param _requestId being requested to be mined\n     * @param _tip amount the requester is willing to pay to be get on queue. Miners\n     * mine the onDeckQueryHash, or the api with the highest payout pool\n     */\n    function addTip(uint256 _requestId, uint256 _tip) external;\n\n    /**\n     * @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n     * @param _nonce uint submitted by miner\n     * @param _requestId the apiId being mined\n     * @param _value of api query\n     *\n     */\n    function submitMiningSolution(\n        string calldata _nonce,\n        uint256 _requestId,\n        uint256 _value\n    ) external;\n\n    /**\n     * @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n     * @param _nonce uint submitted by miner\n     * @param _requestId is the array of the 5 PSR's being mined\n     * @param _value is an array of 5 values\n     */\n    function submitMiningSolution(\n        string calldata _nonce,\n        uint256[5] calldata _requestId,\n        uint256[5] calldata _value\n    ) external;\n\n    /**\n     * @dev Allows the current owner to propose transfer control of the contract to a\n     * newOwner and the ownership is pending until the new owner calls the claimOwnership\n     * function\n     * @param _pendingOwner The address to transfer ownership to.\n     */\n    function proposeOwnership(address payable _pendingOwner) external;\n\n    /**\n     * @dev Allows the new owner to claim control of the contract\n     */\n    function claimOwnership() external;\n\n    /**\n     * @dev This function allows miners to deposit their stake.\n     */\n    function depositStake() external;\n\n    /**\n     * @dev This function allows stakers to request to withdraw their stake (no longer stake)\n     * once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\n     * can withdraw the stake\n     */\n    function requestStakingWithdraw() external;\n\n    /**\n     * @dev This function allows users to withdraw their stake after a 7 day waiting period from request\n     */\n    function withdrawStake() external;\n\n    /**\n     * @dev This function approves a _spender an _amount of tokens to use\n     * @param _spender address\n     * @param _amount amount the spender is being approved for\n     * @return true if spender appproved successfully\n     */\n    function approve(address _spender, uint256 _amount) external returns (bool);\n\n    /**\n     * @dev Allows for a transfer of tokens to _to\n     * @param _to The address to send tokens to\n     * @param _amount The amount of tokens to send\n     * @return true if transfer is successful\n     */\n    function transfer(address _to, uint256 _amount) external returns (bool);\n\n    /**\n     * @dev Sends _amount tokens to _to from _from on the condition it\n     * is approved by _from\n     * @param _from The address holding the tokens being transferred\n     * @param _to The address of the recipient\n     * @param _amount The amount of tokens to be transferred\n     * @return True if the transfer was successful\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external returns (bool);\n\n    /**\n     * @dev Allows users to access the token's name\n     */\n    function name() external pure returns (string memory);\n\n    /**\n     * @dev Allows users to access the token's symbol\n     */\n    function symbol() external pure returns (string memory);\n\n    /**\n     * @dev Allows users to access the number of decimals\n     */\n    function decimals() external pure returns (uint8);\n\n    /**\n     * @dev Getter for the current variables that include the 5 requests Id's\n     * @return _challenge _requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip\n     */\n    function getNewCurrentVariables()\n        external\n        view\n        returns (\n            bytes32 _challenge,\n            uint256[5] memory _requestIds,\n            uint256 _difficutly,\n            uint256 _tip\n        );\n\n    /**\n     * @dev Getter for the top tipped 5 requests Id's\n     * @return _requestIds the 5 requestsId\n     */\n    function getTopRequestIDs()\n        external\n        view\n        returns (uint256[5] memory _requestIds);\n\n    /**\n     * @dev Getter for the 5 requests Id's next in line to get mined\n     * @return idsOnDeck tipsOnDeck  the 5 requestsId\n     */\n    function getNewVariablesOnDeck()\n        external\n        view\n        returns (uint256[5] memory idsOnDeck, uint256[5] memory tipsOnDeck);\n\n    /**\n     * @dev Updates the Tellor address after a proposed fork has\n     * passed the vote and day has gone by without a dispute\n     * @param _disputeId the disputeId for the proposed fork\n     */\n    function updateTellor(uint256 _disputeId) external;\n\n    /**\n     * @dev Allows disputer to unlock the dispute fee\n     * @param _disputeId to unlock fee from\n     */\n    function unlockDisputeFee(uint256 _disputeId) external;\n\n    /**\n     * @param _user address\n     * @param _spender address\n     * @return Returns the remaining allowance of tokens granted to the _spender from the _user\n     */\n    function allowance(address _user, address _spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev This function returns whether or not a given user is allowed to trade a given amount\n     * @param _user address\n     * @param _amount uint of amount\n     * @return true if the user is alloed to trade the amount specified\n     */\n    function allowedToTrade(address _user, uint256 _amount)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Gets balance of owner specified\n     * @param _user is the owner address used to look up the balance\n     * @return Returns the balance associated with the passed in _user\n     */\n    function balanceOf(address _user) external view returns (uint256);\n\n    /**\n     * @dev Queries the balance of _user at a specific _blockNumber\n     * @param _user The address from which the balance will be retrieved\n     * @param _blockNumber The block number when the balance is queried\n     * @return The balance at _blockNumber\n     */\n    function balanceOfAt(address _user, uint256 _blockNumber)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev This function tells you if a given challenge has been completed by a given miner\n     * @param _challenge the challenge to search for\n     * @param _miner address that you want to know if they solved the challenge\n     * @return true if the _miner address provided solved the\n     */\n    function didMine(bytes32 _challenge, address _miner)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Checks if an address voted in a given dispute\n     * @param _disputeId to look up\n     * @param _address to look up\n     * @return bool of whether or not party voted\n     */\n    function didVote(uint256 _disputeId, address _address)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev allows Tellor to read data from the addressVars mapping\n     * @param _data is the keccak256(\"variable_name\") of the variable that is being accessed.\n     * These are examples of how the variables are saved within other functions:\n     * addressVars[keccak256(\"_owner\")]\n     * addressVars[keccak256(\"tellorContract\")]\n     * return address\n     */\n    function getAddressVars(bytes32 _data) external view returns (address);\n\n    /**\n     * @dev Gets all dispute variables\n     * @param _disputeId to look up\n     * @return bytes32 hash of dispute\n     * @return bool executed where true if it has been voted on\n     * @return bool disputeVotePassed\n     * @return bool isPropFork true if the dispute is a proposed fork\n     * @return address of reportedMiner\n     * @return address of reportingParty\n     * @return address of proposedForkAddress\n     *    uint of requestId\n     *    uint of timestamp\n     *    uint of value\n     *    uint of minExecutionDate\n     *    uint of numberOfVotes\n     *    uint of blocknumber\n     *    uint of minerSlot\n     *    uint of quorum\n     *    uint of fee\n     * @return int count of the current tally\n     */\n    function getAllDisputeVars(uint256 _disputeId)\n        external\n        view\n        returns (\n            bytes32,\n            bool,\n            bool,\n            bool,\n            address,\n            address,\n            address,\n            uint256[9] memory,\n            int256\n        );\n\n    /**\n     * @dev Getter function for variables for the requestId being currently mined(currentRequestId)\n     * @return current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\n     */\n    function getCurrentVariables()\n        external\n        view\n        returns (\n            bytes32,\n            uint256,\n            uint256,\n            string memory,\n            uint256,\n            uint256\n        );\n\n    /**\n     * @dev Checks if a given hash of miner,requestId has been disputed\n     * @param _hash is the sha256(abi.encodePacked(_miners[2],_requestId));\n     * @return uint disputeId\n     */\n    function getDisputeIdByDisputeHash(bytes32 _hash)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Checks for uint variables in the disputeUintVars mapping based on the disuputeId\n     * @param _disputeId is the dispute id;\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the disputeUintVars under the Dispute struct\n     * @return uint value for the bytes32 data submitted\n     */\n    function getDisputeUintVars(uint256 _disputeId, bytes32 _data)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the a value for the latest timestamp available\n     * @return value for timestamp of last proof of work submited\n     * @return true if the is a timestamp for the lastNewValue\n     */\n    function getLastNewValue() external view returns (uint256, bool);\n\n    /**\n     * @dev Gets the a value for the latest timestamp available\n     * @param _requestId being requested\n     * @return value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\n     */\n    function getLastNewValueById(uint256 _requestId)\n        external\n        view\n        returns (uint256, bool);\n\n    /**\n     * @dev Gets blocknumber for mined timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up blocknumber\n     * @return uint of the blocknumber which the dispute was mined\n     */\n    function getMinedBlockNum(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up miners for\n     * @return the 5 miners' addresses\n     */\n    function getMinersByRequestIdAndTimestamp(\n        uint256 _requestId,\n        uint256 _timestamp\n    ) external view returns (address[5] memory);\n\n    /**\n     * @dev Counts the number of values that have been submited for the request\n     * if called for the currentRequest being mined it can tell you how many miners have submitted a value for that\n     * request so far\n     * @param _requestId the requestId to look up\n     * @return uint count of the number of values received for the requestId\n     */\n    function getNewValueCountbyRequestId(uint256 _requestId)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for the specified requestQ index\n     * @param _index to look up in the requestQ array\n     * @return uint of reqeuestId\n     */\n    function getRequestIdByRequestQIndex(uint256 _index)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for requestId based on timestamp\n     * @param _timestamp to check requestId\n     * @return uint of reqeuestId\n     */\n    function getRequestIdByTimestamp(uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for requestId based on the queryHash\n     * @param _request is the hash(of string api and granularity) to check if a request already exists\n     * @return uint requestId\n     */\n    function getRequestIdByQueryHash(bytes32 _request)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter function for the requestQ array\n     * @return the requestQ arrray\n     */\n    function getRequestQ() external view returns (uint256[51] memory);\n\n    /**\n     * @dev Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct\n     * for the requestId specified\n     * @param _requestId to look up\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the apiUintVars under the requestDetails struct\n     * @return uint value of the apiUintVars specified in _data for the requestId specified\n     */\n    function getRequestUintVars(uint256 _requestId, bytes32 _data)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Gets the API struct variables that are not mappings\n     * @param _requestId to look up\n     * @return string of api to query\n     * @return string of symbol of api to query\n     * @return bytes32 hash of string\n     * @return bytes32 of the granularity(decimal places) requested\n     * @return uint of index in requestQ array\n     * @return uint of current payout/tip for this requestId\n     */\n    function getRequestVars(uint256 _requestId)\n        external\n        view\n        returns (\n            string memory,\n            string memory,\n            bytes32,\n            uint256,\n            uint256,\n            uint256\n        );\n\n    /**\n     * @dev This function allows users to retireve all information about a staker\n     * @param _staker address of staker inquiring about\n     * @return uint current state of staker\n     * @return uint startDate of staking\n     */\n    function getStakerInfo(address _staker)\n        external\n        view\n        returns (uint256, uint256);\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestampt to look up miners for\n     * @return address[5] array of 5 addresses ofminers that mined the requestId\n     */\n    function getSubmissionsByTimestamp(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256[5] memory);\n\n    /**\n     * @dev Gets the timestamp for the value based on their index\n     * @param _requestID is the requestId to look up\n     * @param _index is the value index to look up\n     * @return uint timestamp\n     */\n    function getTimestampbyRequestIDandIndex(uint256 _requestID, uint256 _index)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter for the variables saved under the TellorStorageStruct uintVars variable\n     * @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n     * the variables/strings used to save the data in the mapping. The variables names are\n     * commented out under the uintVars under the TellorStorageStruct struct\n     * This is an example of how data is saved into the mapping within other functions:\n     * self.uintVars[keccak256(\"stakerCount\")]\n     * @return uint of specified variable\n     */\n    function getUintVar(bytes32 _data) external view returns (uint256);\n\n    /**\n     * @dev Getter function for next requestId on queue/request with highest payout at time the function is called\n     * @return onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\n     */\n    function getVariablesOnDeck()\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            string memory\n        );\n\n    /**\n     * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n     * @param _requestId to look up\n     * @param _timestamp is the timestamp to look up miners for\n     * @return bool true if requestId/timestamp is under dispute\n     */\n    function isInDispute(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Retreive value from oracle based on timestamp\n     * @param _requestId being requested\n     * @param _timestamp to retreive data/value from\n     * @return value for timestamp submitted\n     */\n    function retrieveData(uint256 _requestId, uint256 _timestamp)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Getter for the total_supply of oracle tokens\n     * @return uint total supply\n     */\n    function totalSupply() external view returns (uint256);\n}"
			},
			"contracts/Interfaces/ITellorCaller.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\ninterface ITellorCaller {\n    function getTellorCurrentValue(uint256 _requestId) external view returns (bool, uint256, uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/Dependencies/ITellor.sol": {
				"ITellor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tip",
									"type": "uint256"
								}
							],
							"name": "addTip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "allowedToTrade",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minerIndex",
									"type": "uint256"
								}
							],
							"name": "beginDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_challenge",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_miner",
									"type": "address"
								}
							],
							"name": "didMine",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "didVote",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getAddressVars",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "getAllDisputeVars",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "",
									"type": "uint256[9]"
								},
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentVariables",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "getDisputeIdByDisputeHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getDisputeUintVars",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLastNewValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getLastNewValueById",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getMinedBlockNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getMinersByRequestIdAndTimestamp",
							"outputs": [
								{
									"internalType": "address[5]",
									"name": "",
									"type": "address[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNewCurrentVariables",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_challenge",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[5]",
									"name": "_requestIds",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256",
									"name": "_difficutly",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tip",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getNewValueCountbyRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNewVariablesOnDeck",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "idsOnDeck",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256[5]",
									"name": "tipsOnDeck",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_request",
									"type": "bytes32"
								}
							],
							"name": "getRequestIdByQueryHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getRequestIdByRequestQIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getRequestIdByTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestQ",
							"outputs": [
								{
									"internalType": "uint256[51]",
									"name": "",
									"type": "uint256[51]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getRequestUintVars",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getRequestVars",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "getStakerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getSubmissionsByTimestamp",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getTimestampbyRequestIDandIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTopRequestIDs",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "_requestIds",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_data",
									"type": "bytes32"
								}
							],
							"name": "getUintVar",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVariablesOnDeck",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "isInDispute",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_propNewTellorAddress",
									"type": "address"
								}
							],
							"name": "proposeFork",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_pendingOwner",
									"type": "address"
								}
							],
							"name": "proposeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestStakingWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "retrieveData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nonce",
									"type": "string"
								},
								{
									"internalType": "uint256[5]",
									"name": "_requestId",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256[5]",
									"name": "_value",
									"type": "uint256[5]"
								}
							],
							"name": "submitMiningSolution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nonce",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "submitMiningSolution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "tallyVotes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "unlockDisputeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								}
							],
							"name": "updateTellor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_disputeId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_supportsDispute",
									"type": "bool"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTip(uint256,uint256)": {
								"details": "Add tip to Request value from oracle",
								"params": {
									"_requestId": "being requested to be mined",
									"_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
								}
							},
							"allowance(address,address)": {
								"params": {
									"_spender": "address",
									"_user": "address"
								},
								"returns": {
									"_0": "Returns the remaining allowance of tokens granted to the _spender from the _user"
								}
							},
							"allowedToTrade(address,uint256)": {
								"details": "This function returns whether or not a given user is allowed to trade a given amount",
								"params": {
									"_amount": "uint of amount",
									"_user": "address"
								},
								"returns": {
									"_0": "true if the user is alloed to trade the amount specified"
								}
							},
							"approve(address,uint256)": {
								"details": "This function approves a _spender an _amount of tokens to use",
								"params": {
									"_amount": "amount the spender is being approved for",
									"_spender": "address"
								},
								"returns": {
									"_0": "true if spender appproved successfully"
								}
							},
							"balanceOf(address)": {
								"details": "Gets balance of owner specified",
								"params": {
									"_user": "is the owner address used to look up the balance"
								},
								"returns": {
									"_0": "Returns the balance associated with the passed in _user"
								}
							},
							"balanceOfAt(address,uint256)": {
								"details": "Queries the balance of _user at a specific _blockNumber",
								"params": {
									"_blockNumber": "The block number when the balance is queried",
									"_user": "The address from which the balance will be retrieved"
								},
								"returns": {
									"_0": "The balance at _blockNumber"
								}
							},
							"beginDispute(uint256,uint256,uint256)": {
								"details": "Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting",
								"params": {
									"_minerIndex": "the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.",
									"_requestId": "being disputed",
									"_timestamp": "being disputed"
								}
							},
							"claimOwnership()": {
								"details": "Allows the new owner to claim control of the contract"
							},
							"decimals()": {
								"details": "Allows users to access the number of decimals"
							},
							"depositStake()": {
								"details": "This function allows miners to deposit their stake."
							},
							"didMine(bytes32,address)": {
								"details": "This function tells you if a given challenge has been completed by a given miner",
								"params": {
									"_challenge": "the challenge to search for",
									"_miner": "address that you want to know if they solved the challenge"
								},
								"returns": {
									"_0": "true if the _miner address provided solved the"
								}
							},
							"didVote(uint256,address)": {
								"details": "Checks if an address voted in a given dispute",
								"params": {
									"_address": "to look up",
									"_disputeId": "to look up"
								},
								"returns": {
									"_0": "bool of whether or not party voted"
								}
							},
							"getAddressVars(bytes32)": {
								"details": "allows Tellor to read data from the addressVars mapping",
								"params": {
									"_data": "is the keccak256(\"variable_name\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\"_owner\")] addressVars[keccak256(\"tellorContract\")] return address"
								}
							},
							"getAllDisputeVars(uint256)": {
								"details": "Gets all dispute variables",
								"params": {
									"_disputeId": "to look up"
								},
								"returns": {
									"_0": "bytes32 hash of dispute",
									"_1": "bool executed where true if it has been voted on",
									"_2": "bool disputeVotePassed",
									"_3": "bool isPropFork true if the dispute is a proposed fork",
									"_4": "address of reportedMiner",
									"_5": "address of reportingParty",
									"_6": "address of proposedForkAddress    uint of requestId    uint of timestamp    uint of value    uint of minExecutionDate    uint of numberOfVotes    uint of blocknumber    uint of minerSlot    uint of quorum    uint of fee",
									"_7": "int count of the current tally"
								}
							},
							"getCurrentVariables()": {
								"details": "Getter function for variables for the requestId being currently mined(currentRequestId)",
								"returns": {
									"_0": "current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
								}
							},
							"getDisputeIdByDisputeHash(bytes32)": {
								"details": "Checks if a given hash of miner,requestId has been disputed",
								"params": {
									"_hash": "is the sha256(abi.encodePacked(_miners[2],_requestId));"
								},
								"returns": {
									"_0": "uint disputeId"
								}
							},
							"getDisputeUintVars(uint256,bytes32)": {
								"details": "Checks for uint variables in the disputeUintVars mapping based on the disuputeId",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct",
									"_disputeId": "is the dispute id;"
								},
								"returns": {
									"_0": "uint value for the bytes32 data submitted"
								}
							},
							"getLastNewValue()": {
								"details": "Gets the a value for the latest timestamp available",
								"returns": {
									"_0": "value for timestamp of last proof of work submited",
									"_1": "true if the is a timestamp for the lastNewValue"
								}
							},
							"getLastNewValueById(uint256)": {
								"details": "Gets the a value for the latest timestamp available",
								"params": {
									"_requestId": "being requested"
								},
								"returns": {
									"_0": "value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
								}
							},
							"getMinedBlockNum(uint256,uint256)": {
								"details": "Gets blocknumber for mined timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up blocknumber"
								},
								"returns": {
									"_0": "uint of the blocknumber which the dispute was mined"
								}
							},
							"getMinersByRequestIdAndTimestamp(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up miners for"
								},
								"returns": {
									"_0": "the 5 miners' addresses"
								}
							},
							"getNewCurrentVariables()": {
								"details": "Getter for the current variables that include the 5 requests Id's",
								"returns": {
									"_challenge": "_requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip"
								}
							},
							"getNewValueCountbyRequestId(uint256)": {
								"details": "Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far",
								"params": {
									"_requestId": "the requestId to look up"
								},
								"returns": {
									"_0": "uint count of the number of values received for the requestId"
								}
							},
							"getNewVariablesOnDeck()": {
								"details": "Getter for the 5 requests Id's next in line to get mined",
								"returns": {
									"idsOnDeck": "tipsOnDeck  the 5 requestsId"
								}
							},
							"getRequestIdByQueryHash(bytes32)": {
								"details": "Getter function for requestId based on the queryHash",
								"params": {
									"_request": "is the hash(of string api and granularity) to check if a request already exists"
								},
								"returns": {
									"_0": "uint requestId"
								}
							},
							"getRequestIdByRequestQIndex(uint256)": {
								"details": "Getter function for the specified requestQ index",
								"params": {
									"_index": "to look up in the requestQ array"
								},
								"returns": {
									"_0": "uint of reqeuestId"
								}
							},
							"getRequestIdByTimestamp(uint256)": {
								"details": "Getter function for requestId based on timestamp",
								"params": {
									"_timestamp": "to check requestId"
								},
								"returns": {
									"_0": "uint of reqeuestId"
								}
							},
							"getRequestQ()": {
								"details": "Getter function for the requestQ array",
								"returns": {
									"_0": "the requestQ arrray"
								}
							},
							"getRequestUintVars(uint256,bytes32)": {
								"details": "Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct",
									"_requestId": "to look up"
								},
								"returns": {
									"_0": "uint value of the apiUintVars specified in _data for the requestId specified"
								}
							},
							"getRequestVars(uint256)": {
								"details": "Gets the API struct variables that are not mappings",
								"params": {
									"_requestId": "to look up"
								},
								"returns": {
									"_0": "string of api to query",
									"_1": "string of symbol of api to query",
									"_2": "bytes32 hash of string",
									"_3": "bytes32 of the granularity(decimal places) requested",
									"_4": "uint of index in requestQ array",
									"_5": "uint of current payout/tip for this requestId"
								}
							},
							"getStakerInfo(address)": {
								"details": "This function allows users to retireve all information about a staker",
								"params": {
									"_staker": "address of staker inquiring about"
								},
								"returns": {
									"_0": "uint current state of staker",
									"_1": "uint startDate of staking"
								}
							},
							"getSubmissionsByTimestamp(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestampt to look up miners for"
								},
								"returns": {
									"_0": "address[5] array of 5 addresses ofminers that mined the requestId"
								}
							},
							"getTimestampbyRequestIDandIndex(uint256,uint256)": {
								"details": "Gets the timestamp for the value based on their index",
								"params": {
									"_index": "is the value index to look up",
									"_requestID": "is the requestId to look up"
								},
								"returns": {
									"_0": "uint timestamp"
								}
							},
							"getTopRequestIDs()": {
								"details": "Getter for the top tipped 5 requests Id's",
								"returns": {
									"_requestIds": "the 5 requestsId"
								}
							},
							"getUintVar(bytes32)": {
								"details": "Getter for the variables saved under the TellorStorageStruct uintVars variable",
								"params": {
									"_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\"stakerCount\")]"
								},
								"returns": {
									"_0": "uint of specified variable"
								}
							},
							"getVariablesOnDeck()": {
								"details": "Getter function for next requestId on queue/request with highest payout at time the function is called",
								"returns": {
									"_0": "onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
								}
							},
							"isInDispute(uint256,uint256)": {
								"details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
								"params": {
									"_requestId": "to look up",
									"_timestamp": "is the timestamp to look up miners for"
								},
								"returns": {
									"_0": "bool true if requestId/timestamp is under dispute"
								}
							},
							"name()": {
								"details": "Allows users to access the token's name"
							},
							"proposeFork(address)": {
								"details": "Allows for a fork to be proposed",
								"params": {
									"_propNewTellorAddress": "address for new proposed Tellor"
								}
							},
							"proposeOwnership(address)": {
								"details": "Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function",
								"params": {
									"_pendingOwner": "The address to transfer ownership to."
								}
							},
							"requestStakingWithdraw()": {
								"details": "This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake"
							},
							"retrieveData(uint256,uint256)": {
								"details": "Retreive value from oracle based on timestamp",
								"params": {
									"_requestId": "being requested",
									"_timestamp": "to retreive data/value from"
								},
								"returns": {
									"_0": "value for timestamp submitted"
								}
							},
							"submitMiningSolution(string,uint256,uint256)": {
								"details": "This is called by the miner when they submit the PoW solution (proof of work and value)",
								"params": {
									"_nonce": "uint submitted by miner",
									"_requestId": "the apiId being mined",
									"_value": "of api query"
								}
							},
							"submitMiningSolution(string,uint256[5],uint256[5])": {
								"details": "This is called by the miner when they submit the PoW solution (proof of work and value)",
								"params": {
									"_nonce": "uint submitted by miner",
									"_requestId": "is the array of the 5 PSR's being mined",
									"_value": "is an array of 5 values"
								}
							},
							"symbol()": {
								"details": "Allows users to access the token's symbol"
							},
							"tallyVotes(uint256)": {
								"details": "tallies the votes.",
								"params": {
									"_disputeId": "is the dispute id"
								}
							},
							"totalSupply()": {
								"details": "Getter for the total_supply of oracle tokens",
								"returns": {
									"_0": "uint total supply"
								}
							},
							"transfer(address,uint256)": {
								"details": "Allows for a transfer of tokens to _to",
								"params": {
									"_amount": "The amount of tokens to send",
									"_to": "The address to send tokens to"
								},
								"returns": {
									"_0": "true if transfer is successful"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Sends _amount tokens to _to from _from on the condition it is approved by _from",
								"params": {
									"_amount": "The amount of tokens to be transferred",
									"_from": "The address holding the tokens being transferred",
									"_to": "The address of the recipient"
								},
								"returns": {
									"_0": "True if the transfer was successful"
								}
							},
							"unlockDisputeFee(uint256)": {
								"details": "Allows disputer to unlock the dispute fee",
								"params": {
									"_disputeId": "to unlock fee from"
								}
							},
							"updateTellor(uint256)": {
								"details": "Updates the Tellor address after a proposed fork has passed the vote and day has gone by without a dispute",
								"params": {
									"_disputeId": "the disputeId for the proposed fork"
								}
							},
							"vote(uint256,bool)": {
								"details": "Allows token holders to vote",
								"params": {
									"_disputeId": "is the dispute id",
									"_supportsDispute": "is the vote (true=the dispute has basis false = vote against dispute)"
								}
							},
							"withdrawStake()": {
								"details": "This function allows users to withdraw their stake after a 7 day waiting period from request"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTip(uint256,uint256)": "752d49a1",
							"allowance(address,address)": "dd62ed3e",
							"allowedToTrade(address,uint256)": "999cf26c",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"beginDispute(uint256,uint256,uint256)": "8581af19",
							"claimOwnership()": "4e71e0c8",
							"decimals()": "313ce567",
							"depositStake()": "0d2d76a2",
							"didMine(bytes32,address)": "63bb82ad",
							"didVote(uint256,address)": "a7c438bc",
							"getAddressVars(bytes32)": "133bee5e",
							"getAllDisputeVars(uint256)": "af0b1327",
							"getCurrentVariables()": "a22e407a",
							"getDisputeIdByDisputeHash(bytes32)": "da379941",
							"getDisputeUintVars(uint256,bytes32)": "7f6fd5d9",
							"getLastNewValue()": "fc7cf0a0",
							"getLastNewValueById(uint256)": "3180f8df",
							"getMinedBlockNum(uint256,uint256)": "c775b542",
							"getMinersByRequestIdAndTimestamp(uint256,uint256)": "69026d63",
							"getNewCurrentVariables()": "4049f198",
							"getNewValueCountbyRequestId(uint256)": "46eee1c4",
							"getNewVariablesOnDeck()": "9a7077ab",
							"getRequestIdByQueryHash(bytes32)": "1db842f0",
							"getRequestIdByRequestQIndex(uint256)": "6173c0b8",
							"getRequestIdByTimestamp(uint256)": "0f0b424d",
							"getRequestQ()": "b5413029",
							"getRequestUintVars(uint256,bytes32)": "e0ae93c1",
							"getRequestVars(uint256)": "e1eee6d6",
							"getStakerInfo(address)": "733bdef0",
							"getSubmissionsByTimestamp(uint256,uint256)": "11c98512",
							"getTimestampbyRequestIDandIndex(uint256,uint256)": "77fbb663",
							"getTopRequestIDs()": "fe1cd15d",
							"getUintVar(bytes32)": "612c8f7f",
							"getVariablesOnDeck()": "19e8e03b",
							"isInDispute(uint256,uint256)": "3df0777b",
							"name()": "06fdde03",
							"proposeFork(address)": "26b7d9f6",
							"proposeOwnership(address)": "710bf322",
							"requestStakingWithdraw()": "28449c3a",
							"retrieveData(uint256,uint256)": "93fa4915",
							"submitMiningSolution(string,uint256,uint256)": "68c180d5",
							"submitMiningSolution(string,uint256[5],uint256[5])": "4350283e",
							"symbol()": "95d89b41",
							"tallyVotes(uint256)": "4d318b0e",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockDisputeFee(uint256)": "9a01ca13",
							"updateTellor(uint256)": "f458ab98",
							"vote(uint256,bool)": "c9d27afe",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minerIndex\",\"type\":\"uint256\"}],\"name\":\"beginDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"\",\"type\":\"uint256[9]\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getDisputeUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getLastNewValueById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"internalType\":\"address[5]\",\"name\":\"\",\"type\":\"address[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[5]\",\"name\":\"_requestIds\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256\",\"name\":\"_difficutly\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"idsOnDeck\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[5]\",\"name\":\"tipsOnDeck\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"\",\"type\":\"uint256[51]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getRequestUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopRequestIDs\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_requestIds\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_propNewTellorAddress\",\"type\":\"address\"}],\"name\":\"proposeFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nonce\",\"type\":\"string\"},{\"internalType\":\"uint256[5]\",\"name\":\"_requestId\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[5]\",\"name\":\"_value\",\"type\":\"uint256[5]\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nonce\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"tallyVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"unlockDisputeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"updateTellor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_supportsDispute\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Add tip to Request value from oracle\",\"params\":{\"_requestId\":\"being requested to be mined\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"returns\":{\"_0\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"}},\"allowedToTrade(address,uint256)\":{\"details\":\"This function returns whether or not a given user is allowed to trade a given amount\",\"params\":{\"_amount\":\"uint of amount\",\"_user\":\"address\"},\"returns\":{\"_0\":\"true if the user is alloed to trade the amount specified\"}},\"approve(address,uint256)\":{\"details\":\"This function approves a _spender an _amount of tokens to use\",\"params\":{\"_amount\":\"amount the spender is being approved for\",\"_spender\":\"address\"},\"returns\":{\"_0\":\"true if spender appproved successfully\"}},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"returns\":{\"_0\":\"Returns the balance associated with the passed in _user\"}},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"returns\":{\"_0\":\"The balance at _blockNumber\"}},\"beginDispute(uint256,uint256,uint256)\":{\"details\":\"Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting\",\"params\":{\"_minerIndex\":\"the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.\",\"_requestId\":\"being disputed\",\"_timestamp\":\"being disputed\"}},\"claimOwnership()\":{\"details\":\"Allows the new owner to claim control of the contract\"},\"decimals()\":{\"details\":\"Allows users to access the number of decimals\"},\"depositStake()\":{\"details\":\"This function allows miners to deposit their stake.\"},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"returns\":{\"_0\":\"true if the _miner address provided solved the\"}},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a given dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"returns\":{\"_0\":\"bool of whether or not party voted\"}},\"getAddressVars(bytes32)\":{\"details\":\"allows Tellor to read data from the addressVars mapping\",\"params\":{\"_data\":\"is the keccak256(\\\"variable_name\\\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\\\"_owner\\\")] addressVars[keccak256(\\\"tellorContract\\\")] return address\"}},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"returns\":{\"_0\":\"bytes32 hash of dispute\",\"_1\":\"bool executed where true if it has been voted on\",\"_2\":\"bool disputeVotePassed\",\"_3\":\"bool isPropFork true if the dispute is a proposed fork\",\"_4\":\"address of reportedMiner\",\"_5\":\"address of reportingParty\",\"_6\":\"address of proposedForkAddress    uint of requestId    uint of timestamp    uint of value    uint of minExecutionDate    uint of numberOfVotes    uint of blocknumber    uint of minerSlot    uint of quorum    uint of fee\",\"_7\":\"int count of the current tally\"}},\"getCurrentVariables()\":{\"details\":\"Getter function for variables for the requestId being currently mined(currentRequestId)\",\"returns\":{\"_0\":\"current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\"}},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,requestId has been disputed\",\"params\":{\"_hash\":\"is the sha256(abi.encodePacked(_miners[2],_requestId));\"},\"returns\":{\"_0\":\"uint disputeId\"}},\"getDisputeUintVars(uint256,bytes32)\":{\"details\":\"Checks for uint variables in the disputeUintVars mapping based on the disuputeId\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct\",\"_disputeId\":\"is the dispute id;\"},\"returns\":{\"_0\":\"uint value for the bytes32 data submitted\"}},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"returns\":{\"_0\":\"value for timestamp of last proof of work submited\",\"_1\":\"true if the is a timestamp for the lastNewValue\"}},\"getLastNewValueById(uint256)\":{\"details\":\"Gets the a value for the latest timestamp available\",\"params\":{\"_requestId\":\"being requested\"},\"returns\":{\"_0\":\"value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\"}},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"returns\":{\"_0\":\"uint of the blocknumber which the dispute was mined\"}},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"returns\":{\"_0\":\"the 5 miners' addresses\"}},\"getNewCurrentVariables()\":{\"details\":\"Getter for the current variables that include the 5 requests Id's\",\"returns\":{\"_challenge\":\"_requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip\"}},\"getNewValueCountbyRequestId(uint256)\":{\"details\":\"Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far\",\"params\":{\"_requestId\":\"the requestId to look up\"},\"returns\":{\"_0\":\"uint count of the number of values received for the requestId\"}},\"getNewVariablesOnDeck()\":{\"details\":\"Getter for the 5 requests Id's next in line to get mined\",\"returns\":{\"idsOnDeck\":\"tipsOnDeck  the 5 requestsId\"}},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for requestId based on the queryHash\",\"params\":{\"_request\":\"is the hash(of string api and granularity) to check if a request already exists\"},\"returns\":{\"_0\":\"uint requestId\"}},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the specified requestQ index\",\"params\":{\"_index\":\"to look up in the requestQ array\"},\"returns\":{\"_0\":\"uint of reqeuestId\"}},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for requestId based on timestamp\",\"params\":{\"_timestamp\":\"to check requestId\"},\"returns\":{\"_0\":\"uint of reqeuestId\"}},\"getRequestQ()\":{\"details\":\"Getter function for the requestQ array\",\"returns\":{\"_0\":\"the requestQ arrray\"}},\"getRequestUintVars(uint256,bytes32)\":{\"details\":\"Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct\",\"_requestId\":\"to look up\"},\"returns\":{\"_0\":\"uint value of the apiUintVars specified in _data for the requestId specified\"}},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"returns\":{\"_0\":\"string of api to query\",\"_1\":\"string of symbol of api to query\",\"_2\":\"bytes32 hash of string\",\"_3\":\"bytes32 of the granularity(decimal places) requested\",\"_4\":\"uint of index in requestQ array\",\"_5\":\"uint of current payout/tip for this requestId\"}},\"getStakerInfo(address)\":{\"details\":\"This function allows users to retireve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"returns\":{\"_0\":\"uint current state of staker\",\"_1\":\"uint startDate of staking\"}},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"},\"returns\":{\"_0\":\"address[5] array of 5 addresses ofminers that mined the requestId\"}},\"getTimestampbyRequestIDandIndex(uint256,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_requestID\":\"is the requestId to look up\"},\"returns\":{\"_0\":\"uint timestamp\"}},\"getTopRequestIDs()\":{\"details\":\"Getter for the top tipped 5 requests Id's\",\"returns\":{\"_requestIds\":\"the 5 requestsId\"}},\"getUintVar(bytes32)\":{\"details\":\"Getter for the variables saved under the TellorStorageStruct uintVars variable\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\\\"stakerCount\\\")]\"},\"returns\":{\"_0\":\"uint of specified variable\"}},\"getVariablesOnDeck()\":{\"details\":\"Getter function for next requestId on queue/request with highest payout at time the function is called\",\"returns\":{\"_0\":\"onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\"}},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"returns\":{\"_0\":\"bool true if requestId/timestamp is under dispute\"}},\"name()\":{\"details\":\"Allows users to access the token's name\"},\"proposeFork(address)\":{\"details\":\"Allows for a fork to be proposed\",\"params\":{\"_propNewTellorAddress\":\"address for new proposed Tellor\"}},\"proposeOwnership(address)\":{\"details\":\"Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function\",\"params\":{\"_pendingOwner\":\"The address to transfer ownership to.\"}},\"requestStakingWithdraw()\":{\"details\":\"This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake\"},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"returns\":{\"_0\":\"value for timestamp submitted\"}},\"submitMiningSolution(string,uint256,uint256)\":{\"details\":\"This is called by the miner when they submit the PoW solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"the apiId being mined\",\"_value\":\"of api query\"}},\"submitMiningSolution(string,uint256[5],uint256[5])\":{\"details\":\"This is called by the miner when they submit the PoW solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"is the array of the 5 PSR's being mined\",\"_value\":\"is an array of 5 values\"}},\"symbol()\":{\"details\":\"Allows users to access the token's symbol\"},\"tallyVotes(uint256)\":{\"details\":\"tallies the votes.\",\"params\":{\"_disputeId\":\"is the dispute id\"}},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"returns\":{\"_0\":\"uint total supply\"}},\"transfer(address,uint256)\":{\"details\":\"Allows for a transfer of tokens to _to\",\"params\":{\"_amount\":\"The amount of tokens to send\",\"_to\":\"The address to send tokens to\"},\"returns\":{\"_0\":\"true if transfer is successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Sends _amount tokens to _to from _from on the condition it is approved by _from\",\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"returns\":{\"_0\":\"True if the transfer was successful\"}},\"unlockDisputeFee(uint256)\":{\"details\":\"Allows disputer to unlock the dispute fee\",\"params\":{\"_disputeId\":\"to unlock fee from\"}},\"updateTellor(uint256)\":{\"details\":\"Updates the Tellor address after a proposed fork has passed the vote and day has gone by without a dispute\",\"params\":{\"_disputeId\":\"the disputeId for the proposed fork\"}},\"vote(uint256,bool)\":{\"details\":\"Allows token holders to vote\",\"params\":{\"_disputeId\":\"is the dispute id\",\"_supportsDispute\":\"is the vote (true=the dispute has basis false = vote against dispute)\"}},\"withdrawStake()\":{\"details\":\"This function allows users to withdraw their stake after a 7 day waiting period from request\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/ITellor.sol\":\"ITellor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/ITellor.sol\":{\"keccak256\":\"0xb751ff08247b68ddd766616fe318a4a5c1c911fe7af0a0b5b0379c54d86f0f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f7c4dfa9f0c3886f3ddfbac19e47f8f0657d2b6e3313dbd300efca6f3b4531\",\"dweb:/ipfs/QmdTB68FzTgKjxi24rnTsNzck9wV63m6BVaPpB7J9ja8UM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dependencies/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/SafeMath.sol\":760:5468  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;760:4708:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH26 0x49CE224F10AD5E8D2A19927ED05FBCEDC1C9A499883C12FCE57D PUSH6 0x53A3EE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "760:4708:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 5468,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb7949ce224f10ad5e8d2a19927ed05fbcedc1c9a499883c12fce57d6553a3ee64736f6c63430008140033",
									".code": [
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 5468,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Dependencies/ITellor.sol",
								"contracts/Dependencies/SafeMath.sol",
								"contracts/Dependencies/TellorCaller.sol",
								"contracts/Interfaces/ITellorCaller.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on OpenZeppelin's SafeMath: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol",
						"version": 1
					}
				}
			},
			"contracts/Dependencies/TellorCaller.sol": {
				"TellorCaller": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tellorMasterAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getTellorCurrentValue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "ifRetrieve",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestampRetrieved",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tellor",
							"outputs": [
								{
									"internalType": "contract ITellor",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dependencies/TellorCaller.sol\":612:1842  contract TellorCaller is ITellorCaller {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dependencies/TellorCaller.sol\":718:823  constructor (address _tellorMasterAddress) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Dependencies/TellorCaller.sol\":778:784  tellor */\n  0x00\n    /* \"contracts/Dependencies/TellorCaller.sol\":778:816  tellor = ITellor(_tellorMasterAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Dependencies/TellorCaller.sol\":612:1842  contract TellorCaller is ITellorCaller {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Dependencies/TellorCaller.sol\":612:1842  contract TellorCaller is ITellorCaller {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dependencies/TellorCaller.sol\":612:1842  contract TellorCaller is ITellorCaller {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1959ad5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32e6aadb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dependencies/TellorCaller.sol\":690:711  ITellor public tellor */\n    tag_3:\n      sload(0x00)\n      tag_5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_5:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":193:225   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":175:226   */\n      dup2\n      mstore\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":148:166   */\n      add\n        /* \"contracts/Dependencies/TellorCaller.sol\":690:711  ITellor public tellor */\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dependencies/TellorCaller.sol\":1278:1840  function getTellorCurrentValue(uint256 _requestId)... */\n    tag_4:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":643:657   */\n      swap4\n      iszero\n        /* \"#utility.yul\":636:658   */\n      iszero\n        /* \"#utility.yul\":618:659   */\n      dup5\n      mstore\n        /* \"#utility.yul\":690:692   */\n      0x20\n        /* \"#utility.yul\":675:693   */\n      dup5\n      add\n        /* \"#utility.yul\":668:702   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":718:736   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":711:745   */\n      mstore\n        /* \"#utility.yul\":606:608   */\n      0x60\n        /* \"#utility.yul\":591:609   */\n      add\n        /* \"contracts/Dependencies/TellorCaller.sol\":1278:1840  function getTellorCurrentValue(uint256 _requestId)... */\n      tag_7\n        /* \"#utility.yul\":422:751   */\n      jump\n        /* \"contracts/Dependencies/TellorCaller.sol\":1278:1840  function getTellorCurrentValue(uint256 _requestId)... */\n    tag_12:\n        /* \"contracts/Dependencies/TellorCaller.sol\":1406:1421  bool ifRetrieve */\n      0x00\n        /* \"contracts/Dependencies/TellorCaller.sol\":1531:1537  tellor */\n      dup1\n      sload\n        /* \"contracts/Dependencies/TellorCaller.sol\":1531:1577  tellor.getNewValueCountbyRequestId(_requestId) */\n      mload(0x40)\n      shl(0xe2, 0x11bbb871)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":902:927   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Dependencies/TellorCaller.sol\":1406:1421  bool ifRetrieve */\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dependencies/TellorCaller.sol\":1531:1537  tellor */\n      and\n      swap1\n        /* \"contracts/Dependencies/TellorCaller.sol\":1531:1565  tellor.getNewValueCountbyRequestId */\n      0x46eee1c4\n      swap1\n        /* \"#utility.yul\":875:893   */\n      0x24\n      add\n        /* \"contracts/Dependencies/TellorCaller.sol\":1531:1577  tellor.getNewValueCountbyRequestId(_requestId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/Dependencies/TellorCaller.sol\":1587:1600  uint256 _time */\n      0x00\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1621  tellor */\n      dup1\n      sload\n        /* \"contracts/Dependencies/TellorCaller.sol\":1514:1577  uint256 _count = tellor.getNewValueCountbyRequestId(_requestId) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1587:1600  uint256 _time */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1621  tellor */\n      and\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1653  tellor.getTimestampbyRequestIDandIndex */\n      0x77fbb663\n        /* \"contracts/Dependencies/TellorCaller.sol\":1654:1664  _requestId */\n      dup8\n        /* \"contracts/Dependencies/TellorCaller.sol\":1666:1679  _count.sub(1) */\n      tag_22\n        /* \"contracts/Dependencies/TellorCaller.sol\":1514:1577  uint256 _count = tellor.getNewValueCountbyRequestId(_requestId) */\n      dup6\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1621  tellor */\n      0x01\n        /* \"contracts/Dependencies/TellorCaller.sol\":1666:1676  _count.sub */\n      tag_23\n        /* \"contracts/Dependencies/TellorCaller.sol\":1666:1679  _count.sub(1) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1680  tellor.getTimestampbyRequestIDandIndex(_requestId, _count.sub(1)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1301:1326   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1342:1360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1274:1292   */\n      0x44\n      add\n        /* \"contracts/Dependencies/TellorCaller.sol\":1615:1680  tellor.getTimestampbyRequestIDandIndex(_requestId, _count.sub(1)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_28:\n        /* \"contracts/Dependencies/TellorCaller.sol\":1690:1704  uint256 _value */\n      0x00\n        /* \"contracts/Dependencies/TellorCaller.sol\":1707:1713  tellor */\n      dup1\n      sload\n        /* \"contracts/Dependencies/TellorCaller.sol\":1707:1745  tellor.retrieveData(_requestId, _time) */\n      mload(0x40)\n      shl(0xe0, 0x93fa4915)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1301:1326   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":1342:1360   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1335:1369   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Dependencies/TellorCaller.sol\":1587:1680  uint256 _time =... */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1690:1704  uint256 _value */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dependencies/TellorCaller.sol\":1707:1713  tellor */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Dependencies/TellorCaller.sol\":1707:1726  tellor.retrieveData */\n      0x93fa4915\n      swap1\n        /* \"#utility.yul\":1274:1292   */\n      0x44\n      add\n        /* \"contracts/Dependencies/TellorCaller.sol\":1707:1745  tellor.retrieveData(_requestId, _time) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_32:\n        /* \"contracts/Dependencies/TellorCaller.sol\":1690:1745  uint256 _value = tellor.retrieveData(_requestId, _time) */\n      swap1\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1759:1769  _value > 0 */\n      dup1\n      iszero\n        /* \"contracts/Dependencies/TellorCaller.sol\":1755:1799  if (_value > 0) return (true, _value, _time) */\n      tag_33\n      jumpi\n        /* \"contracts/Dependencies/TellorCaller.sol\":1779:1783  true */\n      0x01\n      swap6\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1785:1791  _value */\n      swap4\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1793:1798  _time */\n      swap2\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1771:1799  return (true, _value, _time) */\n      tag_15\n      swap1\n      pop\n      jump\n        /* \"contracts/Dependencies/TellorCaller.sol\":1755:1799  if (_value > 0) return (true, _value, _time) */\n    tag_33:\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1817:1822  false */\n      0x00\n      swap5\n      pop\n      dup5\n      swap4\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1827:1832  _time */\n      swap2\n      pop\n      pop\n        /* \"contracts/Dependencies/TellorCaller.sol\":1278:1840  function getTellorCurrentValue(uint256 _requestId)... */\n    tag_15:\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Dependencies/SafeMath.sol\":1445:1579  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Dependencies/SafeMath.sol\":1503:1510  uint256 */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_35\n        /* \"contracts/Dependencies/SafeMath.sol\":1533:1534  a */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1536:1537  b */\n      dup4\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1532  sub */\n      tag_36\n        /* \"contracts/Dependencies/SafeMath.sol\":1529:1572  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_35:\n        /* \"contracts/Dependencies/SafeMath.sol\":1522:1572  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":1445:1579  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_34:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dependencies/SafeMath.sol\":1903:2090  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"contracts/Dependencies/SafeMath.sol\":1989:1996  uint256 */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":2024:2036  errorMessage */\n      dup2\n        /* \"contracts/Dependencies/SafeMath.sol\":2016:2022  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/Dependencies/SafeMath.sol\":2008:2037  require(b <= a, errorMessage) */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n      pop\n        /* \"contracts/Dependencies/SafeMath.sol\":2047:2056  uint256 c */\n      0x00\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2064  a - b */\n      tag_41\n        /* \"contracts/Dependencies/SafeMath.sol\":2063:2064  b */\n      dup5\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2060  a */\n      dup7\n        /* \"contracts/Dependencies/SafeMath.sol\":2059:2064  a - b */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/Dependencies/SafeMath.sol\":2047:2064  uint256 c = a - b */\n      swap6\n        /* \"contracts/Dependencies/SafeMath.sol\":1903:2090  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":237:417   */\n    tag_11:\n        /* \"#utility.yul\":296:302   */\n      0x00\n        /* \"#utility.yul\":349:351   */\n      0x20\n        /* \"#utility.yul\":337:346   */\n      dup3\n        /* \"#utility.yul\":328:335   */\n      dup5\n        /* \"#utility.yul\":324:347   */\n      sub\n        /* \"#utility.yul\":320:352   */\n      slt\n        /* \"#utility.yul\":317:369   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":365:366   */\n      0x00\n        /* \"#utility.yul\":362:363   */\n      dup1\n        /* \"#utility.yul\":355:367   */\n      revert\n        /* \"#utility.yul\":317:369   */\n    tag_46:\n      pop\n        /* \"#utility.yul\":388:411   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":237:417   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":938:1122   */\n    tag_21:\n        /* \"#utility.yul\":1008:1014   */\n      0x00\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1049:1058   */\n      dup3\n        /* \"#utility.yul\":1040:1047   */\n      dup5\n        /* \"#utility.yul\":1036:1059   */\n      sub\n        /* \"#utility.yul\":1032:1064   */\n      slt\n        /* \"#utility.yul\":1029:1081   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1074:1075   */\n      dup1\n        /* \"#utility.yul\":1067:1079   */\n      revert\n        /* \"#utility.yul\":1029:1081   */\n    tag_50:\n      pop\n        /* \"#utility.yul\":1100:1116   */\n      mload\n      swap2\n        /* \"#utility.yul\":938:1122   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1380:1928   */\n    tag_40:\n        /* \"#utility.yul\":1492:1496   */\n      0x00\n        /* \"#utility.yul\":1521:1523   */\n      0x20\n        /* \"#utility.yul\":1550:1552   */\n      dup1\n        /* \"#utility.yul\":1539:1548   */\n      dup4\n        /* \"#utility.yul\":1532:1553   */\n      mstore\n        /* \"#utility.yul\":1582:1588   */\n      dup4\n        /* \"#utility.yul\":1576:1589   */\n      mload\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1620:1622   */\n      dup3\n        /* \"#utility.yul\":1609:1618   */\n      dup6\n        /* \"#utility.yul\":1605:1623   */\n      add\n        /* \"#utility.yul\":1598:1632   */\n      mstore\n        /* \"#utility.yul\":1650:1651   */\n      0x00\n        /* \"#utility.yul\":1660:1800   */\n    tag_53:\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1671:1672   */\n      dup2\n        /* \"#utility.yul\":1668:1681   */\n      lt\n        /* \"#utility.yul\":1660:1800   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1769:1783   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1765:1788   */\n      dup4\n      add\n        /* \"#utility.yul\":1759:1789   */\n      mload\n        /* \"#utility.yul\":1735:1752   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1754:1756   */\n      0x40\n        /* \"#utility.yul\":1731:1757   */\n      add\n        /* \"#utility.yul\":1724:1790   */\n      mstore\n        /* \"#utility.yul\":1689:1699   */\n      dup3\n      add\n        /* \"#utility.yul\":1660:1800   */\n      jump(tag_53)\n    tag_55:\n        /* \"#utility.yul\":1664:1667   */\n      pop\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1844:1846   */\n      0x40\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1824:1833   */\n      dup7\n        /* \"#utility.yul\":1820:1842   */\n      add\n        /* \"#utility.yul\":1816:1847   */\n      add\n        /* \"#utility.yul\":1809:1851   */\n      mstore\n        /* \"#utility.yul\":1919:1921   */\n      0x40\n        /* \"#utility.yul\":1912:1914   */\n      0x1f\n        /* \"#utility.yul\":1908:1915   */\n      not\n        /* \"#utility.yul\":1903:1905   */\n      0x1f\n        /* \"#utility.yul\":1895:1901   */\n      dup4\n        /* \"#utility.yul\":1891:1906   */\n      add\n        /* \"#utility.yul\":1887:1916   */\n      and\n        /* \"#utility.yul\":1876:1885   */\n      dup6\n        /* \"#utility.yul\":1872:1917   */\n      add\n        /* \"#utility.yul\":1868:1922   */\n      add\n        /* \"#utility.yul\":1860:1922   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1380:1928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1933:2158   */\n    tag_42:\n        /* \"#utility.yul\":2000:2009   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2021:2032   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2018:2152   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":2074:2084   */\n      0x4e487b71\n        /* \"#utility.yul\":2069:2072   */\n      0xe0\n        /* \"#utility.yul\":2065:2085   */\n      shl\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2055:2086   */\n      mstore\n        /* \"#utility.yul\":2109:2113   */\n      0x11\n        /* \"#utility.yul\":2106:2107   */\n      0x04\n        /* \"#utility.yul\":2099:2114   */\n      mstore\n        /* \"#utility.yul\":2137:2141   */\n      0x24\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2127:2142   */\n      revert\n\n    auxdata: 0xa2646970667358221220adee3367d16c85c128c6d609cea3d5d7a556d50dcbb1802633412e1505fb6f9164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_713": {
									"entryPoint": null,
									"id": 713,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161043038038061043083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61039d806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631959ad5b1461003b57806332e6aadb1461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100793660046102c6565b61009b565b604080519315158452602084019290925290820152606001610062565b600080546040516311bbb87160e21b8152600481018490528291829182916001600160a01b0316906346eee1c490602401602060405180830381865afa1580156100e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010d91906102df565b60008054919250906001600160a01b03166377fbb6638761012f856001610238565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610170573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019491906102df565b600080546040516393fa491560e01b8152600481018a90526024810184905292935090916001600160a01b03909116906393fa491590604401602060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e91906102df565b905080156102255760019550935091506102319050565b50600094508493509150505b9193909250565b600061027a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610283565b90505b92915050565b600081848411156102b05760405162461bcd60e51b81526004016102a791906102f8565b60405180910390fd5b5060006102bd8486610346565b95945050505050565b6000602082840312156102d857600080fd5b5035919050565b6000602082840312156102f157600080fd5b5051919050565b600060208083528351808285015260005b8181101561032557858101830151858201604001528201610309565b506000604082860101526040601f19601f8301168501019250505092915050565b8181038181111561027d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220adee3367d16c85c128c6d609cea3d5d7a556d50dcbb1802633412e1505fb6f9164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x430 CODESIZE SUB DUP1 PUSH2 0x430 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x39D DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1959AD5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x32E6AADB EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x62 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11BBB871 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x46EEE1C4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77FBB663 DUP8 PUSH2 0x12F DUP6 PUSH1 0x1 PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93FA4915 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x93FA4915 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x231 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 POP DUP5 SWAP4 POP SWAP2 POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x283 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x2BD DUP5 DUP7 PUSH2 0x346 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x309 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEE CALLER PUSH8 0xD16C85C128C6D609 0xCE LOG3 0xD5 0xD7 0xA5 JUMP 0xD5 0xD 0xCB 0xB1 DUP1 0x26 CALLER COINBASE 0x2E ISZERO SDIV 0xFB PUSH16 0x9164736F6C6343000814003300000000 ",
							"sourceMap": "612:1230:2:-:0;;;718:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;778:6;:38;;-1:-1:-1;;;;;;778:38:2;-1:-1:-1;;;;;778:38:2;;;;;;;;;;612:1230;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;:::-;612:1230:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getTellorCurrentValue_766": {
									"entryPoint": 155,
									"id": 766,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@sub_538": {
									"entryPoint": 568,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_566": {
									"entryPoint": 643,
									"id": 566,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@tellor_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITellor_$492__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2160:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "130:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "140:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "163:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "148:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "148:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "140:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "197:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "213:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "218:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "209:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "209:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "222:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "205:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "205:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "193:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "193:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "175:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "175:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITellor_$492__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "99:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "110:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "121:4:4",
														"type": ""
													}
												],
												"src": "14:218:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "307:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "353:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "362:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "365:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "349:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "320:32:4"
															},
															"nodeType": "YulIf",
															"src": "317:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "378:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "388:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "378:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "273:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "284:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"src": "237:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "573:178:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "583:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "595:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "606:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "583:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "625:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "650:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "643:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "643:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "636:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "636:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "618:41:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "679:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "690:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "675:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "695:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "668:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "668:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "722:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "733:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "718:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "738:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "711:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "526:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "537:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "545:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "553:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "564:4:4",
														"type": ""
													}
												],
												"src": "422:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "857:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "867:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "890:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "867:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "920:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "902:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "902:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "826:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "837:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "848:4:4",
														"type": ""
													}
												],
												"src": "756:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1065:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1040:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1049:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:32:4"
															},
															"nodeType": "YulIf",
															"src": "1029:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1090:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1100:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "985:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "996:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1008:6:4",
														"type": ""
													}
												],
												"src": "938:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1256:119:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1266:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1278:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1266:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1308:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1319:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1301:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1301:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1301:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1357:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1342:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1362:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1217:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1228:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1236:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1247:4:4",
														"type": ""
													}
												],
												"src": "1127:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:427:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1511:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1521:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1515:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1539:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1550:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1532:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1562:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1582:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1566:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1620:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1625:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1641:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1650:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1645:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1710:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1739:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1750:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1735:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1735:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1754:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1731:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1731:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1773:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1781:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1769:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1769:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1785:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1765:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1765:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1759:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1724:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1724:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1671:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1668:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1682:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1684:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1693:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1696:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1689:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1689:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1684:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1664:3:4",
																"statements": []
															},
															"src": "1660:140:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1824:9:4"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1835:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1820:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1820:22:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:31:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:42:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1809:42:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1860:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1876:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1895:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1903:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1891:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1891:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1912:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1908:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1908:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1887:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1887:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1872:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1919:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1868:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1860:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1470:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1481:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1492:4:4",
														"type": ""
													}
												],
												"src": "1380:548:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1982:176:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1992:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2007:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1992:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2041:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2069:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2074:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2065:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2065:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2055:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2109:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2099:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2099:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2137:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2127:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2024:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2030:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2021:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:11:4"
															},
															"nodeType": "YulIf",
															"src": "2018:134:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1964:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1967:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1973:4:4",
														"type": ""
													}
												],
												"src": "1933:225:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ITellor_$492__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631959ad5b1461003b57806332e6aadb1461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100793660046102c6565b61009b565b604080519315158452602084019290925290820152606001610062565b600080546040516311bbb87160e21b8152600481018490528291829182916001600160a01b0316906346eee1c490602401602060405180830381865afa1580156100e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010d91906102df565b60008054919250906001600160a01b03166377fbb6638761012f856001610238565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610170573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019491906102df565b600080546040516393fa491560e01b8152600481018a90526024810184905292935090916001600160a01b03909116906393fa491590604401602060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e91906102df565b905080156102255760019550935091506102319050565b50600094508493509150505b9193909250565b600061027a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610283565b90505b92915050565b600081848411156102b05760405162461bcd60e51b81526004016102a791906102f8565b60405180910390fd5b5060006102bd8486610346565b95945050505050565b6000602082840312156102d857600080fd5b5035919050565b6000602082840312156102f157600080fd5b5051919050565b600060208083528351808285015260005b8181101561032557858101830151858201604001528201610309565b506000604082860101526040601f19601f8301168501019250505092915050565b8181038181111561027d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220adee3367d16c85c128c6d609cea3d5d7a556d50dcbb1802633412e1505fb6f9164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1959AD5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x32E6AADB EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x62 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11BBB871 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x46EEE1C4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77FBB663 DUP8 PUSH2 0x12F DUP6 PUSH1 0x1 PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93FA4915 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x93FA4915 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x231 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 POP DUP5 SWAP4 POP SWAP2 POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x283 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x2BD DUP5 DUP7 PUSH2 0x346 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x309 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEE CALLER PUSH8 0xD16C85C128C6D609 0xCE LOG3 0xD5 0xD7 0xA5 JUMP 0xD5 0xD 0xCB 0xB1 DUP1 0x26 CALLER COINBASE 0x2E ISZERO SDIV 0xFB PUSH16 0x9164736F6C6343000814003300000000 ",
							"sourceMap": "612:1230:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:21;;;;;-1:-1:-1;;;;;690:21:2;;;;;;-1:-1:-1;;;;;193:32:4;;;175:51;;163:2;148:18;690:21:2;;;;;;;;1278:562;;;;;;:::i;:::-;;:::i;:::-;;;;643:14:4;;636:22;618:41;;690:2;675:18;;668:34;;;;718:18;;;711:34;606:2;591:18;1278:562:2;422:329:4;1278:562:2;1406:15;1531:6;;:46;;-1:-1:-1;;;1531:46:2;;;;;902:25:4;;;1406:15:2;;;;;;-1:-1:-1;;;;;1531:6:2;;:34;;875:18:4;;1531:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1587:13;1615:6;;1514:63;;-1:-1:-1;1587:13:2;-1:-1:-1;;;;;1615:6:2;:38;1654:10;1666:13;1514:63;1615:6;1666:10;:13::i;:::-;1615:65;;-1:-1:-1;;;;;;1615:65:2;;;;;;;;;;1301:25:4;;;;1342:18;;;1335:34;1274:18;;1615:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1690:14;1707:6;;:38;;-1:-1:-1;;;1707:38:2;;;;;1301:25:4;;;1342:18;;;1335:34;;;1587:93:2;;-1:-1:-1;1690:14:2;;-1:-1:-1;;;;;1707:6:2;;;;:19;;1274:18:4;;1707:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1690:55;-1:-1:-1;1759:10:2;;1755:44;;1779:4;;-1:-1:-1;1785:6:2;-1:-1:-1;1793:5:2;-1:-1:-1;1771:28:2;;-1:-1:-1;1771:28:2;1755:44;-1:-1:-1;1817:5:2;;-1:-1:-1;1817:5:2;;-1:-1:-1;1827:5:2;-1:-1:-1;;1278:562:2;;;;;;:::o;1445:134:1:-;1503:7;1529:43;1533:1;1536;1529:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1522:50;;1445:134;;;;;:::o;1903:187::-;1989:7;2024:12;2016:6;;;;2008:29;;;;-1:-1:-1;;;2008:29:1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2047:9:1;2059:5;2063:1;2059;:5;:::i;:::-;2047:17;1903:187;-1:-1:-1;;;;;1903:187:1:o;237:180:4:-;296:6;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;-1:-1:-1;388:23:4;;237:180;-1:-1:-1;237:180:4:o;938:184::-;1008:6;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;-1:-1:-1;1100:16:4;;938:184;-1:-1:-1;938:184:4:o;1380:548::-;1492:4;1521:2;1550;1539:9;1532:21;1582:6;1576:13;1625:6;1620:2;1609:9;1605:18;1598:34;1650:1;1660:140;1674:6;1671:1;1668:13;1660:140;;;1769:14;;;1765:23;;1759:30;1735:17;;;1754:2;1731:26;1724:66;1689:10;;1660:140;;;1664:3;1849:1;1844:2;1835:6;1824:9;1820:22;1816:31;1809:42;1919:2;1912;1908:7;1903:2;1895:6;1891:15;1887:29;1876:9;1872:45;1868:54;1860:62;;;;1380:548;;;;:::o;1933:225::-;2000:9;;;2021:11;;;2018:134;;;2074:10;2069:3;2065:20;2062:1;2055:31;2109:4;2106:1;2099:15;2137:4;2134:1;2127:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "185000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getTellorCurrentValue(uint256)": "infinite",
								"tellor()": "2304"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 718,
									"end": 823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 718,
									"end": 823,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 718,
									"end": 823,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 778,
									"end": 784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 816,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 778,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 1842,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adee3367d16c85c128c6d609cea3d5d7a556d50dcbb1802633412e1505fb6f9164736f6c63430008140033",
									".code": [
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1959AD5B"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "32E6AADB"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 1842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 690,
											"end": 711,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 193,
											"end": 225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 193,
											"end": 225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 193,
											"end": 225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 175,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 175,
											"end": 226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 148,
											"end": 166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 690,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 711,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1278,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1278,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 643,
											"end": 657,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 643,
											"end": 657,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 636,
											"end": 658,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 618,
											"end": 659,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 618,
											"end": 659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 693,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 675,
											"end": 693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 668,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 668,
											"end": 702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 718,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 718,
											"end": 736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 711,
											"end": 745,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 606,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 591,
											"end": 609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 751,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11BBB871"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 927,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 902,
											"end": 927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "46EEE1C4"
										},
										{
											"begin": 1531,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 875,
											"end": 893,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 875,
											"end": 893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1531,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "77FBB663"
										},
										{
											"begin": 1654,
											"end": 1664,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1514,
											"end": 1577,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1666,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1615,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1615,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93FA4915"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1680,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1680,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "93FA4915"
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1707,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1707,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1755,
											"end": 1799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1771,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1799,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1755,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1529,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2008,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2059,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2090,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 237,
											"end": 417,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 346,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 328,
											"end": 335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 324,
											"end": 347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 320,
											"end": 352,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 317,
											"end": 369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 355,
											"end": 367,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 317,
											"end": 369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 411,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 237,
											"end": 417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 237,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 938,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1081,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1029,
											"end": 1081,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1079,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1081,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1029,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 1122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 938,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1548,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1788,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1660,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1833,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1851,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1908,
											"end": 1915,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1903,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1916,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1933,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2018,
											"end": 2152,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2069,
											"end": 2072,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2065,
											"end": 2085,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2142,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/Dependencies/ITellor.sol",
								"contracts/Dependencies/SafeMath.sol",
								"contracts/Dependencies/TellorCaller.sol",
								"contracts/Interfaces/ITellorCaller.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getTellorCurrentValue(uint256)": "32e6aadb",
							"tellor()": "1959ad5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellorMasterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getTellorCurrentValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tellor\",\"outputs\":[{\"internalType\":\"contract ITellor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dependencies/TellorCaller.sol\":\"TellorCaller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dependencies/ITellor.sol\":{\"keccak256\":\"0xb751ff08247b68ddd766616fe318a4a5c1c911fe7af0a0b5b0379c54d86f0f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f7c4dfa9f0c3886f3ddfbac19e47f8f0657d2b6e3313dbd300efca6f3b4531\",\"dweb:/ipfs/QmdTB68FzTgKjxi24rnTsNzck9wV63m6BVaPpB7J9ja8UM\"]},\"contracts/Dependencies/SafeMath.sol\":{\"keccak256\":\"0xae124fee628d4223ca87e4f6b7b628747ab7a8e7c58b632b2185d8fdb7205009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea436b09e124223a64f3cf904e44bd04fd09e111198eb1dd906f5b4ac18f9397\",\"dweb:/ipfs/QmTXXWi49h5vecKqsBN6bKzXnpzUKaLqgGSwdfEctaTCoV\"]},\"contracts/Dependencies/TellorCaller.sol\":{\"keccak256\":\"0xea50bd0db4416a4e8bde004248d8a53e708c1db73215a05b5e358ac2489ba873\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f89ca101b5387ff96d69c4dceaecdd56d4fbe372c60dc35b70cab5e411726d93\",\"dweb:/ipfs/QmdF4hKaVpgQ9ktg4QQmboi37jrqcnN4i84UMLzPLN6umt\"]},\"contracts/Interfaces/ITellorCaller.sol\":{\"keccak256\":\"0x5d10a0164c12e374239b57275ebe35df0b100cc7ec9cad4e760b7d37519ec25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://093752adf334cc51a9b15d28231d32e936fd997a9323c25ecac70ffa4c72dd97\",\"dweb:/ipfs/Qmew1hcfrVCG3veYNnEv1BgigmrZ6ik4hRyvMhzGNqnNb4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 701,
								"contract": "contracts/Dependencies/TellorCaller.sol:TellorCaller",
								"label": "tellor",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ITellor)492"
							}
						],
						"types": {
							"t_contract(ITellor)492": {
								"encoding": "inplace",
								"label": "contract ITellor",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces/ITellorCaller.sol": {
				"ITellorCaller": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								}
							],
							"name": "getTellorCurrentValue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTellorCurrentValue(uint256)": "32e6aadb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getTellorCurrentValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/ITellorCaller.sol\":\"ITellorCaller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/ITellorCaller.sol\":{\"keccak256\":\"0x5d10a0164c12e374239b57275ebe35df0b100cc7ec9cad4e760b7d37519ec25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://093752adf334cc51a9b15d28231d32e936fd997a9323c25ecac70ffa4c72dd97\",\"dweb:/ipfs/Qmew1hcfrVCG3veYNnEv1BgigmrZ6ik4hRyvMhzGNqnNb4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Dependencies/TellorCaller.sol:23:5:\n   |\n23 |     constructor (address _tellorMasterAddress) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 823,
					"file": "contracts/Dependencies/TellorCaller.sol",
					"start": 718
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Dependencies/ITellor.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/ITellor.sol",
					"exportedSymbols": {
						"ITellor": [
							492
						]
					},
					"id": 493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITellor",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492
							],
							"name": "ITellor",
							"nameLocation": "67:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "81:463:0",
										"text": " @dev Helps initialize a dispute by assigning it a disputeId\n when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\n invalidated value information to POS voting\n @param _requestId being disputed\n @param _timestamp being disputed\n @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\n requires 5 miners to submit a value."
									},
									"functionSelector": "8581af19",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beginDispute",
									"nameLocation": "558:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "588:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "580:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "608:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_minerIndex",
												"nameLocation": "644:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "636:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:91:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:0:0"
									},
									"scope": 492,
									"src": "549:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "677:196:0",
										"text": " @dev Allows token holders to vote\n @param _disputeId is the dispute id\n @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)"
									},
									"functionSelector": "c9d27afe",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "887:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "900:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "892:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_supportsDispute",
												"nameLocation": "917:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "912:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:43:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:0"
									},
									"scope": 492,
									"src": "878:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "950:85:0",
										"text": " @dev tallies the votes.\n @param _disputeId is the dispute id"
									},
									"functionSelector": "4d318b0e",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tallyVotes",
									"nameLocation": "1049:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "1068:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1060:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:20:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 492,
									"src": "1040:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1095:124:0",
										"text": " @dev Allows for a fork to be proposed\n @param _propNewTellorAddress address for new proposed Tellor"
									},
									"functionSelector": "26b7d9f6",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposeFork",
									"nameLocation": "1233:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_propNewTellorAddress",
												"nameLocation": "1253:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1245:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:31:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:0"
									},
									"scope": 492,
									"src": "1224:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1291:271:0",
										"text": " @dev Add tip to Request value from oracle\n @param _requestId being requested to be mined\n @param _tip amount the requester is willing to pay to be get on queue. Miners\n mine the onDeckQueryHash, or the api with the highest payout pool"
									},
									"functionSelector": "752d49a1",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTip",
									"nameLocation": "1576:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "1591:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1583:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_tip",
												"nameLocation": "1611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:34:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1625:0:0"
									},
									"scope": 492,
									"src": "1567:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1632:244:0",
										"text": " @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n @param _nonce uint submitted by miner\n @param _requestId the apiId being mined\n @param _value of api query"
									},
									"functionSelector": "68c180d5",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitMiningSolution",
									"nameLocation": "1890:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1920:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "1960:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1952:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1988:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1980:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:90:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:0:0"
									},
									"scope": 492,
									"src": "1881:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "2016:266:0",
										"text": " @dev This is called by the miner when they submit the PoW solution (proof of work and value)\n @param _nonce uint submitted by miner\n @param _requestId is the array of the 5 PSR's being mined\n @param _value is an array of 5 values"
									},
									"functionSelector": "4350283e",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitMiningSolution",
									"nameLocation": "2296:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "2342:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2326:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "2378:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2358:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_calldata_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 53,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 55,
													"length": {
														"hexValue": "35",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2366:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2358:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2398:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_calldata_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 57,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 59,
													"length": {
														"hexValue": "35",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2398:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:114:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2439:0:0"
									},
									"scope": 492,
									"src": "2287:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2446:269:0",
										"text": " @dev Allows the current owner to propose transfer control of the contract to a\n newOwner and the ownership is pending until the new owner calls the claimOwnership\n function\n @param _pendingOwner The address to transfer ownership to."
									},
									"functionSelector": "710bf322",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposeOwnership",
									"nameLocation": "2729:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_pendingOwner",
												"nameLocation": "2762:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2746:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:31:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2785:0:0"
									},
									"scope": 492,
									"src": "2720:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2792:77:0",
										"text": " @dev Allows the new owner to claim control of the contract"
									},
									"functionSelector": "4e71e0c8",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimOwnership",
									"nameLocation": "2883:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2908:0:0"
									},
									"scope": 492,
									"src": "2874:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2915:75:0",
										"text": " @dev This function allows miners to deposit their stake."
									},
									"functionSelector": "0d2d76a2",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "3004:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:0:0"
									},
									"scope": 492,
									"src": "2995:33:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3034:235:0",
										"text": " @dev This function allows stakers to request to withdraw their stake (no longer stake)\n once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\n can withdraw the stake"
									},
									"functionSelector": "28449c3a",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestStakingWithdraw",
									"nameLocation": "3283:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3316:0:0"
									},
									"scope": 492,
									"src": "3274:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3323:116:0",
										"text": " @dev This function allows users to withdraw their stake after a 7 day waiting period from request"
									},
									"functionSelector": "bed9d861",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "3453:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3466:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3477:0:0"
									},
									"scope": 492,
									"src": "3444:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3484:233:0",
										"text": " @dev This function approves a _spender an _amount of tokens to use\n @param _spender address\n @param _amount amount the spender is being approved for\n @return true if spender appproved successfully"
									},
									"functionSelector": "095ea7b3",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3731:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "3747:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3739:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3765:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3757:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3792:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:6:0"
									},
									"scope": 492,
									"src": "3722:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3804:207:0",
										"text": " @dev Allows for a transfer of tokens to _to\n @param _to The address to send tokens to\n @param _amount The amount of tokens to send\n @return true if transfer is successful"
									},
									"functionSelector": "a9059cbb",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4025:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4042:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4034:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4055:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4047:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4033:30:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:6:0"
									},
									"scope": 492,
									"src": "4016:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4094:338:0",
										"text": " @dev Sends _amount tokens to _to from _from on the condition it\n is approved by _from\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful"
									},
									"functionSelector": "23b872dd",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4446:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4499:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4491:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4520:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:75:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4552:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4551:6:0"
									},
									"scope": 492,
									"src": "4437:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "4564:63:0",
										"text": " @dev Allows users to access the token's name"
									},
									"functionSelector": "06fdde03",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4641:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4645:2:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "4671:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:15:0"
									},
									"scope": 492,
									"src": "4632:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4692:65:0",
										"text": " @dev Allows users to access the token's symbol"
									},
									"functionSelector": "95d89b41",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4771:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4777:2:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4803:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:15:0"
									},
									"scope": 492,
									"src": "4762:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4824:69:0",
										"text": " @dev Allows users to access the number of decimals"
									},
									"functionSelector": "313ce567",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4907:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4915:2:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4941:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 132,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4941:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4940:7:0"
									},
									"scope": 492,
									"src": "4898:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4954:193:0",
										"text": " @dev Getter for the current variables that include the 5 requests Id's\n @return _challenge _requestIds _difficultky _tip the challenge, 5 requestsId, difficulty and tip"
									},
									"functionSelector": "4049f198",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewCurrentVariables",
									"nameLocation": "5161:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5183:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_challenge",
												"nameLocation": "5254:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "5246:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_requestIds",
												"nameLocation": "5296:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "5278:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 140,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 142,
													"length": {
														"hexValue": "35",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5286:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5278:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_difficutly",
												"nameLocation": "5329:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "5321:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_tip",
												"nameLocation": "5362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "5354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5232:144:0"
									},
									"scope": 492,
									"src": "5152:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "5383:109:0",
										"text": " @dev Getter for the top tipped 5 requests Id's\n @return _requestIds the 5 requestsId"
									},
									"functionSelector": "fe1cd15d",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTopRequestIDs",
									"nameLocation": "5506:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5522:2:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_requestIds",
												"nameLocation": "5590:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5572:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 154,
													"length": {
														"hexValue": "35",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5580:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5572:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:31:0"
									},
									"scope": 492,
									"src": "5497:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5609:134:0",
										"text": " @dev Getter for the 5 requests Id's next in line to get mined\n @return idsOnDeck tipsOnDeck  the 5 requestsId"
									},
									"functionSelector": "9a7077ab",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewVariablesOnDeck",
									"nameLocation": "5757:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5778:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsOnDeck",
												"nameLocation": "5846:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5828:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"length": {
														"hexValue": "35",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5836:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5828:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "tipsOnDeck",
												"nameLocation": "5875:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5857:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 166,
													"length": {
														"hexValue": "35",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5865:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "5857:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5827:59:0"
									},
									"scope": 492,
									"src": "5748:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5893:198:0",
										"text": " @dev Updates the Tellor address after a proposed fork has\n passed the vote and day has gone by without a dispute\n @param _disputeId the disputeId for the proposed fork"
									},
									"functionSelector": "f458ab98",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTellor",
									"nameLocation": "6105:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "6126:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "6118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:20:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6146:0:0"
									},
									"scope": 492,
									"src": "6096:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "6153:109:0",
										"text": " @dev Allows disputer to unlock the dispute fee\n @param _disputeId to unlock fee from"
									},
									"functionSelector": "9a01ca13",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockDisputeFee",
									"nameLocation": "6276:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "6301:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6293:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:20:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6321:0:0"
									},
									"scope": 492,
									"src": "6267:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "6328:166:0",
										"text": " @param _user address\n @param _spender address\n @return Returns the remaining allowance of tokens granted to the _spender from the _user"
									},
									"functionSelector": "dd62ed3e",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "6508:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6526:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "6541:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:33:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6597:9:0"
									},
									"scope": 492,
									"src": "6499:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "6613:245:0",
										"text": " @dev This function returns whether or not a given user is allowed to trade a given amount\n @param _user address\n @param _amount uint of amount\n @return true if the user is alloed to trade the amount specified"
									},
									"functionSelector": "999cf26c",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowedToTrade",
									"nameLocation": "6872:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6895:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "6887:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6910:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "6902:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:32:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "6966:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6965:6:0"
									},
									"scope": 492,
									"src": "6863:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "6978:195:0",
										"text": " @dev Gets balance of owner specified\n @param _user is the owner address used to look up the balance\n @return Returns the balance associated with the passed in _user"
									},
									"functionSelector": "70a08231",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7187:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "7205:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "7197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7196:15:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "7235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7234:9:0"
									},
									"scope": 492,
									"src": "7178:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "7250:267:0",
										"text": " @dev Queries the balance of _user at a specific _blockNumber\n @param _user The address from which the balance will be retrieved\n @param _blockNumber The block number when the balance is queried\n @return The balance at _blockNumber"
									},
									"functionSelector": "4ee2cd7e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "7531:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "7551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "7543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "7566:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "7558:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:37:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "7627:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7626:9:0"
									},
									"scope": 492,
									"src": "7522:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "7642:299:0",
										"text": " @dev This function tells you if a given challenge has been completed by a given miner\n @param _challenge the challenge to search for\n @param _miner address that you want to know if they solved the challenge\n @return true if the _miner address provided solved the"
									},
									"functionSelector": "63bb82ad",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "didMine",
									"nameLocation": "7955:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_challenge",
												"nameLocation": "7971:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "7963:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_miner",
												"nameLocation": "7991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "7983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7962:36:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8046:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:6:0"
									},
									"scope": 492,
									"src": "7946:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8058:189:0",
										"text": " @dev Checks if an address voted in a given dispute\n @param _disputeId to look up\n @param _address to look up\n @return bool of whether or not party voted"
									},
									"functionSelector": "a7c438bc",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "didVote",
									"nameLocation": "8261:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "8277:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8269:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "8297:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8268:38:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8354:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:6:0"
									},
									"scope": 492,
									"src": "8252:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "8366:364:0",
										"text": " @dev allows Tellor to read data from the addressVars mapping\n @param _data is the keccak256(\"variable_name\") of the variable that is being accessed.\n These are examples of how the variables are saved within other functions:\n addressVars[keccak256(\"_owner\")]\n addressVars[keccak256(\"tellorContract\")]\n return address"
									},
									"functionSelector": "133bee5e",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressVars",
									"nameLocation": "8744:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8767:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8758:15:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8796:9:0"
									},
									"scope": 492,
									"src": "8735:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "8812:722:0",
										"text": " @dev Gets all dispute variables\n @param _disputeId to look up\n @return bytes32 hash of dispute\n @return bool executed where true if it has been voted on\n @return bool disputeVotePassed\n @return bool isPropFork true if the dispute is a proposed fork\n @return address of reportedMiner\n @return address of reportingParty\n @return address of proposedForkAddress\n    uint of requestId\n    uint of timestamp\n    uint of value\n    uint of minExecutionDate\n    uint of numberOfVotes\n    uint of blocknumber\n    uint of minerSlot\n    uint of quorum\n    uint of fee\n @return int count of the current tally"
									},
									"functionSelector": "af0b1327",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllDisputeVars",
									"nameLocation": "9548:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "9574:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9565:20:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9667:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9784:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 266,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 268,
													"length": {
														"hexValue": "39",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "9784:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "9815:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 270,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9632:199:0"
									},
									"scope": 492,
									"src": "9539:293:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "9838:275:0",
										"text": " @dev Getter function for variables for the requestId being currently mined(currentRequestId)\n @return current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
									},
									"functionSelector": "a22e407a",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVariables",
									"nameLocation": "10127:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10146:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10272:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10299:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10195:142:0"
									},
									"scope": 492,
									"src": "10118:220:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "10344:189:0",
										"text": " @dev Checks if a given hash of miner,requestId has been disputed\n @param _hash is the sha256(abi.encodePacked(_miners[2],_requestId));\n @return uint disputeId"
									},
									"functionSelector": "da379941",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDisputeIdByDisputeHash",
									"nameLocation": "10547:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "10581:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10572:15:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10634:9:0"
									},
									"scope": 492,
									"src": "10538:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10650:485:0",
										"text": " @dev Checks for uint variables in the disputeUintVars mapping based on the disuputeId\n @param _disputeId is the dispute id;\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the disputeUintVars under the Dispute struct\n @return uint value for the bytes32 data submitted"
									},
									"functionSelector": "7f6fd5d9",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDisputeUintVars",
									"nameLocation": "11149:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "_disputeId",
												"nameLocation": "11176:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "11168:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "11188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11167:35:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "11250:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11249:9:0"
									},
									"scope": 492,
									"src": "11140:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "11265:204:0",
										"text": " @dev Gets the a value for the latest timestamp available\n @return value for timestamp of last proof of work submited\n @return true if the is a timestamp for the lastNewValue"
									},
									"functionSelector": "fc7cf0a0",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLastNewValue",
									"nameLocation": "11483:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11498:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "11524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "11533:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11523:15:0"
									},
									"scope": 492,
									"src": "11474:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "11545:235:0",
										"text": " @dev Gets the a value for the latest timestamp available\n @param _requestId being requested\n @return value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
									},
									"functionSelector": "3180f8df",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLastNewValueById",
									"nameLocation": "11794:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "11822:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11814:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:20:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:15:0"
									},
									"scope": 492,
									"src": "11785:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "11902:228:0",
										"text": " @dev Gets blocknumber for mined timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up blocknumber\n @return uint of the blocknumber which the dispute was mined"
									},
									"functionSelector": "c775b542",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinedBlockNum",
									"nameLocation": "12144:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "12169:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "12161:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "12189:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "12181:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12160:40:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "12248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12247:9:0"
									},
									"scope": 492,
									"src": "12135:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "12263:239:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up miners for\n @return the 5 miners' addresses"
									},
									"functionSelector": "69026d63",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinersByRequestIdAndTimestamp",
									"nameLocation": "12516:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "12566:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "12558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "12594:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "12586:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:62:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "12634:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$5_memory_ptr",
													"typeString": "address[5]"
												},
												"typeName": {
													"baseType": {
														"id": 342,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12634:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 344,
													"length": {
														"hexValue": "35",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12642:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "12634:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$5_storage_ptr",
														"typeString": "address[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12633:19:0"
									},
									"scope": 492,
									"src": "12507:146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "12659:356:0",
										"text": " @dev Counts the number of values that have been submited for the request\n if called for the currentRequest being mined it can tell you how many miners have submitted a value for that\n request so far\n @param _requestId the requestId to look up\n @return uint count of the number of values received for the requestId"
									},
									"functionSelector": "46eee1c4",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNewValueCountbyRequestId",
									"nameLocation": "13029:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "13065:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "13057:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:20:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "13124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13123:9:0"
									},
									"scope": 492,
									"src": "13020:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "13139:160:0",
										"text": " @dev Getter function for the specified requestQ index\n @param _index to look up in the requestQ array\n @return uint of reqeuestId"
									},
									"functionSelector": "6173c0b8",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByRequestQIndex",
									"nameLocation": "13313:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "13349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "13341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13340:16:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "13404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13403:9:0"
									},
									"scope": 492,
									"src": "13304:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "13419:150:0",
										"text": " @dev Getter function for requestId based on timestamp\n @param _timestamp to check requestId\n @return uint of reqeuestId"
									},
									"functionSelector": "0f0b424d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByTimestamp",
									"nameLocation": "13583:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "13615:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "13607:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13606:20:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "13674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13673:9:0"
									},
									"scope": 492,
									"src": "13574:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "13689:209:0",
										"text": " @dev Getter function for requestId based on the queryHash\n @param _request is the hash(of string api and granularity) to check if a request already exists\n @return uint requestId"
									},
									"functionSelector": "1db842f0",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestIdByQueryHash",
									"nameLocation": "13912:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_request",
												"nameLocation": "13944:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "13936:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13935:18:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "14001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14000:9:0"
									},
									"scope": 492,
									"src": "13903:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "14016:97:0",
										"text": " @dev Getter function for the requestQ array\n @return the requestQ arrray"
									},
									"functionSelector": "b5413029",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestQ",
									"nameLocation": "14127:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14138:2:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "14164:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 384,
													"length": {
														"hexValue": "3531",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14172:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "14164:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14163:20:0"
									},
									"scope": 492,
									"src": "14118:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "14190:563:0",
										"text": " @dev Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct\n for the requestId specified\n @param _requestId to look up\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the apiUintVars under the requestDetails struct\n @return uint value of the apiUintVars specified in _data for the requestId specified"
									},
									"functionSelector": "e0ae93c1",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestUintVars",
									"nameLocation": "14767:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "14794:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14786:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14814:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14806:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 391,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14785:35:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14867:9:0"
									},
									"scope": 492,
									"src": "14758:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "14883:411:0",
										"text": " @dev Gets the API struct variables that are not mappings\n @param _requestId to look up\n @return string of api to query\n @return string of symbol of api to query\n @return bytes32 hash of string\n @return bytes32 of the granularity(decimal places) requested\n @return uint of index in requestQ array\n @return uint of current payout/tip for this requestId"
									},
									"functionSelector": "e1eee6d6",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestVars",
									"nameLocation": "15308:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "15331:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15323:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15322:20:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15403:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "15520:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15389:148:0"
									},
									"scope": 492,
									"src": "15299:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "15544:234:0",
										"text": " @dev This function allows users to retireve all information about a staker\n @param _staker address of staker inquiring about\n @return uint current state of staker\n @return uint startDate of staking"
									},
									"functionSelector": "733bdef0",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerInfo",
									"nameLocation": "15792:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "15814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "15806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15805:17:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "15870:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "15879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15869:18:0"
									},
									"scope": 492,
									"src": "15783:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "15894:282:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestampt to look up miners for\n @return address[5] array of 5 addresses ofminers that mined the requestId"
									},
									"functionSelector": "11c98512",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubmissionsByTimestamp",
									"nameLocation": "16190:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "16224:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "16216:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "16244:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "16236:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16215:40:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "16303:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 434,
													"length": {
														"hexValue": "35",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16311:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "16303:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16302:19:0"
									},
									"scope": 492,
									"src": "16181:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "16328:211:0",
										"text": " @dev Gets the timestamp for the value based on their index\n @param _requestID is the requestId to look up\n @param _index is the value index to look up\n @return uint timestamp"
									},
									"functionSelector": "77fbb663",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestampbyRequestIDandIndex",
									"nameLocation": "16553:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_requestID",
												"nameLocation": "16593:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "16585:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "16613:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "16605:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16584:36:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "16668:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16667:9:0"
									},
									"scope": 492,
									"src": "16544:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "16683:564:0",
										"text": " @dev Getter for the variables saved under the TellorStorageStruct uintVars variable\n @param _data the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is\n the variables/strings used to save the data in the mapping. The variables names are\n commented out under the uintVars under the TellorStorageStruct struct\n This is an example of how data is saved into the mapping within other functions:\n self.uintVars[keccak256(\"stakerCount\")]\n @return uint of specified variable"
									},
									"functionSelector": "612c8f7f",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUintVar",
									"nameLocation": "17261:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17280:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "17272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17271:15:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "17310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17309:9:0"
									},
									"scope": 492,
									"src": "17252:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "17325:229:0",
										"text": " @dev Getter function for next requestId on queue/request with highest payout at time the function is called\n @return onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
									},
									"functionSelector": "19e8e03b",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVariablesOnDeck",
									"nameLocation": "17568:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17586:2:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17670:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17691:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17635:79:0"
									},
									"scope": 492,
									"src": "17559:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "17721:265:0",
										"text": " @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n @param _requestId to look up\n @param _timestamp is the timestamp to look up miners for\n @return bool true if requestId/timestamp is under dispute"
									},
									"functionSelector": "3df0777b",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInDispute",
									"nameLocation": "18000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "18020:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "18012:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "18040:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "18032:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18011:40:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "18099:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18098:6:0"
									},
									"scope": 492,
									"src": "17991:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "18111:208:0",
										"text": " @dev Retreive value from oracle based on timestamp\n @param _requestId being requested\n @param _timestamp to retreive data/value from\n @return value for timestamp submitted"
									},
									"functionSelector": "93fa4915",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "retrieveData",
									"nameLocation": "18333:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "18354:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "18346:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "18374:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "18366:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18345:40:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "18433:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18432:9:0"
									},
									"scope": 492,
									"src": "18324:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "18448:101:0",
										"text": " @dev Getter for the total_supply of oracle tokens\n @return uint total supply"
									},
									"functionSelector": "18160ddd",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "18563:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18574:2:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "18600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18599:9:0"
									},
									"scope": 492,
									"src": "18554:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "57:18554:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:18579:0"
				},
				"id": 0
			},
			"contracts/Dependencies/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 494,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 495,
								"nodeType": "StructuredDocumentation",
								"src": "58:701:1",
								"text": " Based on OpenZeppelin's SafeMath:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "SafeMath",
							"nameLocation": "768:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1072:109:1",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1090:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1082:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1082:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "1094:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 508,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1098:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1094:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1082:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "1117:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 513,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "1122:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1109:46:1"
											},
											{
												"expression": {
													"id": 518,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 506,
													"src": "1173:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 519,
												"nodeType": "Return",
												"src": "1166:8:1"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "783:217:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1014:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1063:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:9:1"
									},
									"scope": 688,
									"src": "1005:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1512:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "1533:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 533,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "1536:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 531,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															538,
															566
														],
														"referencedDeclaration": 566,
														"src": "1529:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 530,
												"id": 536,
												"nodeType": "Return",
												"src": "1522:50:1"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1187:253:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1454:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1466:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1458:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1477:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1469:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:22:1"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1503:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:1"
									},
									"scope": 688,
									"src": "1445:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "1998:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "2016:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 552,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "2021:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2016:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2024:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2008:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2008:29:1"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2055:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "2047:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2047:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 559,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2059:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2063:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2047:17:1"
											},
											{
												"expression": {
													"id": 563,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 564,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1585:313:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1912:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1924:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1916:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1935:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1927:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1952:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1938:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:50:1"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1989:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:9:1"
									},
									"scope": 688,
									"src": "1903:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "2397:392:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 576,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2629:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2629:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "2625:45:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "2637:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 575,
															"id": 580,
															"nodeType": "Return",
															"src": "2651:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2688:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "2680:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2692:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 586,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2696:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 590,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "2715:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 591,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "2719:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2715:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 593,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2724:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2715:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2707:56:1"
											},
											{
												"expression": {
													"id": 598,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 584,
													"src": "2781:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 575,
												"id": 599,
												"nodeType": "Return",
												"src": "2774:8:1"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "2096:229:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2339:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2362:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2354:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:1"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2388:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:9:1"
									},
									"scope": 688,
									"src": "2330:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "3311:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3332:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 613,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "3335:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 611,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															618,
															646
														],
														"referencedDeclaration": 646,
														"src": "3328:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 616,
												"nodeType": "Return",
												"src": "3321:46:1"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2795:444:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3253:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3265:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3257:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3276:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3268:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:22:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3302:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:9:1"
									},
									"scope": 688,
									"src": "3244:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "3984:243:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4068:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4072:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4068:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 634,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4075:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "4060:28:1"
											},
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4106:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "4098:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4098:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 639,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "4110:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 640,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "4114:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4110:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4098:17:1"
											},
											{
												"expression": {
													"id": 643,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "4219:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 629,
												"id": 644,
												"nodeType": "Return",
												"src": "4212:8:1"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "3380:504:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3898:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3910:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3902:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3921:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3913:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3938:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3924:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 624,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3924:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:50:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3975:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:1"
									},
									"scope": 688,
									"src": "3889:338:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "4738:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4759:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 658,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4762:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4765:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 656,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															663,
															687
														],
														"referencedDeclaration": 687,
														"src": "4755:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 661,
												"nodeType": "Return",
												"src": "4748:44:1"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "4233:433:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4680:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4692:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4684:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4703:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4695:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:22:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4729:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4728:9:1"
									},
									"scope": 688,
									"src": "4671:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "5398:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "5416:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5416:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 679,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5424:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5408:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "5408:29:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5454:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 683,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5458:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5454:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 685,
												"nodeType": "Return",
												"src": "5447:12:1"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "4805:493:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5312:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5324:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5316:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5335:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5327:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5352:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5338:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5338:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:50:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5389:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:9:1"
									},
									"scope": 688,
									"src": "5303:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 689,
							"src": "760:4708:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5436:1"
				},
				"id": 1
			},
			"contracts/Dependencies/TellorCaller.sol": {
				"ast": {
					"absolutePath": "contracts/Dependencies/TellorCaller.sol",
					"exportedSymbols": {
						"ITellor": [
							492
						],
						"ITellorCaller": [
							781
						],
						"SafeMath": [
							688
						],
						"TellorCaller": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/Interfaces/ITellorCaller.sol",
							"file": "../Interfaces/ITellorCaller.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 782,
							"src": "58:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/ITellor.sol",
							"file": "./ITellor.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 493,
							"src": "100:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dependencies/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 689,
							"src": "124:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 694,
										"name": "ITellorCaller",
										"nameLocations": [
											"637:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 781,
										"src": "637:13:2"
									},
									"id": 695,
									"nodeType": "InheritanceSpecifier",
									"src": "637:13:2"
								}
							],
							"canonicalName": "TellorCaller",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767,
								781
							],
							"name": "TellorCaller",
							"nameLocation": "621:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 698,
									"libraryName": {
										"id": 696,
										"name": "SafeMath",
										"nameLocations": [
											"663:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "663:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "657:27:2",
									"typeName": {
										"id": 697,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1959ad5b",
									"id": 701,
									"mutability": "mutable",
									"name": "tellor",
									"nameLocation": "705:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "690:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITellor_$492",
										"typeString": "contract ITellor"
									},
									"typeName": {
										"id": 700,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 699,
											"name": "ITellor",
											"nameLocations": [
												"690:7:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 492,
											"src": "690:7:2"
										},
										"referencedDeclaration": 492,
										"src": "690:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITellor_$492",
											"typeString": "contract ITellor"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "768:55:2",
										"statements": [
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "tellor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "778:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITellor_$492",
															"typeString": "contract ITellor"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 708,
																"name": "_tellorMasterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "795:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 707,
															"name": "ITellor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "787:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITellor_$492_$",
																"typeString": "type(contract ITellor)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "787:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITellor_$492",
															"typeString": "contract ITellor"
														}
													},
													"src": "778:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITellor_$492",
														"typeString": "contract ITellor"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "778:38:2"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "_tellorMasterAddress",
												"nameLocation": "739:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "731:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:2"
									},
									"scope": 767,
									"src": "718:105:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "1504:336:2",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "_count",
														"nameLocation": "1522:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "1514:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"arguments": [
														{
															"id": 729,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1566:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 727,
															"name": "tellor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1531:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITellor_$492",
																"typeString": "contract ITellor"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1538:27:2",
														"memberName": "getNewValueCountbyRequestId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "1531:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1514:63:2"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "_time",
														"nameLocation": "1595:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "1587:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1587:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"arguments": [
														{
															"id": 736,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1654:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1677:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 737,
																	"name": "_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "1666:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1673:3:2",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1666:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1666:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 734,
															"name": "tellor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1615:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITellor_$492",
																"typeString": "contract ITellor"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:31:2",
														"memberName": "getTimestampbyRequestIDandIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 447,
														"src": "1615:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view external returns (uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1587:93:2"
											},
											{
												"assignments": [
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "_value",
														"nameLocation": "1698:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "1690:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1690:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"arguments": [
														{
															"id": 747,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1727:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 748,
															"name": "_time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "1739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 745,
															"name": "tellor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1707:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITellor_$492",
																"typeString": "contract ITellor"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1714:12:2",
														"memberName": "retrieveData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "1707:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view external returns (uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1707:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1690:55:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "1759:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1759:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "1755:44:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1779:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 755,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "1785:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 756,
																"name": "_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "1793:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 757,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1778:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"functionReturnParameters": 724,
													"id": 758,
													"nodeType": "Return",
													"src": "1771:28:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1817:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1824:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 762,
															"name": "_time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "1827:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 763,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1816:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_uint256_$",
														"typeString": "tuple(bool,int_const 0,uint256)"
													}
												},
												"functionReturnParameters": 724,
												"id": 764,
												"nodeType": "Return",
												"src": "1809:24:2"
											}
										]
									},
									"functionSelector": "32e6aadb",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTellorCurrentValue",
									"nameLocation": "1287:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1367:8:2"
									},
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "1317:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1309:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:20:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "ifRetrieve",
												"nameLocation": "1411:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1406:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1443:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1435:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "_timestampRetrieved",
												"nameLocation": "1470:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1462:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:107:2"
									},
									"scope": 767,
									"src": "1278:562:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "612:1230:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1810:2"
				},
				"id": 2
			},
			"contracts/Interfaces/ITellorCaller.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces/ITellorCaller.sol",
					"exportedSymbols": {
						"ITellorCaller": [
							781
						]
					},
					"id": 782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITellorCaller",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 781,
							"linearizedBaseContracts": [
								781
							],
							"name": "ITellorCaller",
							"nameLocation": "68:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "32e6aadb",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTellorCurrentValue",
									"nameLocation": "97:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "127:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "119:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:20:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "162:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "162:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "168:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "177:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "161:24:3"
									},
									"scope": 781,
									"src": "88:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "58:130:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:155:3"
				},
				"id": 3
			}
		}
	}
}